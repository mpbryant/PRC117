'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("StoredPresetsDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class StoredPresetsDataSet
    Inherits Global.System.Data.DataSet
    
    Private tablePRCtrainer As PRCtrainerDataTable
    
    Private tableSATCOMpresets As SATCOMpresetsDataTable
    
    Private tableOptionCodes25kHz As OptionCodes25kHzDataTable
    
    Private tableOptionCodes5kHz As OptionCodes5kHzDataTable
    
    Private tableCTCSS As CTCSSDataTable
    
    Private tableGlobalSavedItems As GlobalSavedItemsDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("PRCtrainer")) Is Nothing) Then
                MyBase.Tables.Add(New PRCtrainerDataTable(ds.Tables("PRCtrainer")))
            End If
            If (Not (ds.Tables("SATCOMpresets")) Is Nothing) Then
                MyBase.Tables.Add(New SATCOMpresetsDataTable(ds.Tables("SATCOMpresets")))
            End If
            If (Not (ds.Tables("OptionCodes25kHz")) Is Nothing) Then
                MyBase.Tables.Add(New OptionCodes25kHzDataTable(ds.Tables("OptionCodes25kHz")))
            End If
            If (Not (ds.Tables("OptionCodes5kHz")) Is Nothing) Then
                MyBase.Tables.Add(New OptionCodes5kHzDataTable(ds.Tables("OptionCodes5kHz")))
            End If
            If (Not (ds.Tables("CTCSS")) Is Nothing) Then
                MyBase.Tables.Add(New CTCSSDataTable(ds.Tables("CTCSS")))
            End If
            If (Not (ds.Tables("GlobalSavedItems")) Is Nothing) Then
                MyBase.Tables.Add(New GlobalSavedItemsDataTable(ds.Tables("GlobalSavedItems")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PRCtrainer() As PRCtrainerDataTable
        Get
            Return Me.tablePRCtrainer
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SATCOMpresets() As SATCOMpresetsDataTable
        Get
            Return Me.tableSATCOMpresets
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OptionCodes25kHz() As OptionCodes25kHzDataTable
        Get
            Return Me.tableOptionCodes25kHz
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OptionCodes5kHz() As OptionCodes5kHzDataTable
        Get
            Return Me.tableOptionCodes5kHz
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CTCSS() As CTCSSDataTable
        Get
            Return Me.tableCTCSS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property GlobalSavedItems() As GlobalSavedItemsDataTable
        Get
            Return Me.tableGlobalSavedItems
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As StoredPresetsDataSet = CType(MyBase.Clone,StoredPresetsDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("PRCtrainer")) Is Nothing) Then
                MyBase.Tables.Add(New PRCtrainerDataTable(ds.Tables("PRCtrainer")))
            End If
            If (Not (ds.Tables("SATCOMpresets")) Is Nothing) Then
                MyBase.Tables.Add(New SATCOMpresetsDataTable(ds.Tables("SATCOMpresets")))
            End If
            If (Not (ds.Tables("OptionCodes25kHz")) Is Nothing) Then
                MyBase.Tables.Add(New OptionCodes25kHzDataTable(ds.Tables("OptionCodes25kHz")))
            End If
            If (Not (ds.Tables("OptionCodes5kHz")) Is Nothing) Then
                MyBase.Tables.Add(New OptionCodes5kHzDataTable(ds.Tables("OptionCodes5kHz")))
            End If
            If (Not (ds.Tables("CTCSS")) Is Nothing) Then
                MyBase.Tables.Add(New CTCSSDataTable(ds.Tables("CTCSS")))
            End If
            If (Not (ds.Tables("GlobalSavedItems")) Is Nothing) Then
                MyBase.Tables.Add(New GlobalSavedItemsDataTable(ds.Tables("GlobalSavedItems")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablePRCtrainer = CType(MyBase.Tables("PRCtrainer"),PRCtrainerDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePRCtrainer) Is Nothing) Then
                Me.tablePRCtrainer.InitVars
            End If
        End If
        Me.tableSATCOMpresets = CType(MyBase.Tables("SATCOMpresets"),SATCOMpresetsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSATCOMpresets) Is Nothing) Then
                Me.tableSATCOMpresets.InitVars
            End If
        End If
        Me.tableOptionCodes25kHz = CType(MyBase.Tables("OptionCodes25kHz"),OptionCodes25kHzDataTable)
        If (initTable = true) Then
            If (Not (Me.tableOptionCodes25kHz) Is Nothing) Then
                Me.tableOptionCodes25kHz.InitVars
            End If
        End If
        Me.tableOptionCodes5kHz = CType(MyBase.Tables("OptionCodes5kHz"),OptionCodes5kHzDataTable)
        If (initTable = true) Then
            If (Not (Me.tableOptionCodes5kHz) Is Nothing) Then
                Me.tableOptionCodes5kHz.InitVars
            End If
        End If
        Me.tableCTCSS = CType(MyBase.Tables("CTCSS"),CTCSSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCTCSS) Is Nothing) Then
                Me.tableCTCSS.InitVars
            End If
        End If
        Me.tableGlobalSavedItems = CType(MyBase.Tables("GlobalSavedItems"),GlobalSavedItemsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableGlobalSavedItems) Is Nothing) Then
                Me.tableGlobalSavedItems.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "StoredPresetsDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/StoredPresetsDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablePRCtrainer = New PRCtrainerDataTable()
        MyBase.Tables.Add(Me.tablePRCtrainer)
        Me.tableSATCOMpresets = New SATCOMpresetsDataTable()
        MyBase.Tables.Add(Me.tableSATCOMpresets)
        Me.tableOptionCodes25kHz = New OptionCodes25kHzDataTable()
        MyBase.Tables.Add(Me.tableOptionCodes25kHz)
        Me.tableOptionCodes5kHz = New OptionCodes5kHzDataTable()
        MyBase.Tables.Add(Me.tableOptionCodes5kHz)
        Me.tableCTCSS = New CTCSSDataTable()
        MyBase.Tables.Add(Me.tableCTCSS)
        Me.tableGlobalSavedItems = New GlobalSavedItemsDataTable()
        MyBase.Tables.Add(Me.tableGlobalSavedItems)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePRCtrainer() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSATCOMpresets() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeOptionCodes25kHz() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeOptionCodes5kHz() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCTCSS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeGlobalSavedItems() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As StoredPresetsDataSet = New StoredPresetsDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PRCtrainerRowChangeEventHandler(ByVal sender As Object, ByVal e As PRCtrainerRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SATCOMpresetsRowChangeEventHandler(ByVal sender As Object, ByVal e As SATCOMpresetsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub OptionCodes25kHzRowChangeEventHandler(ByVal sender As Object, ByVal e As OptionCodes25kHzRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub OptionCodes5kHzRowChangeEventHandler(ByVal sender As Object, ByVal e As OptionCodes5kHzRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CTCSSRowChangeEventHandler(ByVal sender As Object, ByVal e As CTCSSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub GlobalSavedItemsRowChangeEventHandler(ByVal sender As Object, ByVal e As GlobalSavedItemsRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PRCtrainerDataTable
        Inherits Global.System.Data.TypedTableBase(Of PRCtrainerRow)
        
        Private columnPresetNumber As Global.System.Data.DataColumn
        
        Private columnPresetName As Global.System.Data.DataColumn
        
        Private columnPresetType As Global.System.Data.DataColumn
        
        Private columnPresetTraffic As Global.System.Data.DataColumn
        
        Private columnPresetModulation As Global.System.Data.DataColumn
        
        Private columnPresetDescription As Global.System.Data.DataColumn
        
        Private columnPresetRXfreq As Global.System.Data.DataColumn
        
        Private columnPresetTXfreq As Global.System.Data.DataColumn
        
        Private columnPresetWaveform As Global.System.Data.DataColumn
        
        Private columnPresetChannel As Global.System.Data.DataColumn
        
        Private columnPresetKey As Global.System.Data.DataColumn
        
        Private columnPresetOptionCode As Global.System.Data.DataColumn
        
        Private columnPresetBandwidth As Global.System.Data.DataColumn
        
        Private columnPresetBPSrate As Global.System.Data.DataColumn
        
        Private columnPresetVoiceMode As Global.System.Data.DataColumn
        
        Private columnPresetInterleaveDepth As Global.System.Data.DataColumn
        
        Private columnPresetFWDerrorCorrection As Global.System.Data.DataColumn
        
        Private columnPresetSquelch As Global.System.Data.DataColumn
        
        Private columnPresetCryptoMode As Global.System.Data.DataColumn
        
        Private columnPresetCryptoKey As Global.System.Data.DataColumn
        
        Private columnPresetSatcomChannel As Global.System.Data.DataColumn
        
        Private columnPresetDataMode As Global.System.Data.DataColumn
        
        Private columnPresetFascinatorMode As Global.System.Data.DataColumn
        
        Private columnPresetAESmode As Global.System.Data.DataColumn
        
        Private columnPresetKG84Mode As Global.System.Data.DataColumn
        
        Private columnPresetANDVTframes As Global.System.Data.DataColumn
        
        Private columnPresetRXfade As Global.System.Data.DataColumn
        
        Private columnPresetANDVTautoswitch As Global.System.Data.DataColumn
        
        Private columnPresetKeySource As Global.System.Data.DataColumn
        
        Private columnPresetCodebook As Global.System.Data.DataColumn
        
        Private columnPresetDeviation As Global.System.Data.DataColumn
        
        Private columnPresetOptMod As Global.System.Data.DataColumn
        
        Private columnPresetTXpower As Global.System.Data.DataColumn
        
        Private columnPresetTXpowerDown As Global.System.Data.DataColumn
        
        Private columnPresetManualSquelchSetting As Global.System.Data.DataColumn
        
        Private columnPresetCTCSS As Global.System.Data.DataColumn
        
        Private columnPresetRxSquelch As Global.System.Data.DataColumn
        
        Private columnPresetCTCSSuserEntry As Global.System.Data.DataColumn
        
        Private columnPresetCTCSSrxUserEntry As Global.System.Data.DataColumn
        
        Private columnPresetCTCSSrx As Global.System.Data.DataColumn
        
        Private columnPresetChannelBusyPriority As Global.System.Data.DataColumn
        
        Private columnPresetCDCSStxCode As Global.System.Data.DataColumn
        
        Private columnPresetCDCSSrxCode As Global.System.Data.DataColumn
        
        Private columnPresetVinsonCompatibility As Global.System.Data.DataColumn
        
        Private columnPresetBeaconFreq As Global.System.Data.DataColumn
        
        Private columnPresetBeaconMod As Global.System.Data.DataColumn
        
        Private columnPresetBeaconTxDuration As Global.System.Data.DataColumn
        
        Private columnPresetBeaconOffDuration As Global.System.Data.DataColumn
        
        Private columnPresetBeaconTxPower As Global.System.Data.DataColumn
        
        Private columnPresetSpare As Global.System.Data.DataColumn

        Private columnPresetInScanList As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "PRCtrainer"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetNumber
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetType
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetTrafficColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetTraffic
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetModulationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetModulation
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetDescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetDescription
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetRXfreqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetRXfreq
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetTXfreqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetTXfreq
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetWaveformColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetWaveform
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetChannelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetChannel
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetKeyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetKey
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetOptionCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetOptionCode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetBandwidthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetBandwidth
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetBPSrateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetBPSrate
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetVoiceModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetVoiceMode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetInterleaveDepthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetInterleaveDepth
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetFWDerrorCorrectionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetFWDerrorCorrection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetSquelchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetSquelch
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetCryptoModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetCryptoMode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetCryptoKeyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetCryptoKey
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetSatcomChannelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetSatcomChannel
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetDataModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetDataMode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetFascinatorModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetFascinatorMode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetAESmodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetAESmode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetKG84ModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetKG84Mode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetANDVTframesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetANDVTframes
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetRXfadeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetRXfade
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetANDVTautoswitchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetANDVTautoswitch
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetKeySourceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetKeySource
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetCodebookColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetCodebook
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetDeviationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetDeviation
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetOptModColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetOptMod
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetTXpowerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetTXpower
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetTXpowerDownColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetTXpowerDown
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetManualSquelchSettingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetManualSquelchSetting
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetCTCSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetCTCSS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetRxSquelchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetRxSquelch
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetCTCSSuserEntryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetCTCSSuserEntry
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetCTCSSrxUserEntryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetCTCSSrxUserEntry
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetCTCSSrxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetCTCSSrx
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetChannelBusyPriorityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetChannelBusyPriority
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetCDCSStxCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetCDCSStxCode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetCDCSSrxCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetCDCSSrxCode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetVinsonCompatibilityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetVinsonCompatibility
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetBeaconFreqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetBeaconFreq
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetBeaconModColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetBeaconMod
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetBeaconTxDurationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetBeaconTxDuration
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetBeaconOffDurationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetBeaconOffDuration
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetBeaconTxPowerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetBeaconTxPower
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetSpareColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetSpare
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresetInScanListColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresetInScanList
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As PRCtrainerRow
            Get
                Return CType(Me.Rows(index), PRCtrainerRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PRCtrainerRowChanging As PRCtrainerRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PRCtrainerRowChanged As PRCtrainerRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PRCtrainerRowDeleting As PRCtrainerRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PRCtrainerRowDeleted As PRCtrainerRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddPRCtrainerRow(ByVal row As PRCtrainerRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddPRCtrainerRow( _
                    ByVal PresetNumber As String, _
                    ByVal PresetName As String, _
                    ByVal PresetType As String, _
                    ByVal PresetTraffic As String, _
                    ByVal PresetModulation As String, _
                    ByVal PresetDescription As String, _
                    ByVal PresetRXfreq As String, _
                    ByVal PresetTXfreq As String, _
                    ByVal PresetWaveform As String, _
                    ByVal PresetChannel As String, _
                    ByVal PresetKey As String, _
                    ByVal PresetOptionCode As String, _
                    ByVal PresetBandwidth As String, _
                    ByVal PresetBPSrate As String, _
                    ByVal PresetVoiceMode As String, _
                    ByVal PresetInterleaveDepth As String, _
                    ByVal PresetFWDerrorCorrection As String, _
                    ByVal PresetSquelch As String, _
                    ByVal PresetCryptoMode As String, _
                    ByVal PresetCryptoKey As String, _
                    ByVal PresetSatcomChannel As String, _
                    ByVal PresetDataMode As String, _
                    ByVal PresetFascinatorMode As String, _
                    ByVal PresetAESmode As String, _
                    ByVal PresetKG84Mode As String, _
                    ByVal PresetANDVTframes As String, _
                    ByVal PresetRXfade As String, _
                    ByVal PresetANDVTautoswitch As String, _
                    ByVal PresetKeySource As String, _
                    ByVal PresetCodebook As String, _
                    ByVal PresetDeviation As String, _
                    ByVal PresetOptMod As String, _
                    ByVal PresetTXpower As String, _
                    ByVal PresetTXpowerDown As String, _
                    ByVal PresetManualSquelchSetting As Integer, _
                    ByVal PresetCTCSS As String, _
                    ByVal PresetRxSquelch As String, _
                    ByVal PresetCTCSSuserEntry As String, _
                    ByVal PresetCTCSSrxUserEntry As String, _
                    ByVal PresetCTCSSrx As String, _
                    ByVal PresetChannelBusyPriority As String, _
                    ByVal PresetCDCSStxCode As String, _
                    ByVal PresetCDCSSrxCode As String, _
                    ByVal PresetVinsonCompatibility As String, _
                    ByVal PresetBeaconFreq As String, _
                    ByVal PresetBeaconMod As String, _
                    ByVal PresetBeaconTxDuration As String, _
                    ByVal PresetBeaconOffDuration As String, _
                    ByVal PresetBeaconTxPower As String, _
                    ByVal PresetSpare As String, _
                    ByVal PresetInScanList As String) As PRCtrainerRow
            Dim rowPRCtrainerRow As PRCtrainerRow = CType(Me.NewRow, PRCtrainerRow)
            Dim columnValuesArray() As Object = New Object() {PresetNumber, PresetName, PresetType, PresetTraffic, PresetModulation, PresetDescription, PresetRXfreq, PresetTXfreq, PresetWaveform, PresetChannel, PresetKey, PresetOptionCode, PresetBandwidth, PresetBPSrate, PresetVoiceMode, PresetInterleaveDepth, PresetFWDerrorCorrection, PresetSquelch, PresetCryptoMode, PresetCryptoKey, PresetSatcomChannel, PresetDataMode, PresetFascinatorMode, PresetAESmode, PresetKG84Mode, PresetANDVTframes, PresetRXfade, PresetANDVTautoswitch, PresetKeySource, PresetCodebook, PresetDeviation, PresetOptMod, PresetTXpower, PresetTXpowerDown, PresetManualSquelchSetting, PresetCTCSS, PresetRxSquelch, PresetCTCSSuserEntry, PresetCTCSSrxUserEntry, PresetCTCSSrx, PresetChannelBusyPriority, PresetCDCSStxCode, PresetCDCSSrxCode, PresetVinsonCompatibility, PresetBeaconFreq, PresetBeaconMod, PresetBeaconTxDuration, PresetBeaconOffDuration, PresetBeaconTxPower, PresetSpare, PresetInScanList}
            rowPRCtrainerRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPRCtrainerRow)
            Return rowPRCtrainerRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByPresetNumber(ByVal PresetNumber As String) As PRCtrainerRow
            Return CType(Me.Rows.Find(New Object() {PresetNumber}), PRCtrainerRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PRCtrainerDataTable = CType(MyBase.Clone, PRCtrainerDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PRCtrainerDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnPresetNumber = MyBase.Columns("PresetNumber")
            Me.columnPresetName = MyBase.Columns("PresetName")
            Me.columnPresetType = MyBase.Columns("PresetType")
            Me.columnPresetTraffic = MyBase.Columns("PresetTraffic")
            Me.columnPresetModulation = MyBase.Columns("PresetModulation")
            Me.columnPresetDescription = MyBase.Columns("PresetDescription")
            Me.columnPresetRXfreq = MyBase.Columns("PresetRXfreq")
            Me.columnPresetTXfreq = MyBase.Columns("PresetTXfreq")
            Me.columnPresetWaveform = MyBase.Columns("PresetWaveform")
            Me.columnPresetChannel = MyBase.Columns("PresetChannel")
            Me.columnPresetKey = MyBase.Columns("PresetKey")
            Me.columnPresetOptionCode = MyBase.Columns("PresetOptionCode")
            Me.columnPresetBandwidth = MyBase.Columns("PresetBandwidth")
            Me.columnPresetBPSrate = MyBase.Columns("PresetBPSrate")
            Me.columnPresetVoiceMode = MyBase.Columns("PresetVoiceMode")
            Me.columnPresetInterleaveDepth = MyBase.Columns("PresetInterleaveDepth")
            Me.columnPresetFWDerrorCorrection = MyBase.Columns("PresetFWDerrorCorrection")
            Me.columnPresetSquelch = MyBase.Columns("PresetSquelch")
            Me.columnPresetCryptoMode = MyBase.Columns("PresetCryptoMode")
            Me.columnPresetCryptoKey = MyBase.Columns("PresetCryptoKey")
            Me.columnPresetSatcomChannel = MyBase.Columns("PresetSatcomChannel")
            Me.columnPresetDataMode = MyBase.Columns("PresetDataMode")
            Me.columnPresetFascinatorMode = MyBase.Columns("PresetFascinatorMode")
            Me.columnPresetAESmode = MyBase.Columns("PresetAESMode")
            Me.columnPresetKG84Mode = MyBase.Columns("PresetKG84Mode")
            Me.columnPresetANDVTframes = MyBase.Columns("PresetANDVTframes")
            Me.columnPresetRXfade = MyBase.Columns("PresetRXfade")
            Me.columnPresetANDVTautoswitch = MyBase.Columns("PresetANDVTautoswitch")
            Me.columnPresetKeySource = MyBase.Columns("PresetKeySource")
            Me.columnPresetCodebook = MyBase.Columns("PresetCodebook")
            Me.columnPresetDeviation = MyBase.Columns("PresetDeviation")
            Me.columnPresetOptMod = MyBase.Columns("PresetOptMod")
            Me.columnPresetTXpower = MyBase.Columns("PresetTXpower")
            Me.columnPresetTXpowerDown = MyBase.Columns("PresetTXpowerDown")
            Me.columnPresetManualSquelchSetting = MyBase.Columns("PresetManualSquelchSetting")
            Me.columnPresetCTCSS = MyBase.Columns("PresetCTCSS")
            Me.columnPresetRxSquelch = MyBase.Columns("PresetRxSquelch")
            Me.columnPresetCTCSSuserEntry = MyBase.Columns("PresetCTCSSuserEntry")
            Me.columnPresetCTCSSrxUserEntry = MyBase.Columns("PresetCTCSSrxUserEntry")
            Me.columnPresetCTCSSrx = MyBase.Columns("PresetCTCSSrx")
            Me.columnPresetChannelBusyPriority = MyBase.Columns("PresetChannelBusyPriority")
            Me.columnPresetCDCSStxCode = MyBase.Columns("PresetCDCSStxCode")
            Me.columnPresetCDCSSrxCode = MyBase.Columns("PresetCDCSSrxCode")
            Me.columnPresetVinsonCompatibility = MyBase.Columns("PresetVinsonCompatibility")
            Me.columnPresetBeaconFreq = MyBase.Columns("PresetBeaconFreq")
            Me.columnPresetBeaconMod = MyBase.Columns("PresetBeaconMod")
            Me.columnPresetBeaconTxDuration = MyBase.Columns("PresetBeaconTxDuration")
            Me.columnPresetBeaconOffDuration = MyBase.Columns("PresetBeaconOffDuration")
            Me.columnPresetBeaconTxPower = MyBase.Columns("PresetBeaconTxPower")
            Me.columnPresetSpare = MyBase.Columns("PresetSpare")
            Me.columnPresetInScanList = MyBase.Columns("PresetInScanList")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnPresetNumber = New Global.System.Data.DataColumn("PresetNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetNumber)
            Me.columnPresetName = New Global.System.Data.DataColumn("PresetName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetName)
            Me.columnPresetType = New Global.System.Data.DataColumn("PresetType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetType)
            Me.columnPresetTraffic = New Global.System.Data.DataColumn("PresetTraffic", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetTraffic)
            Me.columnPresetModulation = New Global.System.Data.DataColumn("PresetModulation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetModulation)
            Me.columnPresetDescription = New Global.System.Data.DataColumn("PresetDescription", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetDescription)
            Me.columnPresetRXfreq = New Global.System.Data.DataColumn("PresetRXfreq", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetRXfreq)
            Me.columnPresetTXfreq = New Global.System.Data.DataColumn("PresetTXfreq", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetTXfreq)
            Me.columnPresetWaveform = New Global.System.Data.DataColumn("PresetWaveform", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetWaveform)
            Me.columnPresetChannel = New Global.System.Data.DataColumn("PresetChannel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetChannel)
            Me.columnPresetKey = New Global.System.Data.DataColumn("PresetKey", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetKey)
            Me.columnPresetOptionCode = New Global.System.Data.DataColumn("PresetOptionCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetOptionCode)
            Me.columnPresetBandwidth = New Global.System.Data.DataColumn("PresetBandwidth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetBandwidth)
            Me.columnPresetBPSrate = New Global.System.Data.DataColumn("PresetBPSrate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetBPSrate)
            Me.columnPresetVoiceMode = New Global.System.Data.DataColumn("PresetVoiceMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetVoiceMode)
            Me.columnPresetInterleaveDepth = New Global.System.Data.DataColumn("PresetInterleaveDepth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetInterleaveDepth)
            Me.columnPresetFWDerrorCorrection = New Global.System.Data.DataColumn("PresetFWDerrorCorrection", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetFWDerrorCorrection)
            Me.columnPresetSquelch = New Global.System.Data.DataColumn("PresetSquelch", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetSquelch)
            Me.columnPresetCryptoMode = New Global.System.Data.DataColumn("PresetCryptoMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetCryptoMode)
            Me.columnPresetCryptoKey = New Global.System.Data.DataColumn("PresetCryptoKey", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetCryptoKey)
            Me.columnPresetSatcomChannel = New Global.System.Data.DataColumn("PresetSatcomChannel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetSatcomChannel)
            Me.columnPresetDataMode = New Global.System.Data.DataColumn("PresetDataMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetDataMode)
            Me.columnPresetFascinatorMode = New Global.System.Data.DataColumn("PresetFascinatorMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetFascinatorMode)
            Me.columnPresetAESmode = New Global.System.Data.DataColumn("PresetAESMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnPresetAESmode.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "PresetAESmode")
            Me.columnPresetAESmode.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "PresetAESmodeColumn")
            Me.columnPresetAESmode.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnPresetAESmode")
            Me.columnPresetAESmode.ExtendedProperties.Add("Generator_UserColumnName", "PresetAESMode")
            MyBase.Columns.Add(Me.columnPresetAESmode)
            Me.columnPresetKG84Mode = New Global.System.Data.DataColumn("PresetKG84Mode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetKG84Mode)
            Me.columnPresetANDVTframes = New Global.System.Data.DataColumn("PresetANDVTframes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetANDVTframes)
            Me.columnPresetRXfade = New Global.System.Data.DataColumn("PresetRXfade", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetRXfade)
            Me.columnPresetANDVTautoswitch = New Global.System.Data.DataColumn("PresetANDVTautoswitch", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetANDVTautoswitch)
            Me.columnPresetKeySource = New Global.System.Data.DataColumn("PresetKeySource", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetKeySource)
            Me.columnPresetCodebook = New Global.System.Data.DataColumn("PresetCodebook", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetCodebook)
            Me.columnPresetDeviation = New Global.System.Data.DataColumn("PresetDeviation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetDeviation)
            Me.columnPresetOptMod = New Global.System.Data.DataColumn("PresetOptMod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetOptMod)
            Me.columnPresetTXpower = New Global.System.Data.DataColumn("PresetTXpower", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetTXpower)
            Me.columnPresetTXpowerDown = New Global.System.Data.DataColumn("PresetTXpowerDown", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetTXpowerDown)
            Me.columnPresetManualSquelchSetting = New Global.System.Data.DataColumn("PresetManualSquelchSetting", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetManualSquelchSetting)
            Me.columnPresetCTCSS = New Global.System.Data.DataColumn("PresetCTCSS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetCTCSS)
            Me.columnPresetRxSquelch = New Global.System.Data.DataColumn("PresetRxSquelch", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetRxSquelch)
            Me.columnPresetCTCSSuserEntry = New Global.System.Data.DataColumn("PresetCTCSSuserEntry", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetCTCSSuserEntry)
            Me.columnPresetCTCSSrxUserEntry = New Global.System.Data.DataColumn("PresetCTCSSrxUserEntry", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetCTCSSrxUserEntry)
            Me.columnPresetCTCSSrx = New Global.System.Data.DataColumn("PresetCTCSSrx", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetCTCSSrx)
            Me.columnPresetChannelBusyPriority = New Global.System.Data.DataColumn("PresetChannelBusyPriority", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetChannelBusyPriority)
            Me.columnPresetCDCSStxCode = New Global.System.Data.DataColumn("PresetCDCSStxCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetCDCSStxCode)
            Me.columnPresetCDCSSrxCode = New Global.System.Data.DataColumn("PresetCDCSSrxCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetCDCSSrxCode)
            Me.columnPresetVinsonCompatibility = New Global.System.Data.DataColumn("PresetVinsonCompatibility", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetVinsonCompatibility)
            Me.columnPresetBeaconFreq = New Global.System.Data.DataColumn("PresetBeaconFreq", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetBeaconFreq)
            Me.columnPresetBeaconMod = New Global.System.Data.DataColumn("PresetBeaconMod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetBeaconMod)
            Me.columnPresetBeaconTxDuration = New Global.System.Data.DataColumn("PresetBeaconTxDuration", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetBeaconTxDuration)
            Me.columnPresetBeaconOffDuration = New Global.System.Data.DataColumn("PresetBeaconOffDuration", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetBeaconOffDuration)
            Me.columnPresetBeaconTxPower = New Global.System.Data.DataColumn("PresetBeaconTxPower", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetBeaconTxPower)
            Me.columnPresetSpare = New Global.System.Data.DataColumn("PresetSpare", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetSpare)
            Me.columnPresetInScanList = New Global.System.Data.DataColumn("PresetInScanList", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresetInScanList)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPresetNumber}, True))
            Me.columnPresetNumber.AllowDBNull = False
            Me.columnPresetNumber.Unique = True
            Me.columnPresetNumber.MaxLength = 50
            Me.columnPresetName.AllowDBNull = False
            Me.columnPresetName.MaxLength = 50
            Me.columnPresetType.MaxLength = 50
            Me.columnPresetTraffic.MaxLength = 50
            Me.columnPresetModulation.MaxLength = 50
            Me.columnPresetDescription.MaxLength = 70
            Me.columnPresetRXfreq.MaxLength = 50
            Me.columnPresetTXfreq.MaxLength = 50
            Me.columnPresetWaveform.MaxLength = 50
            Me.columnPresetChannel.MaxLength = 50
            Me.columnPresetKey.MaxLength = 50
            Me.columnPresetOptionCode.MaxLength = 50
            Me.columnPresetBandwidth.MaxLength = 50
            Me.columnPresetBPSrate.MaxLength = 50
            Me.columnPresetVoiceMode.MaxLength = 50
            Me.columnPresetInterleaveDepth.MaxLength = 50
            Me.columnPresetFWDerrorCorrection.MaxLength = 50
            Me.columnPresetSquelch.MaxLength = 50
            Me.columnPresetCryptoMode.MaxLength = 50
            Me.columnPresetCryptoKey.MaxLength = 50
            Me.columnPresetSatcomChannel.MaxLength = 50
            Me.columnPresetDataMode.MaxLength = 50
            Me.columnPresetFascinatorMode.MaxLength = 50
            Me.columnPresetAESmode.MaxLength = 50
            Me.columnPresetKG84Mode.MaxLength = 50
            Me.columnPresetANDVTframes.MaxLength = 50
            Me.columnPresetRXfade.MaxLength = 50
            Me.columnPresetANDVTautoswitch.MaxLength = 50
            Me.columnPresetKeySource.MaxLength = 50
            Me.columnPresetCodebook.MaxLength = 50
            Me.columnPresetOptMod.MaxLength = 50
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewPRCtrainerRow() As PRCtrainerRow
            Return CType(Me.NewRow, PRCtrainerRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PRCtrainerRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PRCtrainerRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PRCtrainerRowChangedEvent) Is Nothing) Then
                RaiseEvent PRCtrainerRowChanged(Me, New PRCtrainerRowChangeEvent(CType(e.Row, PRCtrainerRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PRCtrainerRowChangingEvent) Is Nothing) Then
                RaiseEvent PRCtrainerRowChanging(Me, New PRCtrainerRowChangeEvent(CType(e.Row, PRCtrainerRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PRCtrainerRowDeletedEvent) Is Nothing) Then
                RaiseEvent PRCtrainerRowDeleted(Me, New PRCtrainerRowChangeEvent(CType(e.Row, PRCtrainerRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PRCtrainerRowDeletingEvent) Is Nothing) Then
                RaiseEvent PRCtrainerRowDeleting(Me, New PRCtrainerRowChangeEvent(CType(e.Row, PRCtrainerRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemovePRCtrainerRow(ByVal row As PRCtrainerRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As StoredPresetsDataSet = New StoredPresetsDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PRCtrainerDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class SATCOMpresetsDataTable
        Inherits Global.System.Data.TypedTableBase(Of SATCOMpresetsRow)

        Private columnSatcomPresetNum As Global.System.Data.DataColumn

        Private columnUplink As Global.System.Data.DataColumn

        Private columnDownlink As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "SATCOMpresets"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SatcomPresetNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSatcomPresetNum
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property UplinkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUplink
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DownlinkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDownlink
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As SATCOMpresetsRow
            Get
                Return CType(Me.Rows(index), SATCOMpresetsRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SATCOMpresetsRowChanging As SATCOMpresetsRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SATCOMpresetsRowChanged As SATCOMpresetsRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SATCOMpresetsRowDeleting As SATCOMpresetsRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SATCOMpresetsRowDeleted As SATCOMpresetsRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddSATCOMpresetsRow(ByVal row As SATCOMpresetsRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddSATCOMpresetsRow(ByVal SatcomPresetNum As Integer, ByVal Uplink As String, ByVal Downlink As String) As SATCOMpresetsRow
            Dim rowSATCOMpresetsRow As SATCOMpresetsRow = CType(Me.NewRow, SATCOMpresetsRow)
            Dim columnValuesArray() As Object = New Object() {SatcomPresetNum, Uplink, Downlink}
            rowSATCOMpresetsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSATCOMpresetsRow)
            Return rowSATCOMpresetsRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindBySatcomPresetNum(ByVal SatcomPresetNum As Integer) As SATCOMpresetsRow
            Return CType(Me.Rows.Find(New Object() {SatcomPresetNum}), SATCOMpresetsRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SATCOMpresetsDataTable = CType(MyBase.Clone, SATCOMpresetsDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SATCOMpresetsDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnSatcomPresetNum = MyBase.Columns("SatcomPresetNum")
            Me.columnUplink = MyBase.Columns("Uplink")
            Me.columnDownlink = MyBase.Columns("Downlink")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnSatcomPresetNum = New Global.System.Data.DataColumn("SatcomPresetNum", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSatcomPresetNum)
            Me.columnUplink = New Global.System.Data.DataColumn("Uplink", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUplink)
            Me.columnDownlink = New Global.System.Data.DataColumn("Downlink", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDownlink)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSatcomPresetNum}, True))
            Me.columnSatcomPresetNum.AllowDBNull = False
            Me.columnSatcomPresetNum.Unique = True
            Me.columnUplink.MaxLength = 10
            Me.columnDownlink.MaxLength = 10
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewSATCOMpresetsRow() As SATCOMpresetsRow
            Return CType(Me.NewRow, SATCOMpresetsRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SATCOMpresetsRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SATCOMpresetsRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SATCOMpresetsRowChangedEvent) Is Nothing) Then
                RaiseEvent SATCOMpresetsRowChanged(Me, New SATCOMpresetsRowChangeEvent(CType(e.Row, SATCOMpresetsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SATCOMpresetsRowChangingEvent) Is Nothing) Then
                RaiseEvent SATCOMpresetsRowChanging(Me, New SATCOMpresetsRowChangeEvent(CType(e.Row, SATCOMpresetsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SATCOMpresetsRowDeletedEvent) Is Nothing) Then
                RaiseEvent SATCOMpresetsRowDeleted(Me, New SATCOMpresetsRowChangeEvent(CType(e.Row, SATCOMpresetsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SATCOMpresetsRowDeletingEvent) Is Nothing) Then
                RaiseEvent SATCOMpresetsRowDeleting(Me, New SATCOMpresetsRowChangeEvent(CType(e.Row, SATCOMpresetsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveSATCOMpresetsRow(ByVal row As SATCOMpresetsRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As StoredPresetsDataSet = New StoredPresetsDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SATCOMpresetsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class OptionCodes25kHzDataTable
        Inherits Global.System.Data.TypedTableBase(Of OptionCodes25kHzRow)

        Private columnOptionCode As Global.System.Data.DataColumn

        Private columnIOdataRate As Global.System.Data.DataColumn

        Private columnModulationType As Global.System.Data.DataColumn

        Private columnKG84Compliant As Global.System.Data.DataColumn

        Private columnVinsonCompliant As Global.System.Data.DataColumn

        Private columnFascinatorCompliant As Global.System.Data.DataColumn

        Private columnForwardErrorCorrection As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "OptionCodes25kHz"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OptionCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOptionCode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IOdataRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIOdataRate
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ModulationTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModulationType
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property KG84CompliantColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKG84Compliant
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VinsonCompliantColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVinsonCompliant
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FascinatorCompliantColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFascinatorCompliant
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ForwardErrorCorrectionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnForwardErrorCorrection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As OptionCodes25kHzRow
            Get
                Return CType(Me.Rows(index), OptionCodes25kHzRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event OptionCodes25kHzRowChanging As OptionCodes25kHzRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event OptionCodes25kHzRowChanged As OptionCodes25kHzRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event OptionCodes25kHzRowDeleting As OptionCodes25kHzRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event OptionCodes25kHzRowDeleted As OptionCodes25kHzRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddOptionCodes25kHzRow(ByVal row As OptionCodes25kHzRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddOptionCodes25kHzRow(ByVal OptionCode As String, ByVal IOdataRate As String, ByVal ModulationType As String, ByVal KG84Compliant As String, ByVal VinsonCompliant As String, ByVal FascinatorCompliant As String, ByVal ForwardErrorCorrection As String) As OptionCodes25kHzRow
            Dim rowOptionCodes25kHzRow As OptionCodes25kHzRow = CType(Me.NewRow, OptionCodes25kHzRow)
            Dim columnValuesArray() As Object = New Object() {OptionCode, IOdataRate, ModulationType, KG84Compliant, VinsonCompliant, FascinatorCompliant, ForwardErrorCorrection}
            rowOptionCodes25kHzRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowOptionCodes25kHzRow)
            Return rowOptionCodes25kHzRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByOptionCode(ByVal OptionCode As String) As OptionCodes25kHzRow
            Return CType(Me.Rows.Find(New Object() {OptionCode}), OptionCodes25kHzRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OptionCodes25kHzDataTable = CType(MyBase.Clone, OptionCodes25kHzDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OptionCodes25kHzDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnOptionCode = MyBase.Columns("OptionCode")
            Me.columnIOdataRate = MyBase.Columns("IOdataRate")
            Me.columnModulationType = MyBase.Columns("ModulationType")
            Me.columnKG84Compliant = MyBase.Columns("KG84Compliant")
            Me.columnVinsonCompliant = MyBase.Columns("VinsonCompliant")
            Me.columnFascinatorCompliant = MyBase.Columns("FascinatorCompliant")
            Me.columnForwardErrorCorrection = MyBase.Columns("ForwardErrorCorrection")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnOptionCode = New Global.System.Data.DataColumn("OptionCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOptionCode)
            Me.columnIOdataRate = New Global.System.Data.DataColumn("IOdataRate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIOdataRate)
            Me.columnModulationType = New Global.System.Data.DataColumn("ModulationType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModulationType)
            Me.columnKG84Compliant = New Global.System.Data.DataColumn("KG84Compliant", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKG84Compliant)
            Me.columnVinsonCompliant = New Global.System.Data.DataColumn("VinsonCompliant", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVinsonCompliant)
            Me.columnFascinatorCompliant = New Global.System.Data.DataColumn("FascinatorCompliant", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFascinatorCompliant)
            Me.columnForwardErrorCorrection = New Global.System.Data.DataColumn("ForwardErrorCorrection", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnForwardErrorCorrection)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnOptionCode}, True))
            Me.columnOptionCode.AllowDBNull = False
            Me.columnOptionCode.Unique = True
            Me.columnOptionCode.MaxLength = 10
            Me.columnIOdataRate.MaxLength = 10
            Me.columnModulationType.MaxLength = 10
            Me.columnKG84Compliant.MaxLength = 10
            Me.columnVinsonCompliant.MaxLength = 10
            Me.columnFascinatorCompliant.MaxLength = 10
            Me.columnForwardErrorCorrection.MaxLength = 10
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewOptionCodes25kHzRow() As OptionCodes25kHzRow
            Return CType(Me.NewRow, OptionCodes25kHzRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OptionCodes25kHzRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OptionCodes25kHzRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OptionCodes25kHzRowChangedEvent) Is Nothing) Then
                RaiseEvent OptionCodes25kHzRowChanged(Me, New OptionCodes25kHzRowChangeEvent(CType(e.Row, OptionCodes25kHzRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OptionCodes25kHzRowChangingEvent) Is Nothing) Then
                RaiseEvent OptionCodes25kHzRowChanging(Me, New OptionCodes25kHzRowChangeEvent(CType(e.Row, OptionCodes25kHzRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OptionCodes25kHzRowDeletedEvent) Is Nothing) Then
                RaiseEvent OptionCodes25kHzRowDeleted(Me, New OptionCodes25kHzRowChangeEvent(CType(e.Row, OptionCodes25kHzRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OptionCodes25kHzRowDeletingEvent) Is Nothing) Then
                RaiseEvent OptionCodes25kHzRowDeleting(Me, New OptionCodes25kHzRowChangeEvent(CType(e.Row, OptionCodes25kHzRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveOptionCodes25kHzRow(ByVal row As OptionCodes25kHzRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As StoredPresetsDataSet = New StoredPresetsDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OptionCodes25kHzDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class OptionCodes5kHzDataTable
        Inherits Global.System.Data.TypedTableBase(Of OptionCodes5kHzRow)

        Private columnOptionCode As Global.System.Data.DataColumn

        Private columnIOdataRate As Global.System.Data.DataColumn

        Private columnModulationType As Global.System.Data.DataColumn

        Private columnKG84Compliant As Global.System.Data.DataColumn

        Private columnANDVTcompliant As Global.System.Data.DataColumn

        Private columnForwardErrorCorrection As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "OptionCodes5kHz"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OptionCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOptionCode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IOdataRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIOdataRate
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ModulationTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModulationType
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property KG84CompliantColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKG84Compliant
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ANDVTcompliantColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANDVTcompliant
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ForwardErrorCorrectionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnForwardErrorCorrection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As OptionCodes5kHzRow
            Get
                Return CType(Me.Rows(index), OptionCodes5kHzRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event OptionCodes5kHzRowChanging As OptionCodes5kHzRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event OptionCodes5kHzRowChanged As OptionCodes5kHzRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event OptionCodes5kHzRowDeleting As OptionCodes5kHzRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event OptionCodes5kHzRowDeleted As OptionCodes5kHzRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddOptionCodes5kHzRow(ByVal row As OptionCodes5kHzRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddOptionCodes5kHzRow(ByVal OptionCode As String, ByVal IOdataRate As String, ByVal ModulationType As String, ByVal KG84Compliant As String, ByVal ANDVTcompliant As String, ByVal ForwardErrorCorrection As String) As OptionCodes5kHzRow
            Dim rowOptionCodes5kHzRow As OptionCodes5kHzRow = CType(Me.NewRow, OptionCodes5kHzRow)
            Dim columnValuesArray() As Object = New Object() {OptionCode, IOdataRate, ModulationType, KG84Compliant, ANDVTcompliant, ForwardErrorCorrection}
            rowOptionCodes5kHzRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowOptionCodes5kHzRow)
            Return rowOptionCodes5kHzRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByOptionCode(ByVal OptionCode As String) As OptionCodes5kHzRow
            Return CType(Me.Rows.Find(New Object() {OptionCode}), OptionCodes5kHzRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OptionCodes5kHzDataTable = CType(MyBase.Clone, OptionCodes5kHzDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OptionCodes5kHzDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnOptionCode = MyBase.Columns("OptionCode")
            Me.columnIOdataRate = MyBase.Columns("IOdataRate")
            Me.columnModulationType = MyBase.Columns("ModulationType")
            Me.columnKG84Compliant = MyBase.Columns("KG84Compliant")
            Me.columnANDVTcompliant = MyBase.Columns("ANDVTcompliant")
            Me.columnForwardErrorCorrection = MyBase.Columns("ForwardErrorCorrection")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnOptionCode = New Global.System.Data.DataColumn("OptionCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOptionCode)
            Me.columnIOdataRate = New Global.System.Data.DataColumn("IOdataRate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIOdataRate)
            Me.columnModulationType = New Global.System.Data.DataColumn("ModulationType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModulationType)
            Me.columnKG84Compliant = New Global.System.Data.DataColumn("KG84Compliant", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKG84Compliant)
            Me.columnANDVTcompliant = New Global.System.Data.DataColumn("ANDVTcompliant", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANDVTcompliant)
            Me.columnForwardErrorCorrection = New Global.System.Data.DataColumn("ForwardErrorCorrection", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnForwardErrorCorrection)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnOptionCode}, True))
            Me.columnOptionCode.AllowDBNull = False
            Me.columnOptionCode.Unique = True
            Me.columnOptionCode.MaxLength = 10
            Me.columnIOdataRate.MaxLength = 10
            Me.columnModulationType.MaxLength = 10
            Me.columnKG84Compliant.MaxLength = 10
            Me.columnANDVTcompliant.MaxLength = 10
            Me.columnForwardErrorCorrection.MaxLength = 10
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewOptionCodes5kHzRow() As OptionCodes5kHzRow
            Return CType(Me.NewRow, OptionCodes5kHzRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OptionCodes5kHzRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OptionCodes5kHzRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OptionCodes5kHzRowChangedEvent) Is Nothing) Then
                RaiseEvent OptionCodes5kHzRowChanged(Me, New OptionCodes5kHzRowChangeEvent(CType(e.Row, OptionCodes5kHzRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OptionCodes5kHzRowChangingEvent) Is Nothing) Then
                RaiseEvent OptionCodes5kHzRowChanging(Me, New OptionCodes5kHzRowChangeEvent(CType(e.Row, OptionCodes5kHzRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OptionCodes5kHzRowDeletedEvent) Is Nothing) Then
                RaiseEvent OptionCodes5kHzRowDeleted(Me, New OptionCodes5kHzRowChangeEvent(CType(e.Row, OptionCodes5kHzRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OptionCodes5kHzRowDeletingEvent) Is Nothing) Then
                RaiseEvent OptionCodes5kHzRowDeleting(Me, New OptionCodes5kHzRowChangeEvent(CType(e.Row, OptionCodes5kHzRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveOptionCodes5kHzRow(ByVal row As OptionCodes5kHzRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As StoredPresetsDataSet = New StoredPresetsDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OptionCodes5kHzDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class CTCSSDataTable
        Inherits Global.System.Data.TypedTableBase(Of CTCSSRow)

        Private columnFREQ As Global.System.Data.DataColumn

        Private columnEIA As Global.System.Data.DataColumn

        Private columnHAM As Global.System.Data.DataColumn

        Private columnindex As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "CTCSS"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FREQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFREQ
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEIA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property HAMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHAM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property indexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnindex
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As CTCSSRow
            Get
                Return CType(Me.Rows(index), CTCSSRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CTCSSRowChanging As CTCSSRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CTCSSRowChanged As CTCSSRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CTCSSRowDeleting As CTCSSRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CTCSSRowDeleted As CTCSSRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddCTCSSRow(ByVal row As CTCSSRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddCTCSSRow(ByVal FREQ As String, ByVal EIA As String, ByVal HAM As String, ByVal index As Integer) As CTCSSRow
            Dim rowCTCSSRow As CTCSSRow = CType(Me.NewRow, CTCSSRow)
            Dim columnValuesArray() As Object = New Object() {FREQ, EIA, HAM, index}
            rowCTCSSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCTCSSRow)
            Return rowCTCSSRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CTCSSDataTable = CType(MyBase.Clone, CTCSSDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CTCSSDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnFREQ = MyBase.Columns("FREQ")
            Me.columnEIA = MyBase.Columns("EIA")
            Me.columnHAM = MyBase.Columns("HAM")
            Me.columnindex = MyBase.Columns("index")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnFREQ = New Global.System.Data.DataColumn("FREQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFREQ)
            Me.columnEIA = New Global.System.Data.DataColumn("EIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEIA)
            Me.columnHAM = New Global.System.Data.DataColumn("HAM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHAM)
            Me.columnindex = New Global.System.Data.DataColumn("index", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnindex)
            Me.columnFREQ.AllowDBNull = False
            Me.columnFREQ.MaxLength = 50
            Me.columnEIA.AllowDBNull = False
            Me.columnEIA.MaxLength = 50
            Me.columnHAM.AllowDBNull = False
            Me.columnHAM.MaxLength = 50
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewCTCSSRow() As CTCSSRow
            Return CType(Me.NewRow, CTCSSRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CTCSSRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CTCSSRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CTCSSRowChangedEvent) Is Nothing) Then
                RaiseEvent CTCSSRowChanged(Me, New CTCSSRowChangeEvent(CType(e.Row, CTCSSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CTCSSRowChangingEvent) Is Nothing) Then
                RaiseEvent CTCSSRowChanging(Me, New CTCSSRowChangeEvent(CType(e.Row, CTCSSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CTCSSRowDeletedEvent) Is Nothing) Then
                RaiseEvent CTCSSRowDeleted(Me, New CTCSSRowChangeEvent(CType(e.Row, CTCSSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CTCSSRowDeletingEvent) Is Nothing) Then
                RaiseEvent CTCSSRowDeleting(Me, New CTCSSRowChangeEvent(CType(e.Row, CTCSSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveCTCSSRow(ByVal row As CTCSSRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As StoredPresetsDataSet = New StoredPresetsDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CTCSSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class GlobalSavedItemsDataTable
        Inherits Global.System.Data.TypedTableBase(Of GlobalSavedItemsRow)

        Private columnId As Global.System.Data.DataColumn

        Private columnGlobalEnableScan As Global.System.Data.DataColumn

        Private columnGlobalPriorityTx As Global.System.Data.DataColumn

        Private columnGlobalPriorityRxEnable As Global.System.Data.DataColumn

        Private columnGlobalPriorityRx As Global.System.Data.DataColumn

        Private columnGlobalHangTime As Global.System.Data.DataColumn

        Private columnGlobalEnableHoldTime As Global.System.Data.DataColumn

        Private columnGlobalHoldTimeDuration As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "GlobalSavedItems"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GlobalEnableScanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGlobalEnableScan
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GlobalPriorityTxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGlobalPriorityTx
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GlobalPriorityRxEnableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGlobalPriorityRxEnable
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GlobalPriorityRxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGlobalPriorityRx
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GlobalHangTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGlobalHangTime
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GlobalEnableHoldTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGlobalEnableHoldTime
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GlobalHoldTimeDurationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGlobalHoldTimeDuration
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As GlobalSavedItemsRow
            Get
                Return CType(Me.Rows(index), GlobalSavedItemsRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event GlobalSavedItemsRowChanging As GlobalSavedItemsRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event GlobalSavedItemsRowChanged As GlobalSavedItemsRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event GlobalSavedItemsRowDeleting As GlobalSavedItemsRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event GlobalSavedItemsRowDeleted As GlobalSavedItemsRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddGlobalSavedItemsRow(ByVal row As GlobalSavedItemsRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddGlobalSavedItemsRow(ByVal Id As Integer, ByVal GlobalEnableScan As String, ByVal GlobalPriorityTx As String, ByVal GlobalPriorityRxEnable As String, ByVal GlobalPriorityRx As String, ByVal GlobalHangTime As String, ByVal GlobalEnableHoldTime As String, ByVal GlobalHoldTimeDuration As String) As GlobalSavedItemsRow
            Dim rowGlobalSavedItemsRow As GlobalSavedItemsRow = CType(Me.NewRow, GlobalSavedItemsRow)
            Dim columnValuesArray() As Object = New Object() {Id, GlobalEnableScan, GlobalPriorityTx, GlobalPriorityRxEnable, GlobalPriorityRx, GlobalHangTime, GlobalEnableHoldTime, GlobalHoldTimeDuration}
            rowGlobalSavedItemsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGlobalSavedItemsRow)
            Return rowGlobalSavedItemsRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindById(ByVal Id As Integer) As GlobalSavedItemsRow
            Return CType(Me.Rows.Find(New Object() {Id}), GlobalSavedItemsRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GlobalSavedItemsDataTable = CType(MyBase.Clone, GlobalSavedItemsDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GlobalSavedItemsDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnGlobalEnableScan = MyBase.Columns("GlobalEnableScan")
            Me.columnGlobalPriorityTx = MyBase.Columns("GlobalPriorityTx")
            Me.columnGlobalPriorityRxEnable = MyBase.Columns("GlobalPriorityRxEnable")
            Me.columnGlobalPriorityRx = MyBase.Columns("GlobalPriorityRx")
            Me.columnGlobalHangTime = MyBase.Columns("GlobalHangTime")
            Me.columnGlobalEnableHoldTime = MyBase.Columns("GlobalEnableHoldTime")
            Me.columnGlobalHoldTimeDuration = MyBase.Columns("GlobalHoldTimeDuration")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnGlobalEnableScan = New Global.System.Data.DataColumn("GlobalEnableScan", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGlobalEnableScan)
            Me.columnGlobalPriorityTx = New Global.System.Data.DataColumn("GlobalPriorityTx", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGlobalPriorityTx)
            Me.columnGlobalPriorityRxEnable = New Global.System.Data.DataColumn("GlobalPriorityRxEnable", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGlobalPriorityRxEnable)
            Me.columnGlobalPriorityRx = New Global.System.Data.DataColumn("GlobalPriorityRx", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGlobalPriorityRx)
            Me.columnGlobalHangTime = New Global.System.Data.DataColumn("GlobalHangTime", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGlobalHangTime)
            Me.columnGlobalEnableHoldTime = New Global.System.Data.DataColumn("GlobalEnableHoldTime", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGlobalEnableHoldTime)
            Me.columnGlobalHoldTimeDuration = New Global.System.Data.DataColumn("GlobalHoldTimeDuration", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGlobalHoldTimeDuration)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, True))
            Me.columnId.AllowDBNull = False
            Me.columnId.Unique = True
            Me.columnGlobalEnableScan.MaxLength = 50
            Me.columnGlobalPriorityTx.MaxLength = 50
            Me.columnGlobalPriorityRxEnable.MaxLength = 50
            Me.columnGlobalPriorityRx.MaxLength = 50
            Me.columnGlobalHangTime.MaxLength = 50
            Me.columnGlobalEnableHoldTime.MaxLength = 50
            Me.columnGlobalHoldTimeDuration.MaxLength = 50
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewGlobalSavedItemsRow() As GlobalSavedItemsRow
            Return CType(Me.NewRow, GlobalSavedItemsRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GlobalSavedItemsRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GlobalSavedItemsRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GlobalSavedItemsRowChangedEvent) Is Nothing) Then
                RaiseEvent GlobalSavedItemsRowChanged(Me, New GlobalSavedItemsRowChangeEvent(CType(e.Row, GlobalSavedItemsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GlobalSavedItemsRowChangingEvent) Is Nothing) Then
                RaiseEvent GlobalSavedItemsRowChanging(Me, New GlobalSavedItemsRowChangeEvent(CType(e.Row, GlobalSavedItemsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GlobalSavedItemsRowDeletedEvent) Is Nothing) Then
                RaiseEvent GlobalSavedItemsRowDeleted(Me, New GlobalSavedItemsRowChangeEvent(CType(e.Row, GlobalSavedItemsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GlobalSavedItemsRowDeletingEvent) Is Nothing) Then
                RaiseEvent GlobalSavedItemsRowDeleting(Me, New GlobalSavedItemsRowChangeEvent(CType(e.Row, GlobalSavedItemsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveGlobalSavedItemsRow(ByVal row As GlobalSavedItemsRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As StoredPresetsDataSet = New StoredPresetsDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GlobalSavedItemsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PRCtrainerRow
        Inherits Global.System.Data.DataRow

        Private tablePRCtrainer As PRCtrainerDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePRCtrainer = CType(Me.Table, PRCtrainerDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetNumber() As String
            Get
                Return CType(Me(Me.tablePRCtrainer.PresetNumberColumn), String)
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetNumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetName() As String
            Get
                Return CType(Me(Me.tablePRCtrainer.PresetNameColumn), String)
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetType() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetTypeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetType' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetTypeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetTraffic() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetTrafficColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetTraffic' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetTrafficColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetModulation() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetModulationColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetModulation' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetModulationColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetDescription() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetDescriptionColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetDescription' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetDescriptionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetRXfreq() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetRXfreqColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetRXfreq' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetRXfreqColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetTXfreq() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetTXfreqColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetTXfreq' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetTXfreqColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetWaveform() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetWaveformColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetWaveform' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetWaveformColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetChannel() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetChannelColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetChannel' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetChannelColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetKey() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetKeyColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetKey' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetKeyColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetOptionCode() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetOptionCodeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetOptionCode' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetOptionCodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetBandwidth() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetBandwidthColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetBandwidth' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetBandwidthColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetBPSrate() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetBPSrateColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetBPSrate' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetBPSrateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetVoiceMode() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetVoiceModeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetVoiceMode' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetVoiceModeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetInterleaveDepth() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetInterleaveDepthColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetInterleaveDepth' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetInterleaveDepthColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetFWDerrorCorrection() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetFWDerrorCorrectionColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetFWDerrorCorrection' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetFWDerrorCorrectionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetSquelch() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetSquelchColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetSquelch' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetSquelchColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetCryptoMode() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetCryptoModeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetCryptoMode' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetCryptoModeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetCryptoKey() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetCryptoKeyColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetCryptoKey' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetCryptoKeyColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetSatcomChannel() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetSatcomChannelColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetSatcomChannel' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetSatcomChannelColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetDataMode() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetDataModeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetDataMode' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetDataModeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetFascinatorMode() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetFascinatorModeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetFascinatorMode' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetFascinatorModeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetAESmode() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetAESmodeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetAESMode' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetAESmodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetKG84Mode() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetKG84ModeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetKG84Mode' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetKG84ModeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetANDVTframes() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetANDVTframesColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetANDVTframes' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetANDVTframesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetRXfade() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetRXfadeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetRXfade' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetRXfadeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetANDVTautoswitch() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetANDVTautoswitchColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetANDVTautoswitch' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetANDVTautoswitchColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetKeySource() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetKeySourceColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetKeySource' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetKeySourceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetCodebook() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetCodebookColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetCodebook' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetCodebookColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetDeviation() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetDeviationColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetDeviation' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetDeviationColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetOptMod() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetOptModColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetOptMod' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetOptModColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetTXpower() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetTXpowerColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetTXpower' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetTXpowerColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetTXpowerDown() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetTXpowerDownColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetTXpowerDown' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetTXpowerDownColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetManualSquelchSetting() As Integer
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetManualSquelchSettingColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetManualSquelchSetting' in table 'PRCtrainer' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablePRCtrainer.PresetManualSquelchSettingColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetCTCSS() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetCTCSSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetCTCSS' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetCTCSSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetRxSquelch() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetRxSquelchColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetRxSquelch' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetRxSquelchColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetCTCSSuserEntry() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetCTCSSuserEntryColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetCTCSSuserEntry' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetCTCSSuserEntryColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetCTCSSrxUserEntry() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetCTCSSrxUserEntryColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetCTCSSrxUserEntry' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetCTCSSrxUserEntryColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetCTCSSrx() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetCTCSSrxColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetCTCSSrx' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetCTCSSrxColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetChannelBusyPriority() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetChannelBusyPriorityColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetChannelBusyPriority' in table 'PRCtrainer' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetChannelBusyPriorityColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetCDCSStxCode() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetCDCSStxCodeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetCDCSStxCode' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetCDCSStxCodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetCDCSSrxCode() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetCDCSSrxCodeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetCDCSSrxCode' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetCDCSSrxCodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetVinsonCompatibility() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetVinsonCompatibilityColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetVinsonCompatibility' in table 'PRCtrainer' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetVinsonCompatibilityColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetBeaconFreq() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetBeaconFreqColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetBeaconFreq' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetBeaconFreqColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetBeaconMod() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetBeaconModColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetBeaconMod' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetBeaconModColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetBeaconTxDuration() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetBeaconTxDurationColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetBeaconTxDuration' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetBeaconTxDurationColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetBeaconOffDuration() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetBeaconOffDurationColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetBeaconOffDuration' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetBeaconOffDurationColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetBeaconTxPower() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetBeaconTxPowerColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetBeaconTxPower' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetBeaconTxPowerColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetSpare() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetSpareColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetSpare' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetSpareColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresetInScanList() As String
            Get
                Try
                    Return CType(Me(Me.tablePRCtrainer.PresetInScanListColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PresetInScanList' in table 'PRCtrainer' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePRCtrainer.PresetInScanListColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetTypeNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetTypeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetTypeNull()
            Me(Me.tablePRCtrainer.PresetTypeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetTrafficNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetTrafficColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetTrafficNull()
            Me(Me.tablePRCtrainer.PresetTrafficColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetModulationNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetModulationColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetModulationNull()
            Me(Me.tablePRCtrainer.PresetModulationColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetDescriptionNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetDescriptionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetDescriptionNull()
            Me(Me.tablePRCtrainer.PresetDescriptionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetRXfreqNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetRXfreqColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetRXfreqNull()
            Me(Me.tablePRCtrainer.PresetRXfreqColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetTXfreqNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetTXfreqColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetTXfreqNull()
            Me(Me.tablePRCtrainer.PresetTXfreqColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetWaveformNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetWaveformColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetWaveformNull()
            Me(Me.tablePRCtrainer.PresetWaveformColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetChannelNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetChannelColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetChannelNull()
            Me(Me.tablePRCtrainer.PresetChannelColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetKeyNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetKeyColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetKeyNull()
            Me(Me.tablePRCtrainer.PresetKeyColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetOptionCodeNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetOptionCodeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetOptionCodeNull()
            Me(Me.tablePRCtrainer.PresetOptionCodeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetBandwidthNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetBandwidthColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetBandwidthNull()
            Me(Me.tablePRCtrainer.PresetBandwidthColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetBPSrateNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetBPSrateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetBPSrateNull()
            Me(Me.tablePRCtrainer.PresetBPSrateColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetVoiceModeNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetVoiceModeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetVoiceModeNull()
            Me(Me.tablePRCtrainer.PresetVoiceModeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetInterleaveDepthNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetInterleaveDepthColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetInterleaveDepthNull()
            Me(Me.tablePRCtrainer.PresetInterleaveDepthColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetFWDerrorCorrectionNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetFWDerrorCorrectionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetFWDerrorCorrectionNull()
            Me(Me.tablePRCtrainer.PresetFWDerrorCorrectionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetSquelchNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetSquelchColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetSquelchNull()
            Me(Me.tablePRCtrainer.PresetSquelchColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetCryptoModeNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetCryptoModeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetCryptoModeNull()
            Me(Me.tablePRCtrainer.PresetCryptoModeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetCryptoKeyNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetCryptoKeyColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetCryptoKeyNull()
            Me(Me.tablePRCtrainer.PresetCryptoKeyColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetSatcomChannelNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetSatcomChannelColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetSatcomChannelNull()
            Me(Me.tablePRCtrainer.PresetSatcomChannelColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetDataModeNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetDataModeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetDataModeNull()
            Me(Me.tablePRCtrainer.PresetDataModeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetFascinatorModeNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetFascinatorModeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetFascinatorModeNull()
            Me(Me.tablePRCtrainer.PresetFascinatorModeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetAESmodeNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetAESmodeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetAESmodeNull()
            Me(Me.tablePRCtrainer.PresetAESmodeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetKG84ModeNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetKG84ModeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetKG84ModeNull()
            Me(Me.tablePRCtrainer.PresetKG84ModeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetANDVTframesNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetANDVTframesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetANDVTframesNull()
            Me(Me.tablePRCtrainer.PresetANDVTframesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetRXfadeNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetRXfadeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetRXfadeNull()
            Me(Me.tablePRCtrainer.PresetRXfadeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetANDVTautoswitchNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetANDVTautoswitchColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetANDVTautoswitchNull()
            Me(Me.tablePRCtrainer.PresetANDVTautoswitchColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetKeySourceNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetKeySourceColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetKeySourceNull()
            Me(Me.tablePRCtrainer.PresetKeySourceColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetCodebookNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetCodebookColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetCodebookNull()
            Me(Me.tablePRCtrainer.PresetCodebookColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetDeviationNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetDeviationColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetDeviationNull()
            Me(Me.tablePRCtrainer.PresetDeviationColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetOptModNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetOptModColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetOptModNull()
            Me(Me.tablePRCtrainer.PresetOptModColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetTXpowerNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetTXpowerColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetTXpowerNull()
            Me(Me.tablePRCtrainer.PresetTXpowerColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetTXpowerDownNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetTXpowerDownColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetTXpowerDownNull()
            Me(Me.tablePRCtrainer.PresetTXpowerDownColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetManualSquelchSettingNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetManualSquelchSettingColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetManualSquelchSettingNull()
            Me(Me.tablePRCtrainer.PresetManualSquelchSettingColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetCTCSSNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetCTCSSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetCTCSSNull()
            Me(Me.tablePRCtrainer.PresetCTCSSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetRxSquelchNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetRxSquelchColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetRxSquelchNull()
            Me(Me.tablePRCtrainer.PresetRxSquelchColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetCTCSSuserEntryNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetCTCSSuserEntryColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetCTCSSuserEntryNull()
            Me(Me.tablePRCtrainer.PresetCTCSSuserEntryColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetCTCSSrxUserEntryNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetCTCSSrxUserEntryColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetCTCSSrxUserEntryNull()
            Me(Me.tablePRCtrainer.PresetCTCSSrxUserEntryColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetCTCSSrxNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetCTCSSrxColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetCTCSSrxNull()
            Me(Me.tablePRCtrainer.PresetCTCSSrxColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetChannelBusyPriorityNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetChannelBusyPriorityColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetChannelBusyPriorityNull()
            Me(Me.tablePRCtrainer.PresetChannelBusyPriorityColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetCDCSStxCodeNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetCDCSStxCodeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetCDCSStxCodeNull()
            Me(Me.tablePRCtrainer.PresetCDCSStxCodeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetCDCSSrxCodeNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetCDCSSrxCodeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetCDCSSrxCodeNull()
            Me(Me.tablePRCtrainer.PresetCDCSSrxCodeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetVinsonCompatibilityNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetVinsonCompatibilityColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetVinsonCompatibilityNull()
            Me(Me.tablePRCtrainer.PresetVinsonCompatibilityColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetBeaconFreqNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetBeaconFreqColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetBeaconFreqNull()
            Me(Me.tablePRCtrainer.PresetBeaconFreqColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetBeaconModNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetBeaconModColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetBeaconModNull()
            Me(Me.tablePRCtrainer.PresetBeaconModColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetBeaconTxDurationNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetBeaconTxDurationColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetBeaconTxDurationNull()
            Me(Me.tablePRCtrainer.PresetBeaconTxDurationColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetBeaconOffDurationNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetBeaconOffDurationColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetBeaconOffDurationNull()
            Me(Me.tablePRCtrainer.PresetBeaconOffDurationColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetBeaconTxPowerNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetBeaconTxPowerColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetBeaconTxPowerNull()
            Me(Me.tablePRCtrainer.PresetBeaconTxPowerColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetSpareNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetSpareColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetSpareNull()
            Me(Me.tablePRCtrainer.PresetSpareColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPresetInScanListNull() As Boolean
            Return Me.IsNull(Me.tablePRCtrainer.PresetInScanListColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPresetInScanListNull()
            Me(Me.tablePRCtrainer.PresetInScanListColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SATCOMpresetsRow
        Inherits Global.System.Data.DataRow

        Private tableSATCOMpresets As SATCOMpresetsDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSATCOMpresets = CType(Me.Table, SATCOMpresetsDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SatcomPresetNum() As Integer
            Get
                Return CType(Me(Me.tableSATCOMpresets.SatcomPresetNumColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableSATCOMpresets.SatcomPresetNumColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Uplink() As String
            Get
                Try
                    Return CType(Me(Me.tableSATCOMpresets.UplinkColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Uplink' in table 'SATCOMpresets' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSATCOMpresets.UplinkColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Downlink() As String
            Get
                Try
                    Return CType(Me(Me.tableSATCOMpresets.DownlinkColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Downlink' in table 'SATCOMpresets' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSATCOMpresets.DownlinkColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUplinkNull() As Boolean
            Return Me.IsNull(Me.tableSATCOMpresets.UplinkColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUplinkNull()
            Me(Me.tableSATCOMpresets.UplinkColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDownlinkNull() As Boolean
            Return Me.IsNull(Me.tableSATCOMpresets.DownlinkColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDownlinkNull()
            Me(Me.tableSATCOMpresets.DownlinkColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class OptionCodes25kHzRow
        Inherits Global.System.Data.DataRow

        Private tableOptionCodes25kHz As OptionCodes25kHzDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOptionCodes25kHz = CType(Me.Table, OptionCodes25kHzDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property OptionCode() As String
            Get
                Return CType(Me(Me.tableOptionCodes25kHz.OptionCodeColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableOptionCodes25kHz.OptionCodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IOdataRate() As String
            Get
                Try
                    Return CType(Me(Me.tableOptionCodes25kHz.IOdataRateColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IOdataRate' in table 'OptionCodes25kHz' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableOptionCodes25kHz.IOdataRateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ModulationType() As String
            Get
                Try
                    Return CType(Me(Me.tableOptionCodes25kHz.ModulationTypeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ModulationType' in table 'OptionCodes25kHz' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableOptionCodes25kHz.ModulationTypeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property KG84Compliant() As String
            Get
                Try
                    Return CType(Me(Me.tableOptionCodes25kHz.KG84CompliantColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KG84Compliant' in table 'OptionCodes25kHz' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableOptionCodes25kHz.KG84CompliantColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VinsonCompliant() As String
            Get
                Try
                    Return CType(Me(Me.tableOptionCodes25kHz.VinsonCompliantColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VinsonCompliant' in table 'OptionCodes25kHz' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableOptionCodes25kHz.VinsonCompliantColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FascinatorCompliant() As String
            Get
                Try
                    Return CType(Me(Me.tableOptionCodes25kHz.FascinatorCompliantColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FascinatorCompliant' in table 'OptionCodes25kHz' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableOptionCodes25kHz.FascinatorCompliantColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ForwardErrorCorrection() As String
            Get
                Try
                    Return CType(Me(Me.tableOptionCodes25kHz.ForwardErrorCorrectionColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ForwardErrorCorrection' in table 'OptionCodes25kHz' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableOptionCodes25kHz.ForwardErrorCorrectionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIOdataRateNull() As Boolean
            Return Me.IsNull(Me.tableOptionCodes25kHz.IOdataRateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIOdataRateNull()
            Me(Me.tableOptionCodes25kHz.IOdataRateColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsModulationTypeNull() As Boolean
            Return Me.IsNull(Me.tableOptionCodes25kHz.ModulationTypeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetModulationTypeNull()
            Me(Me.tableOptionCodes25kHz.ModulationTypeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsKG84CompliantNull() As Boolean
            Return Me.IsNull(Me.tableOptionCodes25kHz.KG84CompliantColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetKG84CompliantNull()
            Me(Me.tableOptionCodes25kHz.KG84CompliantColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVinsonCompliantNull() As Boolean
            Return Me.IsNull(Me.tableOptionCodes25kHz.VinsonCompliantColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVinsonCompliantNull()
            Me(Me.tableOptionCodes25kHz.VinsonCompliantColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFascinatorCompliantNull() As Boolean
            Return Me.IsNull(Me.tableOptionCodes25kHz.FascinatorCompliantColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFascinatorCompliantNull()
            Me(Me.tableOptionCodes25kHz.FascinatorCompliantColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsForwardErrorCorrectionNull() As Boolean
            Return Me.IsNull(Me.tableOptionCodes25kHz.ForwardErrorCorrectionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetForwardErrorCorrectionNull()
            Me(Me.tableOptionCodes25kHz.ForwardErrorCorrectionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class OptionCodes5kHzRow
        Inherits Global.System.Data.DataRow

        Private tableOptionCodes5kHz As OptionCodes5kHzDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOptionCodes5kHz = CType(Me.Table, OptionCodes5kHzDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property OptionCode() As String
            Get
                Return CType(Me(Me.tableOptionCodes5kHz.OptionCodeColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableOptionCodes5kHz.OptionCodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IOdataRate() As String
            Get
                Try
                    Return CType(Me(Me.tableOptionCodes5kHz.IOdataRateColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IOdataRate' in table 'OptionCodes5kHz' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableOptionCodes5kHz.IOdataRateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ModulationType() As String
            Get
                Try
                    Return CType(Me(Me.tableOptionCodes5kHz.ModulationTypeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ModulationType' in table 'OptionCodes5kHz' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableOptionCodes5kHz.ModulationTypeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property KG84Compliant() As String
            Get
                Try
                    Return CType(Me(Me.tableOptionCodes5kHz.KG84CompliantColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KG84Compliant' in table 'OptionCodes5kHz' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableOptionCodes5kHz.KG84CompliantColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ANDVTcompliant() As String
            Get
                Try
                    Return CType(Me(Me.tableOptionCodes5kHz.ANDVTcompliantColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANDVTcompliant' in table 'OptionCodes5kHz' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableOptionCodes5kHz.ANDVTcompliantColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ForwardErrorCorrection() As String
            Get
                Try
                    Return CType(Me(Me.tableOptionCodes5kHz.ForwardErrorCorrectionColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ForwardErrorCorrection' in table 'OptionCodes5kHz' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableOptionCodes5kHz.ForwardErrorCorrectionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIOdataRateNull() As Boolean
            Return Me.IsNull(Me.tableOptionCodes5kHz.IOdataRateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIOdataRateNull()
            Me(Me.tableOptionCodes5kHz.IOdataRateColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsModulationTypeNull() As Boolean
            Return Me.IsNull(Me.tableOptionCodes5kHz.ModulationTypeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetModulationTypeNull()
            Me(Me.tableOptionCodes5kHz.ModulationTypeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsKG84CompliantNull() As Boolean
            Return Me.IsNull(Me.tableOptionCodes5kHz.KG84CompliantColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetKG84CompliantNull()
            Me(Me.tableOptionCodes5kHz.KG84CompliantColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsANDVTcompliantNull() As Boolean
            Return Me.IsNull(Me.tableOptionCodes5kHz.ANDVTcompliantColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetANDVTcompliantNull()
            Me(Me.tableOptionCodes5kHz.ANDVTcompliantColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsForwardErrorCorrectionNull() As Boolean
            Return Me.IsNull(Me.tableOptionCodes5kHz.ForwardErrorCorrectionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetForwardErrorCorrectionNull()
            Me(Me.tableOptionCodes5kHz.ForwardErrorCorrectionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CTCSSRow
        Inherits Global.System.Data.DataRow

        Private tableCTCSS As CTCSSDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCTCSS = CType(Me.Table, CTCSSDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FREQ() As String
            Get
                Return CType(Me(Me.tableCTCSS.FREQColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCTCSS.FREQColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EIA() As String
            Get
                Return CType(Me(Me.tableCTCSS.EIAColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCTCSS.EIAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property HAM() As String
            Get
                Return CType(Me(Me.tableCTCSS.HAMColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCTCSS.HAMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property index() As Integer
            Get
                Try
                    Return CType(Me(Me.tableCTCSS.indexColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'index' in table 'CTCSS' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableCTCSS.indexColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsindexNull() As Boolean
            Return Me.IsNull(Me.tableCTCSS.indexColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetindexNull()
            Me(Me.tableCTCSS.indexColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class GlobalSavedItemsRow
        Inherits Global.System.Data.DataRow

        Private tableGlobalSavedItems As GlobalSavedItemsDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGlobalSavedItems = CType(Me.Table, GlobalSavedItemsDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tableGlobalSavedItems.IdColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableGlobalSavedItems.IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GlobalEnableScan() As String
            Get
                Try
                    Return CType(Me(Me.tableGlobalSavedItems.GlobalEnableScanColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GlobalEnableScan' in table 'GlobalSavedItems' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGlobalSavedItems.GlobalEnableScanColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GlobalPriorityTx() As String
            Get
                Try
                    Return CType(Me(Me.tableGlobalSavedItems.GlobalPriorityTxColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GlobalPriorityTx' in table 'GlobalSavedItems' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGlobalSavedItems.GlobalPriorityTxColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GlobalPriorityRxEnable() As String
            Get
                Try
                    Return CType(Me(Me.tableGlobalSavedItems.GlobalPriorityRxEnableColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GlobalPriorityRxEnable' in table 'GlobalSavedItems' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGlobalSavedItems.GlobalPriorityRxEnableColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GlobalPriorityRx() As String
            Get
                Try
                    Return CType(Me(Me.tableGlobalSavedItems.GlobalPriorityRxColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GlobalPriorityRx' in table 'GlobalSavedItems' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGlobalSavedItems.GlobalPriorityRxColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GlobalHangTime() As String
            Get
                Try
                    Return CType(Me(Me.tableGlobalSavedItems.GlobalHangTimeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GlobalHangTime' in table 'GlobalSavedItems' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGlobalSavedItems.GlobalHangTimeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GlobalEnableHoldTime() As String
            Get
                Try
                    Return CType(Me(Me.tableGlobalSavedItems.GlobalEnableHoldTimeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GlobalEnableHoldTime' in table 'GlobalSavedItems' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGlobalSavedItems.GlobalEnableHoldTimeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GlobalHoldTimeDuration() As String
            Get
                Try
                    Return CType(Me(Me.tableGlobalSavedItems.GlobalHoldTimeDurationColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GlobalHoldTimeDuration' in table 'GlobalSavedItems' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGlobalSavedItems.GlobalHoldTimeDurationColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGlobalEnableScanNull() As Boolean
            Return Me.IsNull(Me.tableGlobalSavedItems.GlobalEnableScanColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGlobalEnableScanNull()
            Me(Me.tableGlobalSavedItems.GlobalEnableScanColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGlobalPriorityTxNull() As Boolean
            Return Me.IsNull(Me.tableGlobalSavedItems.GlobalPriorityTxColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGlobalPriorityTxNull()
            Me(Me.tableGlobalSavedItems.GlobalPriorityTxColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGlobalPriorityRxEnableNull() As Boolean
            Return Me.IsNull(Me.tableGlobalSavedItems.GlobalPriorityRxEnableColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGlobalPriorityRxEnableNull()
            Me(Me.tableGlobalSavedItems.GlobalPriorityRxEnableColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGlobalPriorityRxNull() As Boolean
            Return Me.IsNull(Me.tableGlobalSavedItems.GlobalPriorityRxColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGlobalPriorityRxNull()
            Me(Me.tableGlobalSavedItems.GlobalPriorityRxColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGlobalHangTimeNull() As Boolean
            Return Me.IsNull(Me.tableGlobalSavedItems.GlobalHangTimeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGlobalHangTimeNull()
            Me(Me.tableGlobalSavedItems.GlobalHangTimeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGlobalEnableHoldTimeNull() As Boolean
            Return Me.IsNull(Me.tableGlobalSavedItems.GlobalEnableHoldTimeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGlobalEnableHoldTimeNull()
            Me(Me.tableGlobalSavedItems.GlobalEnableHoldTimeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGlobalHoldTimeDurationNull() As Boolean
            Return Me.IsNull(Me.tableGlobalSavedItems.GlobalHoldTimeDurationColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGlobalHoldTimeDurationNull()
            Me(Me.tableGlobalSavedItems.GlobalHoldTimeDurationColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class PRCtrainerRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As PRCtrainerRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As PRCtrainerRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As PRCtrainerRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class SATCOMpresetsRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As SATCOMpresetsRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As SATCOMpresetsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As SATCOMpresetsRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class OptionCodes25kHzRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As OptionCodes25kHzRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As OptionCodes25kHzRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As OptionCodes25kHzRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class OptionCodes5kHzRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As OptionCodes5kHzRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As OptionCodes5kHzRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As OptionCodes5kHzRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class CTCSSRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As CTCSSRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As CTCSSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As CTCSSRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class GlobalSavedItemsRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As GlobalSavedItemsRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As GlobalSavedItemsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As GlobalSavedItemsRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace StoredPresetsDataSetTableAdapters

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class PRCtrainerTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PRCtrainer"
            tableMapping.ColumnMappings.Add("PresetNumber", "PresetNumber")
            tableMapping.ColumnMappings.Add("PresetName", "PresetName")
            tableMapping.ColumnMappings.Add("PresetType", "PresetType")
            tableMapping.ColumnMappings.Add("PresetTraffic", "PresetTraffic")
            tableMapping.ColumnMappings.Add("PresetModulation", "PresetModulation")
            tableMapping.ColumnMappings.Add("PresetDescription", "PresetDescription")
            tableMapping.ColumnMappings.Add("PresetRXfreq", "PresetRXfreq")
            tableMapping.ColumnMappings.Add("PresetTXfreq", "PresetTXfreq")
            tableMapping.ColumnMappings.Add("PresetWaveform", "PresetWaveform")
            tableMapping.ColumnMappings.Add("PresetChannel", "PresetChannel")
            tableMapping.ColumnMappings.Add("PresetKey", "PresetKey")
            tableMapping.ColumnMappings.Add("PresetOptionCode", "PresetOptionCode")
            tableMapping.ColumnMappings.Add("PresetBandwidth", "PresetBandwidth")
            tableMapping.ColumnMappings.Add("PresetBPSrate", "PresetBPSrate")
            tableMapping.ColumnMappings.Add("PresetVoiceMode", "PresetVoiceMode")
            tableMapping.ColumnMappings.Add("PresetInterleaveDepth", "PresetInterleaveDepth")
            tableMapping.ColumnMappings.Add("PresetFWDerrorCorrection", "PresetFWDerrorCorrection")
            tableMapping.ColumnMappings.Add("PresetSquelch", "PresetSquelch")
            tableMapping.ColumnMappings.Add("sp1", "PresetCryptoMode")
            tableMapping.ColumnMappings.Add("sp2", "PresetCryptoKey")
            tableMapping.ColumnMappings.Add("sp3", "PresetSatcomChannel")
            tableMapping.ColumnMappings.Add("sp4", "PresetDataMode")
            tableMapping.ColumnMappings.Add("sp5", "PresetFascinatorMode")
            tableMapping.ColumnMappings.Add("sp6", "PresetAESMode")
            tableMapping.ColumnMappings.Add("sp7", "PresetKG84Mode")
            tableMapping.ColumnMappings.Add("sp8", "PresetANDVTframes")
            tableMapping.ColumnMappings.Add("sp9", "PresetRXfade")
            tableMapping.ColumnMappings.Add("sp10", "PresetANDVTautoswitch")
            tableMapping.ColumnMappings.Add("PresetCryptoMode", "PresetCryptoMode")
            tableMapping.ColumnMappings.Add("PresetCryptoKey", "PresetCryptoKey")
            tableMapping.ColumnMappings.Add("PresetSatcomChannel", "PresetSatcomChannel")
            tableMapping.ColumnMappings.Add("PresetDataMode", "PresetDataMode")
            tableMapping.ColumnMappings.Add("PresetFascinatorMode", "PresetFascinatorMode")
            tableMapping.ColumnMappings.Add("PresetAESMode", "PresetAESMode")
            tableMapping.ColumnMappings.Add("PresetKG84Mode", "PresetKG84Mode")
            tableMapping.ColumnMappings.Add("PresetANDVTframes", "PresetANDVTframes")
            tableMapping.ColumnMappings.Add("PresetRXfade", "PresetRXfade")
            tableMapping.ColumnMappings.Add("PresetANDVTautoswitch", "PresetANDVTautoswitch")
            tableMapping.ColumnMappings.Add("PresetKeySource", "PresetKeySource")
            tableMapping.ColumnMappings.Add("PresetCodebook", "PresetCodebook")
            tableMapping.ColumnMappings.Add("PresetDeviation", "PresetDeviation")
            tableMapping.ColumnMappings.Add("PresetOptMod", "PresetOptMod")
            tableMapping.ColumnMappings.Add("PresetTXpowerDown", "PresetTXpowerDown")
            tableMapping.ColumnMappings.Add("PresetTXpower", "PresetTXpower")
            tableMapping.ColumnMappings.Add("PresetManualSquelchSetting", "PresetManualSquelchSetting")
            tableMapping.ColumnMappings.Add("PresetCTCSS", "PresetCTCSS")
            tableMapping.ColumnMappings.Add("PresetRxSquelch", "PresetRxSquelch")
            tableMapping.ColumnMappings.Add("PresetCTCSSuserEntry", "PresetCTCSSuserEntry")
            tableMapping.ColumnMappings.Add("PresetCTCSSrxUserEntry", "PresetCTCSSrxUserEntry")
            tableMapping.ColumnMappings.Add("PresetCTCSSrx", "PresetCTCSSrx")
            tableMapping.ColumnMappings.Add("PresetChannelBusyPriority", "PresetChannelBusyPriority")
            tableMapping.ColumnMappings.Add("PresetCDCSStxCode", "PresetCDCSStxCode")
            tableMapping.ColumnMappings.Add("PresetCDCSSrxCode", "PresetCDCSSrxCode")
            tableMapping.ColumnMappings.Add("PresetVinsonCompatibility", "PresetVinsonCompatibility")
            tableMapping.ColumnMappings.Add("PresetBeaconFreq", "PresetBeaconFreq")
            tableMapping.ColumnMappings.Add("PresetBeaconMod", "PresetBeaconMod")
            tableMapping.ColumnMappings.Add("PresetBeaconTxDuration", "PresetBeaconTxDuration")
            tableMapping.ColumnMappings.Add("PresetBeaconOffDuration", "PresetBeaconOffDuration")
            tableMapping.ColumnMappings.Add("PresetBeaconTxPower", "PresetBeaconTxPower")
            tableMapping.ColumnMappings.Add("PresetScanEnable", "PresetSpare")
            tableMapping.ColumnMappings.Add("PresetInScanList", "PresetInScanList")
            tableMapping.ColumnMappings.Add("PresetSpare", "PresetSpare")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [PRCtrainer] WHERE (([PresetNumber] = @Original_PresetNumber) AND ([P" & _
                "resetName] = @Original_PresetName) AND ((@IsNull_PresetType = 1 AND [PresetType]" & _
                " IS NULL) OR ([PresetType] = @Original_PresetType)) AND ((@IsNull_PresetTraffic " & _
                "= 1 AND [PresetTraffic] IS NULL) OR ([PresetTraffic] = @Original_PresetTraffic))" & _
                " AND ((@IsNull_PresetModulation = 1 AND [PresetModulation] IS NULL) OR ([PresetM" & _
                "odulation] = @Original_PresetModulation)) AND ((@IsNull_PresetDescription = 1 AN" & _
                "D [PresetDescription] IS NULL) OR ([PresetDescription] = @Original_PresetDescrip" & _
                "tion)) AND ((@IsNull_PresetRXfreq = 1 AND [PresetRXfreq] IS NULL) OR ([PresetRXf" & _
                "req] = @Original_PresetRXfreq)) AND ((@IsNull_PresetTXfreq = 1 AND [PresetTXfreq" & _
                "] IS NULL) OR ([PresetTXfreq] = @Original_PresetTXfreq)) AND ((@IsNull_PresetWav" & _
                "eform = 1 AND [PresetWaveform] IS NULL) OR ([PresetWaveform] = @Original_PresetW" & _
                "aveform)) AND ((@IsNull_PresetChannel = 1 AND [PresetChannel] IS NULL) OR ([Pres" & _
                "etChannel] = @Original_PresetChannel)) AND ((@IsNull_PresetKey = 1 AND [PresetKe" & _
                "y] IS NULL) OR ([PresetKey] = @Original_PresetKey)) AND ((@IsNull_PresetOptionCo" & _
                "de = 1 AND [PresetOptionCode] IS NULL) OR ([PresetOptionCode] = @Original_Preset" & _
                "OptionCode)) AND ((@IsNull_PresetBandwidth = 1 AND [PresetBandwidth] IS NULL) OR" & _
                " ([PresetBandwidth] = @Original_PresetBandwidth)) AND ((@IsNull_PresetBPSrate = " & _
                "1 AND [PresetBPSrate] IS NULL) OR ([PresetBPSrate] = @Original_PresetBPSrate)) A" & _
                "ND ((@IsNull_PresetVoiceMode = 1 AND [PresetVoiceMode] IS NULL) OR ([PresetVoice" & _
                "Mode] = @Original_PresetVoiceMode)) AND ((@IsNull_PresetInterleaveDepth = 1 AND " & _
                "[PresetInterleaveDepth] IS NULL) OR ([PresetInterleaveDepth] = @Original_PresetI" & _
                "nterleaveDepth)) AND ((@IsNull_PresetFWDerrorCorrection = 1 AND [PresetFWDerrorC" & _
                "orrection] IS NULL) OR ([PresetFWDerrorCorrection] = @Original_PresetFWDerrorCor" & _
                "rection)) AND ((@IsNull_PresetSquelch = 1 AND [PresetSquelch] IS NULL) OR ([Pres" & _
                "etSquelch] = @Original_PresetSquelch)) AND ((@IsNull_PresetCryptoMode = 1 AND [P" & _
                "resetCryptoMode] IS NULL) OR ([PresetCryptoMode] = @Original_PresetCryptoMode)) " & _
                "AND ((@IsNull_PresetCryptoKey = 1 AND [PresetCryptoKey] IS NULL) OR ([PresetCryp" & _
                "toKey] = @Original_PresetCryptoKey)) AND ((@IsNull_PresetSatcomChannel = 1 AND [" & _
                "PresetSatcomChannel] IS NULL) OR ([PresetSatcomChannel] = @Original_PresetSatcom" & _
                "Channel)) AND ((@IsNull_PresetDataMode = 1 AND [PresetDataMode] IS NULL) OR ([Pr" & _
                "esetDataMode] = @Original_PresetDataMode)) AND ((@IsNull_PresetFascinatorMode = " & _
                "1 AND [PresetFascinatorMode] IS NULL) OR ([PresetFascinatorMode] = @Original_Pre" & _
                "setFascinatorMode)) AND ((@IsNull_PresetAESMode = 1 AND [PresetAESMode] IS NULL)" & _
                " OR ([PresetAESMode] = @Original_PresetAESMode)) AND ((@IsNull_PresetKG84Mode = " & _
                "1 AND [PresetKG84Mode] IS NULL) OR ([PresetKG84Mode] = @Original_PresetKG84Mode)" & _
                ") AND ((@IsNull_PresetANDVTframes = 1 AND [PresetANDVTframes] IS NULL) OR ([Pres" & _
                "etANDVTframes] = @Original_PresetANDVTframes)) AND ((@IsNull_PresetRXfade = 1 AN" & _
                "D [PresetRXfade] IS NULL) OR ([PresetRXfade] = @Original_PresetRXfade)) AND ((@I" & _
                "sNull_PresetANDVTautoswitch = 1 AND [PresetANDVTautoswitch] IS NULL) OR ([Preset" & _
                "ANDVTautoswitch] = @Original_PresetANDVTautoswitch)) AND ((@IsNull_PresetKeySour" & _
                "ce = 1 AND [PresetKeySource] IS NULL) OR ([PresetKeySource] = @Original_PresetKe" & _
                "ySource)) AND ((@IsNull_PresetCodebook = 1 AND [PresetCodebook] IS NULL) OR ([Pr" & _
                "esetCodebook] = @Original_PresetCodebook)) AND ((@IsNull_PresetDeviation = 1 AND" & _
                " [PresetDeviation] IS NULL) OR ([PresetDeviation] = @Original_PresetDeviation)) " & _
                "AND ((@IsNull_PresetOptMod = 1 AND [PresetOptMod] IS NULL) OR ([PresetOptMod] = " & _
                "@Original_PresetOptMod)) AND ((@IsNull_PresetTXpower = 1 AND [PresetTXpower] IS " & _
                "NULL) OR ([PresetTXpower] = @Original_PresetTXpower)) AND ((@IsNull_PresetTXpowe" & _
                "rDown = 1 AND [PresetTXpowerDown] IS NULL) OR ([PresetTXpowerDown] = @Original_P" & _
                "resetTXpowerDown)) AND ((@IsNull_PresetManualSquelchSetting = 1 AND [PresetManua" & _
                "lSquelchSetting] IS NULL) OR ([PresetManualSquelchSetting] = @Original_PresetMan" & _
                "ualSquelchSetting)) AND ((@IsNull_PresetCTCSS = 1 AND [PresetCTCSS] IS NULL) OR " & _
                "([PresetCTCSS] = @Original_PresetCTCSS)) AND ((@IsNull_PresetRxSquelch = 1 AND [" & _
                "PresetRxSquelch] IS NULL) OR ([PresetRxSquelch] = @Original_PresetRxSquelch)) AN" & _
                "D ((@IsNull_PresetCTCSSuserEntry = 1 AND [PresetCTCSSuserEntry] IS NULL) OR ([Pr" & _
                "esetCTCSSuserEntry] = @Original_PresetCTCSSuserEntry)) AND ((@IsNull_PresetCTCSS" & _
                "rxUserEntry = 1 AND [PresetCTCSSrxUserEntry] IS NULL) OR ([PresetCTCSSrxUserEntr" & _
                "y] = @Original_PresetCTCSSrxUserEntry)) AND ((@IsNull_PresetCTCSSrx = 1 AND [Pre" & _
                "setCTCSSrx] IS NULL) OR ([PresetCTCSSrx] = @Original_PresetCTCSSrx)) AND ((@IsNu" & _
                "ll_PresetChannelBusyPriority = 1 AND [PresetChannelBusyPriority] IS NULL) OR ([P" & _
                "resetChannelBusyPriority] = @Original_PresetChannelBusyPriority)) AND ((@IsNull_" & _
                "PresetCDCSStxCode = 1 AND [PresetCDCSStxCode] IS NULL) OR ([PresetCDCSStxCode] =" & _
                " @Original_PresetCDCSStxCode)) AND ((@IsNull_PresetCDCSSrxCode = 1 AND [PresetCD" & _
                "CSSrxCode] IS NULL) OR ([PresetCDCSSrxCode] = @Original_PresetCDCSSrxCode)) AND " & _
                "((@IsNull_PresetVinsonCompatibility = 1 AND [PresetVinsonCompatibility] IS NULL)" & _
                " OR ([PresetVinsonCompatibility] = @Original_PresetVinsonCompatibility)) AND ((@" & _
                "IsNull_PresetBeaconFreq = 1 AND [PresetBeaconFreq] IS NULL) OR ([PresetBeaconFre" & _
                "q] = @Original_PresetBeaconFreq)) AND ((@IsNull_PresetBeaconMod = 1 AND [PresetB" & _
                "eaconMod] IS NULL) OR ([PresetBeaconMod] = @Original_PresetBeaconMod)) AND ((@Is" & _
                "Null_PresetBeaconTxDuration = 1 AND [PresetBeaconTxDuration] IS NULL) OR ([Prese" & _
                "tBeaconTxDuration] = @Original_PresetBeaconTxDuration)) AND ((@IsNull_PresetBeac" & _
                "onOffDuration = 1 AND [PresetBeaconOffDuration] IS NULL) OR ([PresetBeaconOffDur" & _
                "ation] = @Original_PresetBeaconOffDuration)) AND ((@IsNull_PresetBeaconTxPower =" & _
                " 1 AND [PresetBeaconTxPower] IS NULL) OR ([PresetBeaconTxPower] = @Original_Pres" & _
                "etBeaconTxPower)) AND ((@IsNull_PresetSpare = 1 AND [PresetSpare] IS NULL) OR ([" & _
                "PresetSpare] = @Original_PresetSpare)) AND ((@IsNull_PresetInScanList = 1 AND [P" & _
                "resetInScanList] IS NULL) OR ([PresetInScanList] = @Original_PresetInScanList)))" & _
                ""
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetNumber", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetName", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetType", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetType", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetTraffic", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTraffic", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetTraffic", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTraffic", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetModulation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetModulation", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetModulation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetModulation", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetDescription", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetDescription", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetDescription", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetDescription", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetRXfreq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetRXfreq", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetRXfreq", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetRXfreq", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetTXfreq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTXfreq", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetTXfreq", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTXfreq", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetWaveform", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetWaveform", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetWaveform", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetWaveform", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetChannel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetChannel", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetChannel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetChannel", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetKey", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetKey", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetKey", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetKey", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetOptionCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetOptionCode", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetOptionCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetOptionCode", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetBandwidth", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBandwidth", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetBandwidth", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBandwidth", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetBPSrate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBPSrate", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetBPSrate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBPSrate", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetVoiceMode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetVoiceMode", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetVoiceMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetVoiceMode", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetInterleaveDepth", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetInterleaveDepth", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetInterleaveDepth", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetInterleaveDepth", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetFWDerrorCorrection", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetFWDerrorCorrection", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetFWDerrorCorrection", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetFWDerrorCorrection", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetSquelch", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetSquelch", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetSquelch", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetSquelch", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetCryptoMode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCryptoMode", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetCryptoMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCryptoMode", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetCryptoKey", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCryptoKey", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetCryptoKey", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCryptoKey", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetSatcomChannel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetSatcomChannel", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetSatcomChannel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetSatcomChannel", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetDataMode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetDataMode", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetDataMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetDataMode", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetFascinatorMode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetFascinatorMode", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetFascinatorMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetFascinatorMode", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetAESMode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetAESMode", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetAESMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetAESMode", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetKG84Mode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetKG84Mode", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetKG84Mode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetKG84Mode", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetANDVTframes", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetANDVTframes", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetANDVTframes", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetANDVTframes", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetRXfade", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetRXfade", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetRXfade", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetRXfade", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetANDVTautoswitch", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetANDVTautoswitch", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetANDVTautoswitch", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetANDVTautoswitch", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetKeySource", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetKeySource", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetKeySource", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetKeySource", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetCodebook", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCodebook", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetCodebook", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCodebook", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetDeviation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetDeviation", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetDeviation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetDeviation", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetOptMod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetOptMod", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetOptMod", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetOptMod", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetTXpower", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTXpower", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetTXpower", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTXpower", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetTXpowerDown", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTXpowerDown", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetTXpowerDown", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTXpowerDown", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetManualSquelchSetting", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetManualSquelchSetting", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetManualSquelchSetting", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetManualSquelchSetting", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetCTCSS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSS", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetCTCSS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSS", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetRxSquelch", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetRxSquelch", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetRxSquelch", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetRxSquelch", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetCTCSSuserEntry", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSSuserEntry", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetCTCSSuserEntry", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSSuserEntry", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetCTCSSrxUserEntry", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSSrxUserEntry", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetCTCSSrxUserEntry", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSSrxUserEntry", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetCTCSSrx", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSSrx", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetCTCSSrx", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSSrx", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetChannelBusyPriority", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetChannelBusyPriority", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetChannelBusyPriority", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetChannelBusyPriority", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetCDCSStxCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCDCSStxCode", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetCDCSStxCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCDCSStxCode", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetCDCSSrxCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCDCSSrxCode", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetCDCSSrxCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCDCSSrxCode", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetVinsonCompatibility", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetVinsonCompatibility", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetVinsonCompatibility", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetVinsonCompatibility", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetBeaconFreq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconFreq", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetBeaconFreq", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconFreq", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetBeaconMod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconMod", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetBeaconMod", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconMod", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetBeaconTxDuration", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconTxDuration", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetBeaconTxDuration", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconTxDuration", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetBeaconOffDuration", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconOffDuration", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetBeaconOffDuration", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconOffDuration", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetBeaconTxPower", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconTxPower", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetBeaconTxPower", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconTxPower", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetSpare", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetSpare", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetSpare", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetSpare", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetInScanList", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetInScanList", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetInScanList", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetInScanList", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [PRCtrainer] ([PresetNumber], [PresetName], [PresetType], [PresetTraf" & _
                "fic], [PresetModulation], [PresetDescription], [PresetRXfreq], [PresetTXfreq], [" & _
                "PresetWaveform], [PresetChannel], [PresetKey], [PresetOptionCode], [PresetBandwi" & _
                "dth], [PresetBPSrate], [PresetVoiceMode], [PresetInterleaveDepth], [PresetFWDerr" & _
                "orCorrection], [PresetSquelch], [PresetCryptoMode], [PresetCryptoKey], [PresetSa" & _
                "tcomChannel], [PresetDataMode], [PresetFascinatorMode], [PresetAESMode], [Preset" & _
                "KG84Mode], [PresetANDVTframes], [PresetRXfade], [PresetANDVTautoswitch], [Preset" & _
                "KeySource], [PresetCodebook], [PresetDeviation], [PresetOptMod], [PresetTXpower]" & _
                ", [PresetTXpowerDown], [PresetManualSquelchSetting], [PresetCTCSS], [PresetRxSqu" & _
                "elch], [PresetCTCSSuserEntry], [PresetCTCSSrxUserEntry], [PresetCTCSSrx], [Prese" & _
                "tChannelBusyPriority], [PresetCDCSStxCode], [PresetCDCSSrxCode], [PresetVinsonCo" & _
                "mpatibility], [PresetBeaconFreq], [PresetBeaconMod], [PresetBeaconTxDuration], [" & _
                "PresetBeaconOffDuration], [PresetBeaconTxPower], [PresetSpare], [PresetInScanLis" & _
                "t]) VALUES (@PresetNumber, @PresetName, @PresetType, @PresetTraffic, @PresetModu" & _
                "lation, @PresetDescription, @PresetRXfreq, @PresetTXfreq, @PresetWaveform, @Pres" & _
                "etChannel, @PresetKey, @PresetOptionCode, @PresetBandwidth, @PresetBPSrate, @Pre" & _
                "setVoiceMode, @PresetInterleaveDepth, @PresetFWDerrorCorrection, @PresetSquelch," & _
                " @PresetCryptoMode, @PresetCryptoKey, @PresetSatcomChannel, @PresetDataMode, @Pr" & _
                "esetFascinatorMode, @PresetAESMode, @PresetKG84Mode, @PresetANDVTframes, @Preset" & _
                "RXfade, @PresetANDVTautoswitch, @PresetKeySource, @PresetCodebook, @PresetDeviat" & _
                "ion, @PresetOptMod, @PresetTXpower, @PresetTXpowerDown, @PresetManualSquelchSett" & _
                "ing, @PresetCTCSS, @PresetRxSquelch, @PresetCTCSSuserEntry, @PresetCTCSSrxUserEn" & _
                "try, @PresetCTCSSrx, @PresetChannelBusyPriority, @PresetCDCSStxCode, @PresetCDCS" & _
                "SrxCode, @PresetVinsonCompatibility, @PresetBeaconFreq, @PresetBeaconMod, @Prese" & _
                "tBeaconTxDuration, @PresetBeaconOffDuration, @PresetBeaconTxPower, @PresetSpare," & _
                " @PresetInScanList);" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SELECT PresetNumber, PresetName, PresetType, PresetTraffic" & _
                ", PresetModulation, PresetDescription, PresetRXfreq, PresetTXfreq, PresetWavefor" & _
                "m, PresetChannel, PresetKey, PresetOptionCode, PresetBandwidth, PresetBPSrate, P" & _
                "resetVoiceMode, PresetInterleaveDepth, PresetFWDerrorCorrection, PresetSquelch, " & _
                "PresetCryptoMode, PresetCryptoKey, PresetSatcomChannel, PresetDataMode, PresetFa" & _
                "scinatorMode, PresetAESMode, PresetKG84Mode, PresetANDVTframes, PresetRXfade, Pr" & _
                "esetANDVTautoswitch, PresetKeySource, PresetCodebook, PresetDeviation, PresetOpt" & _
                "Mod, PresetTXpower, PresetTXpowerDown, PresetManualSquelchSetting, PresetCTCSS, " & _
                "PresetRxSquelch, PresetCTCSSuserEntry, PresetCTCSSrxUserEntry, PresetCTCSSrx, Pr" & _
                "esetChannelBusyPriority, PresetCDCSStxCode, PresetCDCSSrxCode, PresetVinsonCompa" & _
                "tibility, PresetBeaconFreq, PresetBeaconMod, PresetBeaconTxDuration, PresetBeaco" & _
                "nOffDuration, PresetBeaconTxPower, PresetSpare, PresetInScanList FROM PRCtrainer" & _
                " WHERE (PresetNumber = @PresetNumber)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetNumber", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetName", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetType", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetTraffic", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTraffic", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetModulation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetModulation", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetDescription", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetDescription", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetRXfreq", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetRXfreq", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetTXfreq", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTXfreq", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetWaveform", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetWaveform", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetChannel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetChannel", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetKey", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetKey", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetOptionCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetOptionCode", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetBandwidth", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBandwidth", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetBPSrate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBPSrate", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetVoiceMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetVoiceMode", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetInterleaveDepth", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetInterleaveDepth", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetFWDerrorCorrection", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetFWDerrorCorrection", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetSquelch", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetSquelch", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetCryptoMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCryptoMode", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetCryptoKey", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCryptoKey", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetSatcomChannel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetSatcomChannel", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetDataMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetDataMode", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetFascinatorMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetFascinatorMode", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetAESMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetAESMode", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetKG84Mode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetKG84Mode", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetANDVTframes", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetANDVTframes", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetRXfade", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetRXfade", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetANDVTautoswitch", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetANDVTautoswitch", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetKeySource", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetKeySource", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetCodebook", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCodebook", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetDeviation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetDeviation", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetOptMod", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetOptMod", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetTXpower", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTXpower", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetTXpowerDown", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTXpowerDown", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetManualSquelchSetting", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetManualSquelchSetting", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetCTCSS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSS", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetRxSquelch", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetRxSquelch", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetCTCSSuserEntry", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSSuserEntry", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetCTCSSrxUserEntry", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSSrxUserEntry", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetCTCSSrx", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSSrx", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetChannelBusyPriority", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetChannelBusyPriority", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetCDCSStxCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCDCSStxCode", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetCDCSSrxCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCDCSSrxCode", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetVinsonCompatibility", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetVinsonCompatibility", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetBeaconFreq", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconFreq", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetBeaconMod", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconMod", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetBeaconTxDuration", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconTxDuration", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetBeaconOffDuration", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconOffDuration", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetBeaconTxPower", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconTxPower", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetSpare", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetSpare", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetInScanList", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetInScanList", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [PRCtrainer] SET [PresetNumber] = @PresetNumber, [PresetName] = @PresetNam" & _
                "e, [PresetType] = @PresetType, [PresetTraffic] = @PresetTraffic, [PresetModulati" & _
                "on] = @PresetModulation, [PresetDescription] = @PresetDescription, [PresetRXfreq" & _
                "] = @PresetRXfreq, [PresetTXfreq] = @PresetTXfreq, [PresetWaveform] = @PresetWav" & _
                "eform, [PresetChannel] = @PresetChannel, [PresetKey] = @PresetKey, [PresetOption" & _
                "Code] = @PresetOptionCode, [PresetBandwidth] = @PresetBandwidth, [PresetBPSrate]" & _
                " = @PresetBPSrate, [PresetVoiceMode] = @PresetVoiceMode, [PresetInterleaveDepth]" & _
                " = @PresetInterleaveDepth, [PresetFWDerrorCorrection] = @PresetFWDerrorCorrectio" & _
                "n, [PresetSquelch] = @PresetSquelch, [PresetCryptoMode] = @PresetCryptoMode, [Pr" & _
                "esetCryptoKey] = @PresetCryptoKey, [PresetSatcomChannel] = @PresetSatcomChannel," & _
                " [PresetDataMode] = @PresetDataMode, [PresetFascinatorMode] = @PresetFascinatorM" & _
                "ode, [PresetAESMode] = @PresetAESMode, [PresetKG84Mode] = @PresetKG84Mode, [Pres" & _
                "etANDVTframes] = @PresetANDVTframes, [PresetRXfade] = @PresetRXfade, [PresetANDV" & _
                "Tautoswitch] = @PresetANDVTautoswitch, [PresetKeySource] = @PresetKeySource, [Pr" & _
                "esetCodebook] = @PresetCodebook, [PresetDeviation] = @PresetDeviation, [PresetOp" & _
                "tMod] = @PresetOptMod, [PresetTXpower] = @PresetTXpower, [PresetTXpowerDown] = @" & _
                "PresetTXpowerDown, [PresetManualSquelchSetting] = @PresetManualSquelchSetting, [" & _
                "PresetCTCSS] = @PresetCTCSS, [PresetRxSquelch] = @PresetRxSquelch, [PresetCTCSSu" & _
                "serEntry] = @PresetCTCSSuserEntry, [PresetCTCSSrxUserEntry] = @PresetCTCSSrxUser" & _
                "Entry, [PresetCTCSSrx] = @PresetCTCSSrx, [PresetChannelBusyPriority] = @PresetCh" & _
                "annelBusyPriority, [PresetCDCSStxCode] = @PresetCDCSStxCode, [PresetCDCSSrxCode]" & _
                " = @PresetCDCSSrxCode, [PresetVinsonCompatibility] = @PresetVinsonCompatibility," & _
                " [PresetBeaconFreq] = @PresetBeaconFreq, [PresetBeaconMod] = @PresetBeaconMod, [" & _
                "PresetBeaconTxDuration] = @PresetBeaconTxDuration, [PresetBeaconOffDuration] = @" & _
                "PresetBeaconOffDuration, [PresetBeaconTxPower] = @PresetBeaconTxPower, [PresetSp" & _
                "are] = @PresetSpare, [PresetInScanList] = @PresetInScanList WHERE (([PresetNumbe" & _
                "r] = @Original_PresetNumber) AND ([PresetName] = @Original_PresetName) AND ((@Is" & _
                "Null_PresetType = 1 AND [PresetType] IS NULL) OR ([PresetType] = @Original_Prese" & _
                "tType)) AND ((@IsNull_PresetTraffic = 1 AND [PresetTraffic] IS NULL) OR ([Preset" & _
                "Traffic] = @Original_PresetTraffic)) AND ((@IsNull_PresetModulation = 1 AND [Pre" & _
                "setModulation] IS NULL) OR ([PresetModulation] = @Original_PresetModulation)) AN" & _
                "D ((@IsNull_PresetDescription = 1 AND [PresetDescription] IS NULL) OR ([PresetDe" & _
                "scription] = @Original_PresetDescription)) AND ((@IsNull_PresetRXfreq = 1 AND [P" & _
                "resetRXfreq] IS NULL) OR ([PresetRXfreq] = @Original_PresetRXfreq)) AND ((@IsNul" & _
                "l_PresetTXfreq = 1 AND [PresetTXfreq] IS NULL) OR ([PresetTXfreq] = @Original_Pr" & _
                "esetTXfreq)) AND ((@IsNull_PresetWaveform = 1 AND [PresetWaveform] IS NULL) OR (" & _
                "[PresetWaveform] = @Original_PresetWaveform)) AND ((@IsNull_PresetChannel = 1 AN" & _
                "D [PresetChannel] IS NULL) OR ([PresetChannel] = @Original_PresetChannel)) AND (" & _
                "(@IsNull_PresetKey = 1 AND [PresetKey] IS NULL) OR ([PresetKey] = @Original_Pres" & _
                "etKey)) AND ((@IsNull_PresetOptionCode = 1 AND [PresetOptionCode] IS NULL) OR ([" & _
                "PresetOptionCode] = @Original_PresetOptionCode)) AND ((@IsNull_PresetBandwidth =" & _
                " 1 AND [PresetBandwidth] IS NULL) OR ([PresetBandwidth] = @Original_PresetBandwi" & _
                "dth)) AND ((@IsNull_PresetBPSrate = 1 AND [PresetBPSrate] IS NULL) OR ([PresetBP" & _
                "Srate] = @Original_PresetBPSrate)) AND ((@IsNull_PresetVoiceMode = 1 AND [Preset" & _
                "VoiceMode] IS NULL) OR ([PresetVoiceMode] = @Original_PresetVoiceMode)) AND ((@I" & _
                "sNull_PresetInterleaveDepth = 1 AND [PresetInterleaveDepth] IS NULL) OR ([Preset" & _
                "InterleaveDepth] = @Original_PresetInterleaveDepth)) AND ((@IsNull_PresetFWDerro" & _
                "rCorrection = 1 AND [PresetFWDerrorCorrection] IS NULL) OR ([PresetFWDerrorCorre" & _
                "ction] = @Original_PresetFWDerrorCorrection)) AND ((@IsNull_PresetSquelch = 1 AN" & _
                "D [PresetSquelch] IS NULL) OR ([PresetSquelch] = @Original_PresetSquelch)) AND (" & _
                "(@IsNull_PresetCryptoMode = 1 AND [PresetCryptoMode] IS NULL) OR ([PresetCryptoM" & _
                "ode] = @Original_PresetCryptoMode)) AND ((@IsNull_PresetCryptoKey = 1 AND [Prese" & _
                "tCryptoKey] IS NULL) OR ([PresetCryptoKey] = @Original_PresetCryptoKey)) AND ((@" & _
                "IsNull_PresetSatcomChannel = 1 AND [PresetSatcomChannel] IS NULL) OR ([PresetSat" & _
                "comChannel] = @Original_PresetSatcomChannel)) AND ((@IsNull_PresetDataMode = 1 A" & _
                "ND [PresetDataMode] IS NULL) OR ([PresetDataMode] = @Original_PresetDataMode)) A" & _
                "ND ((@IsNull_PresetFascinatorMode = 1 AND [PresetFascinatorMode] IS NULL) OR ([P" & _
                "resetFascinatorMode] = @Original_PresetFascinatorMode)) AND ((@IsNull_PresetAESM" & _
                "ode = 1 AND [PresetAESMode] IS NULL) OR ([PresetAESMode] = @Original_PresetAESMo" & _
                "de)) AND ((@IsNull_PresetKG84Mode = 1 AND [PresetKG84Mode] IS NULL) OR ([PresetK" & _
                "G84Mode] = @Original_PresetKG84Mode)) AND ((@IsNull_PresetANDVTframes = 1 AND [P" & _
                "resetANDVTframes] IS NULL) OR ([PresetANDVTframes] = @Original_PresetANDVTframes" & _
                ")) AND ((@IsNull_PresetRXfade = 1 AND [PresetRXfade] IS NULL) OR ([PresetRXfade]" & _
                " = @Original_PresetRXfade)) AND ((@IsNull_PresetANDVTautoswitch = 1 AND [PresetA" & _
                "NDVTautoswitch] IS NULL) OR ([PresetANDVTautoswitch] = @Original_PresetANDVTauto" & _
                "switch)) AND ((@IsNull_PresetKeySource = 1 AND [PresetKeySource] IS NULL) OR ([P" & _
                "resetKeySource] = @Original_PresetKeySource)) AND ((@IsNull_PresetCodebook = 1 A" & _
                "ND [PresetCodebook] IS NULL) OR ([PresetCodebook] = @Original_PresetCodebook)) A" & _
                "ND ((@IsNull_PresetDeviation = 1 AND [PresetDeviation] IS NULL) OR ([PresetDevia" & _
                "tion] = @Original_PresetDeviation)) AND ((@IsNull_PresetOptMod = 1 AND [PresetOp" & _
                "tMod] IS NULL) OR ([PresetOptMod] = @Original_PresetOptMod)) AND ((@IsNull_Prese" & _
                "tTXpower = 1 AND [PresetTXpower] IS NULL) OR ([PresetTXpower] = @Original_Preset" & _
                "TXpower)) AND ((@IsNull_PresetTXpowerDown = 1 AND [PresetTXpowerDown] IS NULL) O" & _
                "R ([PresetTXpowerDown] = @Original_PresetTXpowerDown)) AND ((@IsNull_PresetManua" & _
                "lSquelchSetting = 1 AND [PresetManualSquelchSetting] IS NULL) OR ([PresetManualS" & _
                "quelchSetting] = @Original_PresetManualSquelchSetting)) AND ((@IsNull_PresetCTCS" & _
                "S = 1 AND [PresetCTCSS] IS NULL) OR ([PresetCTCSS] = @Original_PresetCTCSS)) AND" & _
                " ((@IsNull_PresetRxSquelch = 1 AND [PresetRxSquelch] IS NULL) OR ([PresetRxSquel" & _
                "ch] = @Original_PresetRxSquelch)) AND ((@IsNull_PresetCTCSSuserEntry = 1 AND [Pr" & _
                "esetCTCSSuserEntry] IS NULL) OR ([PresetCTCSSuserEntry] = @Original_PresetCTCSSu" & _
                "serEntry)) AND ((@IsNull_PresetCTCSSrxUserEntry = 1 AND [PresetCTCSSrxUserEntry]" & _
                " IS NULL) OR ([PresetCTCSSrxUserEntry] = @Original_PresetCTCSSrxUserEntry)) AND " & _
                "((@IsNull_PresetCTCSSrx = 1 AND [PresetCTCSSrx] IS NULL) OR ([PresetCTCSSrx] = @" & _
                "Original_PresetCTCSSrx)) AND ((@IsNull_PresetChannelBusyPriority = 1 AND [Preset" & _
                "ChannelBusyPriority] IS NULL) OR ([PresetChannelBusyPriority] = @Original_Preset" & _
                "ChannelBusyPriority)) AND ((@IsNull_PresetCDCSStxCode = 1 AND [PresetCDCSStxCode" & _
                "] IS NULL) OR ([PresetCDCSStxCode] = @Original_PresetCDCSStxCode)) AND ((@IsNull" & _
                "_PresetCDCSSrxCode = 1 AND [PresetCDCSSrxCode] IS NULL) OR ([PresetCDCSSrxCode] " & _
                "= @Original_PresetCDCSSrxCode)) AND ((@IsNull_PresetVinsonCompatibility = 1 AND " & _
                "[PresetVinsonCompatibility] IS NULL) OR ([PresetVinsonCompatibility] = @Original" & _
                "_PresetVinsonCompatibility)) AND ((@IsNull_PresetBeaconFreq = 1 AND [PresetBeaco" & _
                "nFreq] IS NULL) OR ([PresetBeaconFreq] = @Original_PresetBeaconFreq)) AND ((@IsN" & _
                "ull_PresetBeaconMod = 1 AND [PresetBeaconMod] IS NULL) OR ([PresetBeaconMod] = @" & _
                "Original_PresetBeaconMod)) AND ((@IsNull_PresetBeaconTxDuration = 1 AND [PresetB" & _
                "eaconTxDuration] IS NULL) OR ([PresetBeaconTxDuration] = @Original_PresetBeaconT" & _
                "xDuration)) AND ((@IsNull_PresetBeaconOffDuration = 1 AND [PresetBeaconOffDurati" & _
                "on] IS NULL) OR ([PresetBeaconOffDuration] = @Original_PresetBeaconOffDuration))" & _
                " AND ((@IsNull_PresetBeaconTxPower = 1 AND [PresetBeaconTxPower] IS NULL) OR ([P" & _
                "resetBeaconTxPower] = @Original_PresetBeaconTxPower)) AND ((@IsNull_PresetSpare " & _
                "= 1 AND [PresetSpare] IS NULL) OR ([PresetSpare] = @Original_PresetSpare)) AND (" & _
                "(@IsNull_PresetInScanList = 1 AND [PresetInScanList] IS NULL) OR ([PresetInScanL" & _
                "ist] = @Original_PresetInScanList)));" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SELECT PresetNumber, PresetName, PresetTy" & _
                "pe, PresetTraffic, PresetModulation, PresetDescription, PresetRXfreq, PresetTXfr" & _
                "eq, PresetWaveform, PresetChannel, PresetKey, PresetOptionCode, PresetBandwidth," & _
                " PresetBPSrate, PresetVoiceMode, PresetInterleaveDepth, PresetFWDerrorCorrection" & _
                ", PresetSquelch, PresetCryptoMode, PresetCryptoKey, PresetSatcomChannel, PresetD" & _
                "ataMode, PresetFascinatorMode, PresetAESMode, PresetKG84Mode, PresetANDVTframes," & _
                " PresetRXfade, PresetANDVTautoswitch, PresetKeySource, PresetCodebook, PresetDev" & _
                "iation, PresetOptMod, PresetTXpower, PresetTXpowerDown, PresetManualSquelchSetti" & _
                "ng, PresetCTCSS, PresetRxSquelch, PresetCTCSSuserEntry, PresetCTCSSrxUserEntry, " & _
                "PresetCTCSSrx, PresetChannelBusyPriority, PresetCDCSStxCode, PresetCDCSSrxCode, " & _
                "PresetVinsonCompatibility, PresetBeaconFreq, PresetBeaconMod, PresetBeaconTxDura" & _
                "tion, PresetBeaconOffDuration, PresetBeaconTxPower, PresetSpare, PresetInScanLis" & _
                "t FROM PRCtrainer WHERE (PresetNumber = @PresetNumber)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetNumber", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetName", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetType", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetTraffic", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTraffic", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetModulation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetModulation", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetDescription", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetDescription", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetRXfreq", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetRXfreq", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetTXfreq", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTXfreq", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetWaveform", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetWaveform", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetChannel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetChannel", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetKey", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetKey", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetOptionCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetOptionCode", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetBandwidth", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBandwidth", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetBPSrate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBPSrate", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetVoiceMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetVoiceMode", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetInterleaveDepth", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetInterleaveDepth", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetFWDerrorCorrection", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetFWDerrorCorrection", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetSquelch", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetSquelch", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetCryptoMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCryptoMode", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetCryptoKey", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCryptoKey", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetSatcomChannel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetSatcomChannel", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetDataMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetDataMode", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetFascinatorMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetFascinatorMode", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetAESMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetAESMode", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetKG84Mode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetKG84Mode", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetANDVTframes", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetANDVTframes", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetRXfade", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetRXfade", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetANDVTautoswitch", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetANDVTautoswitch", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetKeySource", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetKeySource", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetCodebook", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCodebook", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetDeviation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetDeviation", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetOptMod", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetOptMod", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetTXpower", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTXpower", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetTXpowerDown", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTXpowerDown", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetManualSquelchSetting", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetManualSquelchSetting", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetCTCSS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSS", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetRxSquelch", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetRxSquelch", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetCTCSSuserEntry", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSSuserEntry", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetCTCSSrxUserEntry", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSSrxUserEntry", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetCTCSSrx", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSSrx", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetChannelBusyPriority", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetChannelBusyPriority", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetCDCSStxCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCDCSStxCode", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetCDCSSrxCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCDCSSrxCode", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetVinsonCompatibility", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetVinsonCompatibility", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetBeaconFreq", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconFreq", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetBeaconMod", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconMod", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetBeaconTxDuration", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconTxDuration", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetBeaconOffDuration", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconOffDuration", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetBeaconTxPower", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconTxPower", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetSpare", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetSpare", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresetInScanList", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetInScanList", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetNumber", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetName", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetType", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetType", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetTraffic", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTraffic", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetTraffic", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTraffic", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetModulation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetModulation", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetModulation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetModulation", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetDescription", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetDescription", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetDescription", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetDescription", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetRXfreq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetRXfreq", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetRXfreq", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetRXfreq", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetTXfreq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTXfreq", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetTXfreq", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTXfreq", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetWaveform", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetWaveform", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetWaveform", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetWaveform", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetChannel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetChannel", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetChannel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetChannel", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetKey", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetKey", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetKey", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetKey", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetOptionCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetOptionCode", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetOptionCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetOptionCode", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetBandwidth", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBandwidth", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetBandwidth", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBandwidth", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetBPSrate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBPSrate", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetBPSrate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBPSrate", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetVoiceMode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetVoiceMode", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetVoiceMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetVoiceMode", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetInterleaveDepth", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetInterleaveDepth", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetInterleaveDepth", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetInterleaveDepth", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetFWDerrorCorrection", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetFWDerrorCorrection", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetFWDerrorCorrection", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetFWDerrorCorrection", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetSquelch", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetSquelch", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetSquelch", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetSquelch", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetCryptoMode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCryptoMode", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetCryptoMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCryptoMode", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetCryptoKey", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCryptoKey", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetCryptoKey", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCryptoKey", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetSatcomChannel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetSatcomChannel", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetSatcomChannel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetSatcomChannel", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetDataMode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetDataMode", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetDataMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetDataMode", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetFascinatorMode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetFascinatorMode", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetFascinatorMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetFascinatorMode", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetAESMode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetAESMode", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetAESMode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetAESMode", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetKG84Mode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetKG84Mode", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetKG84Mode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetKG84Mode", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetANDVTframes", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetANDVTframes", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetANDVTframes", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetANDVTframes", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetRXfade", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetRXfade", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetRXfade", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetRXfade", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetANDVTautoswitch", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetANDVTautoswitch", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetANDVTautoswitch", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetANDVTautoswitch", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetKeySource", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetKeySource", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetKeySource", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetKeySource", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetCodebook", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCodebook", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetCodebook", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCodebook", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetDeviation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetDeviation", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetDeviation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetDeviation", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetOptMod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetOptMod", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetOptMod", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetOptMod", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetTXpower", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTXpower", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetTXpower", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTXpower", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetTXpowerDown", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTXpowerDown", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetTXpowerDown", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetTXpowerDown", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetManualSquelchSetting", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetManualSquelchSetting", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetManualSquelchSetting", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetManualSquelchSetting", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetCTCSS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSS", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetCTCSS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSS", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetRxSquelch", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetRxSquelch", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetRxSquelch", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetRxSquelch", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetCTCSSuserEntry", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSSuserEntry", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetCTCSSuserEntry", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSSuserEntry", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetCTCSSrxUserEntry", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSSrxUserEntry", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetCTCSSrxUserEntry", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSSrxUserEntry", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetCTCSSrx", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSSrx", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetCTCSSrx", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCTCSSrx", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetChannelBusyPriority", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetChannelBusyPriority", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetChannelBusyPriority", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetChannelBusyPriority", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetCDCSStxCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCDCSStxCode", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetCDCSStxCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCDCSStxCode", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetCDCSSrxCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCDCSSrxCode", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetCDCSSrxCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetCDCSSrxCode", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetVinsonCompatibility", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetVinsonCompatibility", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetVinsonCompatibility", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetVinsonCompatibility", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetBeaconFreq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconFreq", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetBeaconFreq", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconFreq", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetBeaconMod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconMod", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetBeaconMod", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconMod", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetBeaconTxDuration", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconTxDuration", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetBeaconTxDuration", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconTxDuration", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetBeaconOffDuration", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconOffDuration", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetBeaconOffDuration", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconOffDuration", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetBeaconTxPower", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconTxPower", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetBeaconTxPower", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetBeaconTxPower", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetSpare", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetSpare", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetSpare", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetSpare", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PresetInScanList", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetInScanList", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresetInScanList", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresetInScanList", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.WindowsApplication1.My.MySettings.Default.StoredPresetsConnectionString1
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT      PresetNumber, PresetName, PresetType, PresetTraffic, PresetModulation" & _
                ", PresetDescription, PresetRXfreq, PresetTXfreq, PresetWaveform, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "             " & _
                "           PresetChannel, PresetKey, PresetOptionCode, PresetBandwidth, PresetBP" & _
                "Srate, PresetVoiceMode, PresetInterleaveDepth, PresetFWDerrorCorrection, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "     " & _
                "                   PresetSquelch, PresetCryptoMode, PresetCryptoKey, PresetSatco" & _
                "mChannel, PresetDataMode, PresetFascinatorMode, PresetAESMode, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "               " & _
                "         PresetKG84Mode, PresetANDVTframes, PresetRXfade, PresetANDVTautoswitch," & _
                " PresetKeySource, PresetCodebook, PresetDeviation, PresetOptMod, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "             " & _
                "           PresetTXpower, PresetTXpowerDown, PresetManualSquelchSetting, PresetC" & _
                "TCSS, PresetRxSquelch, PresetCTCSSuserEntry, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                        PresetCTC" & _
                "SSrxUserEntry, PresetCTCSSrx, PresetChannelBusyPriority, PresetCDCSStxCode, Pres" & _
                "etCDCSSrxCode, PresetVinsonCompatibility, PresetBeaconFreq, PresetBeaconMod, Pre" & _
                "setBeaconTxDuration, PresetBeaconOffDuration, PresetBeaconTxPower, PresetSpare, " & _
                "PresetInScanList" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM          PRCtrainer"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "dbo.ScanListQuery"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As StoredPresetsDataSet.PRCtrainerDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As StoredPresetsDataSet.PRCtrainerDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As StoredPresetsDataSet.PRCtrainerDataTable = New StoredPresetsDataSet.PRCtrainerDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As StoredPresetsDataSet.PRCtrainerDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As StoredPresetsDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "PRCtrainer")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, True)> _
        Public Overridable Overloads Function Delete( _
                    ByVal Original_PresetNumber As String, _
                    ByVal Original_PresetName As String, _
                    ByVal Original_PresetType As String, _
                    ByVal Original_PresetTraffic As String, _
                    ByVal Original_PresetModulation As String, _
                    ByVal Original_PresetDescription As String, _
                    ByVal Original_PresetRXfreq As String, _
                    ByVal Original_PresetTXfreq As String, _
                    ByVal Original_PresetWaveform As String, _
                    ByVal Original_PresetChannel As String, _
                    ByVal Original_PresetKey As String, _
                    ByVal Original_PresetOptionCode As String, _
                    ByVal Original_PresetBandwidth As String, _
                    ByVal Original_PresetBPSrate As String, _
                    ByVal Original_PresetVoiceMode As String, _
                    ByVal Original_PresetInterleaveDepth As String, _
                    ByVal Original_PresetFWDerrorCorrection As String, _
                    ByVal Original_PresetSquelch As String, _
                    ByVal Original_PresetCryptoMode As String, _
                    ByVal Original_PresetCryptoKey As String, _
                    ByVal Original_PresetSatcomChannel As String, _
                    ByVal Original_PresetDataMode As String, _
                    ByVal Original_PresetFascinatorMode As String, _
                    ByVal Original_PresetAESMode As String, _
                    ByVal Original_PresetKG84Mode As String, _
                    ByVal Original_PresetANDVTframes As String, _
                    ByVal Original_PresetRXfade As String, _
                    ByVal Original_PresetANDVTautoswitch As String, _
                    ByVal Original_PresetKeySource As String, _
                    ByVal Original_PresetCodebook As String, _
                    ByVal Original_PresetDeviation As String, _
                    ByVal Original_PresetOptMod As String, _
                    ByVal Original_PresetTXpower As String, _
                    ByVal Original_PresetTXpowerDown As String, _
                    ByVal Original_PresetManualSquelchSetting As Global.System.Nullable(Of Integer), _
                    ByVal Original_PresetCTCSS As String, _
                    ByVal Original_PresetRxSquelch As String, _
                    ByVal Original_PresetCTCSSuserEntry As String, _
                    ByVal Original_PresetCTCSSrxUserEntry As String, _
                    ByVal Original_PresetCTCSSrx As String, _
                    ByVal Original_PresetChannelBusyPriority As String, _
                    ByVal Original_PresetCDCSStxCode As String, _
                    ByVal Original_PresetCDCSSrxCode As String, _
                    ByVal Original_PresetVinsonCompatibility As String, _
                    ByVal Original_PresetBeaconFreq As String, _
                    ByVal Original_PresetBeaconMod As String, _
                    ByVal Original_PresetBeaconTxDuration As String, _
                    ByVal Original_PresetBeaconOffDuration As String, _
                    ByVal Original_PresetBeaconTxPower As String, _
                    ByVal Original_PresetSpare As String, _
                    ByVal Original_PresetInScanList As String) As Integer
            If (Original_PresetNumber Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PresetNumber")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_PresetNumber, String)
            End If
            If (Original_PresetName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PresetName")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_PresetName, String)
            End If
            If (Original_PresetType Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_PresetType, String)
            End If
            If (Original_PresetTraffic Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_PresetTraffic, String)
            End If
            If (Original_PresetModulation Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_PresetModulation, String)
            End If
            If (Original_PresetDescription Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_PresetDescription, String)
            End If
            If (Original_PresetRXfreq Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_PresetRXfreq, String)
            End If
            If (Original_PresetTXfreq Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_PresetTXfreq, String)
            End If
            If (Original_PresetWaveform Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_PresetWaveform, String)
            End If
            If (Original_PresetChannel Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_PresetChannel, String)
            End If
            If (Original_PresetKey Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_PresetKey, String)
            End If
            If (Original_PresetOptionCode Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_PresetOptionCode, String)
            End If
            If (Original_PresetBandwidth Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_PresetBandwidth, String)
            End If
            If (Original_PresetBPSrate Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_PresetBPSrate, String)
            End If
            If (Original_PresetVoiceMode Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_PresetVoiceMode, String)
            End If
            If (Original_PresetInterleaveDepth Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_PresetInterleaveDepth, String)
            End If
            If (Original_PresetFWDerrorCorrection Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_PresetFWDerrorCorrection, String)
            End If
            If (Original_PresetSquelch Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_PresetSquelch, String)
            End If
            If (Original_PresetCryptoMode Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_PresetCryptoMode, String)
            End If
            If (Original_PresetCryptoKey Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_PresetCryptoKey, String)
            End If
            If (Original_PresetSatcomChannel Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_PresetSatcomChannel, String)
            End If
            If (Original_PresetDataMode Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_PresetDataMode, String)
            End If
            If (Original_PresetFascinatorMode Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_PresetFascinatorMode, String)
            End If
            If (Original_PresetAESMode Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_PresetAESMode, String)
            End If
            If (Original_PresetKG84Mode Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_PresetKG84Mode, String)
            End If
            If (Original_PresetANDVTframes Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_PresetANDVTframes, String)
            End If
            If (Original_PresetRXfade Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_PresetRXfade, String)
            End If
            If (Original_PresetANDVTautoswitch Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_PresetANDVTautoswitch, String)
            End If
            If (Original_PresetKeySource Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_PresetKeySource, String)
            End If
            If (Original_PresetCodebook Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_PresetCodebook, String)
            End If
            If (Original_PresetDeviation Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_PresetDeviation, String)
            End If
            If (Original_PresetOptMod Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_PresetOptMod, String)
            End If
            If (Original_PresetTXpower Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_PresetTXpower, String)
            End If
            If (Original_PresetTXpowerDown Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(Original_PresetTXpowerDown, String)
            End If
            If (Original_PresetManualSquelchSetting.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(Original_PresetManualSquelchSetting.Value, Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_PresetCTCSS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(Original_PresetCTCSS, String)
            End If
            If (Original_PresetRxSquelch Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(Original_PresetRxSquelch, String)
            End If
            If (Original_PresetCTCSSuserEntry Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(Original_PresetCTCSSuserEntry, String)
            End If
            If (Original_PresetCTCSSrxUserEntry Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(Original_PresetCTCSSrxUserEntry, String)
            End If
            If (Original_PresetCTCSSrx Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(Original_PresetCTCSSrx, String)
            End If
            If (Original_PresetChannelBusyPriority Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(Original_PresetChannelBusyPriority, String)
            End If
            If (Original_PresetCDCSStxCode Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(Original_PresetCDCSStxCode, String)
            End If
            If (Original_PresetCDCSSrxCode Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(Original_PresetCDCSSrxCode, String)
            End If
            If (Original_PresetVinsonCompatibility Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(Original_PresetVinsonCompatibility, String)
            End If
            If (Original_PresetBeaconFreq Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(Original_PresetBeaconFreq, String)
            End If
            If (Original_PresetBeaconMod Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(Original_PresetBeaconMod, String)
            End If
            If (Original_PresetBeaconTxDuration Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(Original_PresetBeaconTxDuration, String)
            End If
            If (Original_PresetBeaconOffDuration Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(Original_PresetBeaconOffDuration, String)
            End If
            If (Original_PresetBeaconTxPower Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(Original_PresetBeaconTxPower, String)
            End If
            If (Original_PresetSpare Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(Original_PresetSpare, String)
            End If
            If (Original_PresetInScanList Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(Original_PresetInScanList, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert( _
                    ByVal PresetNumber As String, _
                    ByVal PresetName As String, _
                    ByVal PresetType As String, _
                    ByVal PresetTraffic As String, _
                    ByVal PresetModulation As String, _
                    ByVal PresetDescription As String, _
                    ByVal PresetRXfreq As String, _
                    ByVal PresetTXfreq As String, _
                    ByVal PresetWaveform As String, _
                    ByVal PresetChannel As String, _
                    ByVal PresetKey As String, _
                    ByVal PresetOptionCode As String, _
                    ByVal PresetBandwidth As String, _
                    ByVal PresetBPSrate As String, _
                    ByVal PresetVoiceMode As String, _
                    ByVal PresetInterleaveDepth As String, _
                    ByVal PresetFWDerrorCorrection As String, _
                    ByVal PresetSquelch As String, _
                    ByVal PresetCryptoMode As String, _
                    ByVal PresetCryptoKey As String, _
                    ByVal PresetSatcomChannel As String, _
                    ByVal PresetDataMode As String, _
                    ByVal PresetFascinatorMode As String, _
                    ByVal PresetAESMode As String, _
                    ByVal PresetKG84Mode As String, _
                    ByVal PresetANDVTframes As String, _
                    ByVal PresetRXfade As String, _
                    ByVal PresetANDVTautoswitch As String, _
                    ByVal PresetKeySource As String, _
                    ByVal PresetCodebook As String, _
                    ByVal PresetDeviation As String, _
                    ByVal PresetOptMod As String, _
                    ByVal PresetTXpower As String, _
                    ByVal PresetTXpowerDown As String, _
                    ByVal PresetManualSquelchSetting As Global.System.Nullable(Of Integer), _
                    ByVal PresetCTCSS As String, _
                    ByVal PresetRxSquelch As String, _
                    ByVal PresetCTCSSuserEntry As String, _
                    ByVal PresetCTCSSrxUserEntry As String, _
                    ByVal PresetCTCSSrx As String, _
                    ByVal PresetChannelBusyPriority As String, _
                    ByVal PresetCDCSStxCode As String, _
                    ByVal PresetCDCSSrxCode As String, _
                    ByVal PresetVinsonCompatibility As String, _
                    ByVal PresetBeaconFreq As String, _
                    ByVal PresetBeaconMod As String, _
                    ByVal PresetBeaconTxDuration As String, _
                    ByVal PresetBeaconOffDuration As String, _
                    ByVal PresetBeaconTxPower As String, _
                    ByVal PresetSpare As String, _
                    ByVal PresetInScanList As String) As Integer
            If (PresetNumber Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PresetNumber")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(PresetNumber, String)
            End If
            If (PresetName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PresetName")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PresetName, String)
            End If
            If (PresetType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PresetType, String)
            End If
            If (PresetTraffic Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PresetTraffic, String)
            End If
            If (PresetModulation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(PresetModulation, String)
            End If
            If (PresetDescription Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PresetDescription, String)
            End If
            If (PresetRXfreq Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PresetRXfreq, String)
            End If
            If (PresetTXfreq Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(PresetTXfreq, String)
            End If
            If (PresetWaveform Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(PresetWaveform, String)
            End If
            If (PresetChannel Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(PresetChannel, String)
            End If
            If (PresetKey Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(PresetKey, String)
            End If
            If (PresetOptionCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(PresetOptionCode, String)
            End If
            If (PresetBandwidth Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(PresetBandwidth, String)
            End If
            If (PresetBPSrate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(PresetBPSrate, String)
            End If
            If (PresetVoiceMode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(PresetVoiceMode, String)
            End If
            If (PresetInterleaveDepth Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(PresetInterleaveDepth, String)
            End If
            If (PresetFWDerrorCorrection Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(PresetFWDerrorCorrection, String)
            End If
            If (PresetSquelch Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(PresetSquelch, String)
            End If
            If (PresetCryptoMode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(PresetCryptoMode, String)
            End If
            If (PresetCryptoKey Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(PresetCryptoKey, String)
            End If
            If (PresetSatcomChannel Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(PresetSatcomChannel, String)
            End If
            If (PresetDataMode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(PresetDataMode, String)
            End If
            If (PresetFascinatorMode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(PresetFascinatorMode, String)
            End If
            If (PresetAESMode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(PresetAESMode, String)
            End If
            If (PresetKG84Mode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(PresetKG84Mode, String)
            End If
            If (PresetANDVTframes Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(PresetANDVTframes, String)
            End If
            If (PresetRXfade Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(PresetRXfade, String)
            End If
            If (PresetANDVTautoswitch Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(PresetANDVTautoswitch, String)
            End If
            If (PresetKeySource Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(PresetKeySource, String)
            End If
            If (PresetCodebook Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(PresetCodebook, String)
            End If
            If (PresetDeviation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(PresetDeviation, String)
            End If
            If (PresetOptMod Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(PresetOptMod, String)
            End If
            If (PresetTXpower Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(PresetTXpower, String)
            End If
            If (PresetTXpowerDown Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(PresetTXpowerDown, String)
            End If
            If (PresetManualSquelchSetting.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(PresetManualSquelchSetting.Value, Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (PresetCTCSS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(PresetCTCSS, String)
            End If
            If (PresetRxSquelch Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(PresetRxSquelch, String)
            End If
            If (PresetCTCSSuserEntry Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(PresetCTCSSuserEntry, String)
            End If
            If (PresetCTCSSrxUserEntry Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(PresetCTCSSrxUserEntry, String)
            End If
            If (PresetCTCSSrx Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(PresetCTCSSrx, String)
            End If
            If (PresetChannelBusyPriority Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(PresetChannelBusyPriority, String)
            End If
            If (PresetCDCSStxCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(PresetCDCSStxCode, String)
            End If
            If (PresetCDCSSrxCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(PresetCDCSSrxCode, String)
            End If
            If (PresetVinsonCompatibility Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(PresetVinsonCompatibility, String)
            End If
            If (PresetBeaconFreq Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(PresetBeaconFreq, String)
            End If
            If (PresetBeaconMod Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(PresetBeaconMod, String)
            End If
            If (PresetBeaconTxDuration Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(PresetBeaconTxDuration, String)
            End If
            If (PresetBeaconOffDuration Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(PresetBeaconOffDuration, String)
            End If
            If (PresetBeaconTxPower Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(PresetBeaconTxPower, String)
            End If
            If (PresetSpare Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(PresetSpare, String)
            End If
            If (PresetInScanList Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(PresetInScanList, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update( _
                    ByVal PresetNumber As String, _
                    ByVal PresetName As String, _
                    ByVal PresetType As String, _
                    ByVal PresetTraffic As String, _
                    ByVal PresetModulation As String, _
                    ByVal PresetDescription As String, _
                    ByVal PresetRXfreq As String, _
                    ByVal PresetTXfreq As String, _
                    ByVal PresetWaveform As String, _
                    ByVal PresetChannel As String, _
                    ByVal PresetKey As String, _
                    ByVal PresetOptionCode As String, _
                    ByVal PresetBandwidth As String, _
                    ByVal PresetBPSrate As String, _
                    ByVal PresetVoiceMode As String, _
                    ByVal PresetInterleaveDepth As String, _
                    ByVal PresetFWDerrorCorrection As String, _
                    ByVal PresetSquelch As String, _
                    ByVal PresetCryptoMode As String, _
                    ByVal PresetCryptoKey As String, _
                    ByVal PresetSatcomChannel As String, _
                    ByVal PresetDataMode As String, _
                    ByVal PresetFascinatorMode As String, _
                    ByVal PresetAESMode As String, _
                    ByVal PresetKG84Mode As String, _
                    ByVal PresetANDVTframes As String, _
                    ByVal PresetRXfade As String, _
                    ByVal PresetANDVTautoswitch As String, _
                    ByVal PresetKeySource As String, _
                    ByVal PresetCodebook As String, _
                    ByVal PresetDeviation As String, _
                    ByVal PresetOptMod As String, _
                    ByVal PresetTXpower As String, _
                    ByVal PresetTXpowerDown As String, _
                    ByVal PresetManualSquelchSetting As Global.System.Nullable(Of Integer), _
                    ByVal PresetCTCSS As String, _
                    ByVal PresetRxSquelch As String, _
                    ByVal PresetCTCSSuserEntry As String, _
                    ByVal PresetCTCSSrxUserEntry As String, _
                    ByVal PresetCTCSSrx As String, _
                    ByVal PresetChannelBusyPriority As String, _
                    ByVal PresetCDCSStxCode As String, _
                    ByVal PresetCDCSSrxCode As String, _
                    ByVal PresetVinsonCompatibility As String, _
                    ByVal PresetBeaconFreq As String, _
                    ByVal PresetBeaconMod As String, _
                    ByVal PresetBeaconTxDuration As String, _
                    ByVal PresetBeaconOffDuration As String, _
                    ByVal PresetBeaconTxPower As String, _
                    ByVal PresetSpare As String, _
                    ByVal PresetInScanList As String, _
                    ByVal Original_PresetNumber As String, _
                    ByVal Original_PresetName As String, _
                    ByVal Original_PresetType As String, _
                    ByVal Original_PresetTraffic As String, _
                    ByVal Original_PresetModulation As String, _
                    ByVal Original_PresetDescription As String, _
                    ByVal Original_PresetRXfreq As String, _
                    ByVal Original_PresetTXfreq As String, _
                    ByVal Original_PresetWaveform As String, _
                    ByVal Original_PresetChannel As String, _
                    ByVal Original_PresetKey As String, _
                    ByVal Original_PresetOptionCode As String, _
                    ByVal Original_PresetBandwidth As String, _
                    ByVal Original_PresetBPSrate As String, _
                    ByVal Original_PresetVoiceMode As String, _
                    ByVal Original_PresetInterleaveDepth As String, _
                    ByVal Original_PresetFWDerrorCorrection As String, _
                    ByVal Original_PresetSquelch As String, _
                    ByVal Original_PresetCryptoMode As String, _
                    ByVal Original_PresetCryptoKey As String, _
                    ByVal Original_PresetSatcomChannel As String, _
                    ByVal Original_PresetDataMode As String, _
                    ByVal Original_PresetFascinatorMode As String, _
                    ByVal Original_PresetAESMode As String, _
                    ByVal Original_PresetKG84Mode As String, _
                    ByVal Original_PresetANDVTframes As String, _
                    ByVal Original_PresetRXfade As String, _
                    ByVal Original_PresetANDVTautoswitch As String, _
                    ByVal Original_PresetKeySource As String, _
                    ByVal Original_PresetCodebook As String, _
                    ByVal Original_PresetDeviation As String, _
                    ByVal Original_PresetOptMod As String, _
                    ByVal Original_PresetTXpower As String, _
                    ByVal Original_PresetTXpowerDown As String, _
                    ByVal Original_PresetManualSquelchSetting As Global.System.Nullable(Of Integer), _
                    ByVal Original_PresetCTCSS As String, _
                    ByVal Original_PresetRxSquelch As String, _
                    ByVal Original_PresetCTCSSuserEntry As String, _
                    ByVal Original_PresetCTCSSrxUserEntry As String, _
                    ByVal Original_PresetCTCSSrx As String, _
                    ByVal Original_PresetChannelBusyPriority As String, _
                    ByVal Original_PresetCDCSStxCode As String, _
                    ByVal Original_PresetCDCSSrxCode As String, _
                    ByVal Original_PresetVinsonCompatibility As String, _
                    ByVal Original_PresetBeaconFreq As String, _
                    ByVal Original_PresetBeaconMod As String, _
                    ByVal Original_PresetBeaconTxDuration As String, _
                    ByVal Original_PresetBeaconOffDuration As String, _
                    ByVal Original_PresetBeaconTxPower As String, _
                    ByVal Original_PresetSpare As String, _
                    ByVal Original_PresetInScanList As String) As Integer
            If (PresetNumber Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PresetNumber")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(PresetNumber, String)
            End If
            If (PresetName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PresetName")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(PresetName, String)
            End If
            If (PresetType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PresetType, String)
            End If
            If (PresetTraffic Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PresetTraffic, String)
            End If
            If (PresetModulation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(PresetModulation, String)
            End If
            If (PresetDescription Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PresetDescription, String)
            End If
            If (PresetRXfreq Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(PresetRXfreq, String)
            End If
            If (PresetTXfreq Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(PresetTXfreq, String)
            End If
            If (PresetWaveform Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(PresetWaveform, String)
            End If
            If (PresetChannel Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(PresetChannel, String)
            End If
            If (PresetKey Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(PresetKey, String)
            End If
            If (PresetOptionCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(PresetOptionCode, String)
            End If
            If (PresetBandwidth Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(PresetBandwidth, String)
            End If
            If (PresetBPSrate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(PresetBPSrate, String)
            End If
            If (PresetVoiceMode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(PresetVoiceMode, String)
            End If
            If (PresetInterleaveDepth Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(PresetInterleaveDepth, String)
            End If
            If (PresetFWDerrorCorrection Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(PresetFWDerrorCorrection, String)
            End If
            If (PresetSquelch Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(PresetSquelch, String)
            End If
            If (PresetCryptoMode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(PresetCryptoMode, String)
            End If
            If (PresetCryptoKey Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(PresetCryptoKey, String)
            End If
            If (PresetSatcomChannel Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(PresetSatcomChannel, String)
            End If
            If (PresetDataMode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(PresetDataMode, String)
            End If
            If (PresetFascinatorMode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(PresetFascinatorMode, String)
            End If
            If (PresetAESMode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(PresetAESMode, String)
            End If
            If (PresetKG84Mode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(PresetKG84Mode, String)
            End If
            If (PresetANDVTframes Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(PresetANDVTframes, String)
            End If
            If (PresetRXfade Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(PresetRXfade, String)
            End If
            If (PresetANDVTautoswitch Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(PresetANDVTautoswitch, String)
            End If
            If (PresetKeySource Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(PresetKeySource, String)
            End If
            If (PresetCodebook Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(PresetCodebook, String)
            End If
            If (PresetDeviation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(PresetDeviation, String)
            End If
            If (PresetOptMod Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(PresetOptMod, String)
            End If
            If (PresetTXpower Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(PresetTXpower, String)
            End If
            If (PresetTXpowerDown Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(PresetTXpowerDown, String)
            End If
            If (PresetManualSquelchSetting.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(PresetManualSquelchSetting.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (PresetCTCSS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(PresetCTCSS, String)
            End If
            If (PresetRxSquelch Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(PresetRxSquelch, String)
            End If
            If (PresetCTCSSuserEntry Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(PresetCTCSSuserEntry, String)
            End If
            If (PresetCTCSSrxUserEntry Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(PresetCTCSSrxUserEntry, String)
            End If
            If (PresetCTCSSrx Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(PresetCTCSSrx, String)
            End If
            If (PresetChannelBusyPriority Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(PresetChannelBusyPriority, String)
            End If
            If (PresetCDCSStxCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(PresetCDCSStxCode, String)
            End If
            If (PresetCDCSSrxCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(PresetCDCSSrxCode, String)
            End If
            If (PresetVinsonCompatibility Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(PresetVinsonCompatibility, String)
            End If
            If (PresetBeaconFreq Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(PresetBeaconFreq, String)
            End If
            If (PresetBeaconMod Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(PresetBeaconMod, String)
            End If
            If (PresetBeaconTxDuration Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(PresetBeaconTxDuration, String)
            End If
            If (PresetBeaconOffDuration Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(PresetBeaconOffDuration, String)
            End If
            If (PresetBeaconTxPower Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(PresetBeaconTxPower, String)
            End If
            If (PresetSpare Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(PresetSpare, String)
            End If
            If (PresetInScanList Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(PresetInScanList, String)
            End If
            If (Original_PresetNumber Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PresetNumber")
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_PresetNumber, String)
            End If
            If (Original_PresetName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PresetName")
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_PresetName, String)
            End If
            If (Original_PresetType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_PresetType, String)
            End If
            If (Original_PresetTraffic Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_PresetTraffic, String)
            End If
            If (Original_PresetModulation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_PresetModulation, String)
            End If
            If (Original_PresetDescription Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_PresetDescription, String)
            End If
            If (Original_PresetRXfreq Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_PresetRXfreq, String)
            End If
            If (Original_PresetTXfreq Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_PresetTXfreq, String)
            End If
            If (Original_PresetWaveform Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_PresetWaveform, String)
            End If
            If (Original_PresetChannel Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_PresetChannel, String)
            End If
            If (Original_PresetKey Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_PresetKey, String)
            End If
            If (Original_PresetOptionCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_PresetOptionCode, String)
            End If
            If (Original_PresetBandwidth Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_PresetBandwidth, String)
            End If
            If (Original_PresetBPSrate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_PresetBPSrate, String)
            End If
            If (Original_PresetVoiceMode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_PresetVoiceMode, String)
            End If
            If (Original_PresetInterleaveDepth Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_PresetInterleaveDepth, String)
            End If
            If (Original_PresetFWDerrorCorrection Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_PresetFWDerrorCorrection, String)
            End If
            If (Original_PresetSquelch Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_PresetSquelch, String)
            End If
            If (Original_PresetCryptoMode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_PresetCryptoMode, String)
            End If
            If (Original_PresetCryptoKey Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_PresetCryptoKey, String)
            End If
            If (Original_PresetSatcomChannel Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_PresetSatcomChannel, String)
            End If
            If (Original_PresetDataMode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_PresetDataMode, String)
            End If
            If (Original_PresetFascinatorMode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_PresetFascinatorMode, String)
            End If
            If (Original_PresetAESMode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_PresetAESMode, String)
            End If
            If (Original_PresetKG84Mode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_PresetKG84Mode, String)
            End If
            If (Original_PresetANDVTframes Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_PresetANDVTframes, String)
            End If
            If (Original_PresetRXfade Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_PresetRXfade, String)
            End If
            If (Original_PresetANDVTautoswitch Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_PresetANDVTautoswitch, String)
            End If
            If (Original_PresetKeySource Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Original_PresetKeySource, String)
            End If
            If (Original_PresetCodebook Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(Original_PresetCodebook, String)
            End If
            If (Original_PresetDeviation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(Original_PresetDeviation, String)
            End If
            If (Original_PresetOptMod Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(Original_PresetOptMod, String)
            End If
            If (Original_PresetTXpower Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(Original_PresetTXpower, String)
            End If
            If (Original_PresetTXpowerDown Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(Original_PresetTXpowerDown, String)
            End If
            If (Original_PresetManualSquelchSetting.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(Original_PresetManualSquelchSetting.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = Global.System.DBNull.Value
            End If
            If (Original_PresetCTCSS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(Original_PresetCTCSS, String)
            End If
            If (Original_PresetRxSquelch Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(Original_PresetRxSquelch, String)
            End If
            If (Original_PresetCTCSSuserEntry Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(Original_PresetCTCSSuserEntry, String)
            End If
            If (Original_PresetCTCSSrxUserEntry Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(Original_PresetCTCSSrxUserEntry, String)
            End If
            If (Original_PresetCTCSSrx Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(Original_PresetCTCSSrx, String)
            End If
            If (Original_PresetChannelBusyPriority Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(Original_PresetChannelBusyPriority, String)
            End If
            If (Original_PresetCDCSStxCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(Original_PresetCDCSStxCode, String)
            End If
            If (Original_PresetCDCSSrxCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(Original_PresetCDCSSrxCode, String)
            End If
            If (Original_PresetVinsonCompatibility Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(Original_PresetVinsonCompatibility, String)
            End If
            If (Original_PresetBeaconFreq Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(Original_PresetBeaconFreq, String)
            End If
            If (Original_PresetBeaconMod Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(Original_PresetBeaconMod, String)
            End If
            If (Original_PresetBeaconTxDuration Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(Original_PresetBeaconTxDuration, String)
            End If
            If (Original_PresetBeaconOffDuration Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(Original_PresetBeaconOffDuration, String)
            End If
            If (Original_PresetBeaconTxPower Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(Original_PresetBeaconTxPower, String)
            End If
            If (Original_PresetSpare Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(Original_PresetSpare, String)
            End If
            If (Original_PresetInScanList Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(Original_PresetInScanList, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update( _
                    ByVal PresetName As String, _
                    ByVal PresetType As String, _
                    ByVal PresetTraffic As String, _
                    ByVal PresetModulation As String, _
                    ByVal PresetDescription As String, _
                    ByVal PresetRXfreq As String, _
                    ByVal PresetTXfreq As String, _
                    ByVal PresetWaveform As String, _
                    ByVal PresetChannel As String, _
                    ByVal PresetKey As String, _
                    ByVal PresetOptionCode As String, _
                    ByVal PresetBandwidth As String, _
                    ByVal PresetBPSrate As String, _
                    ByVal PresetVoiceMode As String, _
                    ByVal PresetInterleaveDepth As String, _
                    ByVal PresetFWDerrorCorrection As String, _
                    ByVal PresetSquelch As String, _
                    ByVal PresetCryptoMode As String, _
                    ByVal PresetCryptoKey As String, _
                    ByVal PresetSatcomChannel As String, _
                    ByVal PresetDataMode As String, _
                    ByVal PresetFascinatorMode As String, _
                    ByVal PresetAESMode As String, _
                    ByVal PresetKG84Mode As String, _
                    ByVal PresetANDVTframes As String, _
                    ByVal PresetRXfade As String, _
                    ByVal PresetANDVTautoswitch As String, _
                    ByVal PresetKeySource As String, _
                    ByVal PresetCodebook As String, _
                    ByVal PresetDeviation As String, _
                    ByVal PresetOptMod As String, _
                    ByVal PresetTXpower As String, _
                    ByVal PresetTXpowerDown As String, _
                    ByVal PresetManualSquelchSetting As Global.System.Nullable(Of Integer), _
                    ByVal PresetCTCSS As String, _
                    ByVal PresetRxSquelch As String, _
                    ByVal PresetCTCSSuserEntry As String, _
                    ByVal PresetCTCSSrxUserEntry As String, _
                    ByVal PresetCTCSSrx As String, _
                    ByVal PresetChannelBusyPriority As String, _
                    ByVal PresetCDCSStxCode As String, _
                    ByVal PresetCDCSSrxCode As String, _
                    ByVal PresetVinsonCompatibility As String, _
                    ByVal PresetBeaconFreq As String, _
                    ByVal PresetBeaconMod As String, _
                    ByVal PresetBeaconTxDuration As String, _
                    ByVal PresetBeaconOffDuration As String, _
                    ByVal PresetBeaconTxPower As String, _
                    ByVal PresetSpare As String, _
                    ByVal PresetInScanList As String, _
                    ByVal Original_PresetNumber As String, _
                    ByVal Original_PresetName As String, _
                    ByVal Original_PresetType As String, _
                    ByVal Original_PresetTraffic As String, _
                    ByVal Original_PresetModulation As String, _
                    ByVal Original_PresetDescription As String, _
                    ByVal Original_PresetRXfreq As String, _
                    ByVal Original_PresetTXfreq As String, _
                    ByVal Original_PresetWaveform As String, _
                    ByVal Original_PresetChannel As String, _
                    ByVal Original_PresetKey As String, _
                    ByVal Original_PresetOptionCode As String, _
                    ByVal Original_PresetBandwidth As String, _
                    ByVal Original_PresetBPSrate As String, _
                    ByVal Original_PresetVoiceMode As String, _
                    ByVal Original_PresetInterleaveDepth As String, _
                    ByVal Original_PresetFWDerrorCorrection As String, _
                    ByVal Original_PresetSquelch As String, _
                    ByVal Original_PresetCryptoMode As String, _
                    ByVal Original_PresetCryptoKey As String, _
                    ByVal Original_PresetSatcomChannel As String, _
                    ByVal Original_PresetDataMode As String, _
                    ByVal Original_PresetFascinatorMode As String, _
                    ByVal Original_PresetAESMode As String, _
                    ByVal Original_PresetKG84Mode As String, _
                    ByVal Original_PresetANDVTframes As String, _
                    ByVal Original_PresetRXfade As String, _
                    ByVal Original_PresetANDVTautoswitch As String, _
                    ByVal Original_PresetKeySource As String, _
                    ByVal Original_PresetCodebook As String, _
                    ByVal Original_PresetDeviation As String, _
                    ByVal Original_PresetOptMod As String, _
                    ByVal Original_PresetTXpower As String, _
                    ByVal Original_PresetTXpowerDown As String, _
                    ByVal Original_PresetManualSquelchSetting As Global.System.Nullable(Of Integer), _
                    ByVal Original_PresetCTCSS As String, _
                    ByVal Original_PresetRxSquelch As String, _
                    ByVal Original_PresetCTCSSuserEntry As String, _
                    ByVal Original_PresetCTCSSrxUserEntry As String, _
                    ByVal Original_PresetCTCSSrx As String, _
                    ByVal Original_PresetChannelBusyPriority As String, _
                    ByVal Original_PresetCDCSStxCode As String, _
                    ByVal Original_PresetCDCSSrxCode As String, _
                    ByVal Original_PresetVinsonCompatibility As String, _
                    ByVal Original_PresetBeaconFreq As String, _
                    ByVal Original_PresetBeaconMod As String, _
                    ByVal Original_PresetBeaconTxDuration As String, _
                    ByVal Original_PresetBeaconOffDuration As String, _
                    ByVal Original_PresetBeaconTxPower As String, _
                    ByVal Original_PresetSpare As String, _
                    ByVal Original_PresetInScanList As String) As Integer
            Return Me.Update(Original_PresetNumber, PresetName, PresetType, PresetTraffic, PresetModulation, PresetDescription, PresetRXfreq, PresetTXfreq, PresetWaveform, PresetChannel, PresetKey, PresetOptionCode, PresetBandwidth, PresetBPSrate, PresetVoiceMode, PresetInterleaveDepth, PresetFWDerrorCorrection, PresetSquelch, PresetCryptoMode, PresetCryptoKey, PresetSatcomChannel, PresetDataMode, PresetFascinatorMode, PresetAESMode, PresetKG84Mode, PresetANDVTframes, PresetRXfade, PresetANDVTautoswitch, PresetKeySource, PresetCodebook, PresetDeviation, PresetOptMod, PresetTXpower, PresetTXpowerDown, PresetManualSquelchSetting, PresetCTCSS, PresetRxSquelch, PresetCTCSSuserEntry, PresetCTCSSrxUserEntry, PresetCTCSSrx, PresetChannelBusyPriority, PresetCDCSStxCode, PresetCDCSSrxCode, PresetVinsonCompatibility, PresetBeaconFreq, PresetBeaconMod, PresetBeaconTxDuration, PresetBeaconOffDuration, PresetBeaconTxPower, PresetSpare, PresetInScanList, Original_PresetNumber, Original_PresetName, Original_PresetType, Original_PresetTraffic, Original_PresetModulation, Original_PresetDescription, Original_PresetRXfreq, Original_PresetTXfreq, Original_PresetWaveform, Original_PresetChannel, Original_PresetKey, Original_PresetOptionCode, Original_PresetBandwidth, Original_PresetBPSrate, Original_PresetVoiceMode, Original_PresetInterleaveDepth, Original_PresetFWDerrorCorrection, Original_PresetSquelch, Original_PresetCryptoMode, Original_PresetCryptoKey, Original_PresetSatcomChannel, Original_PresetDataMode, Original_PresetFascinatorMode, Original_PresetAESMode, Original_PresetKG84Mode, Original_PresetANDVTframes, Original_PresetRXfade, Original_PresetANDVTautoswitch, Original_PresetKeySource, Original_PresetCodebook, Original_PresetDeviation, Original_PresetOptMod, Original_PresetTXpower, Original_PresetTXpowerDown, Original_PresetManualSquelchSetting, Original_PresetCTCSS, Original_PresetRxSquelch, Original_PresetCTCSSuserEntry, Original_PresetCTCSSrxUserEntry, Original_PresetCTCSSrx, Original_PresetChannelBusyPriority, Original_PresetCDCSStxCode, Original_PresetCDCSSrxCode, Original_PresetVinsonCompatibility, Original_PresetBeaconFreq, Original_PresetBeaconMod, Original_PresetBeaconTxDuration, Original_PresetBeaconOffDuration, Original_PresetBeaconTxPower, Original_PresetSpare, Original_PresetInScanList)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function ScanListQuery() As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SATCOMpresetsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SATCOMpresets"
            tableMapping.ColumnMappings.Add("SatcomPresetNum", "SatcomPresetNum")
            tableMapping.ColumnMappings.Add("Uplink", "Uplink")
            tableMapping.ColumnMappings.Add("Downlink", "Downlink")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[SATCOMpresets] WHERE (([SatcomPresetNum] = @Original_SatcomPre"& _ 
                "setNum) AND ((@IsNull_Uplink = 1 AND [Uplink] IS NULL) OR ([Uplink] = @Original_"& _ 
                "Uplink)) AND ((@IsNull_Downlink = 1 AND [Downlink] IS NULL) OR ([Downlink] = @Or"& _ 
                "iginal_Downlink)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SatcomPresetNum", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SatcomPresetNum", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Uplink", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Uplink", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Uplink", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Uplink", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Downlink", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Downlink", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Downlink", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Downlink", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[SATCOMpresets] ([SatcomPresetNum], [Uplink], [Downlink]) VALUE"& _ 
                "S (@SatcomPresetNum, @Uplink, @Downlink);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SatcomPresetNum, Uplink, Downl"& _ 
                "ink FROM SATCOMpresets WHERE (SatcomPresetNum = @SatcomPresetNum)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SatcomPresetNum", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SatcomPresetNum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Uplink", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Uplink", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Downlink", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Downlink", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[SATCOMpresets] SET [SatcomPresetNum] = @SatcomPresetNum, [Uplink] ="& _ 
                " @Uplink, [Downlink] = @Downlink WHERE (([SatcomPresetNum] = @Original_SatcomPre"& _ 
                "setNum) AND ((@IsNull_Uplink = 1 AND [Uplink] IS NULL) OR ([Uplink] = @Original_"& _ 
                "Uplink)) AND ((@IsNull_Downlink = 1 AND [Downlink] IS NULL) OR ([Downlink] = @Or"& _ 
                "iginal_Downlink)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SatcomPresetNum, Uplink, Downlink FROM SATCOMpresets"& _ 
                " WHERE (SatcomPresetNum = @SatcomPresetNum)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SatcomPresetNum", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SatcomPresetNum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Uplink", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Uplink", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Downlink", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Downlink", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SatcomPresetNum", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SatcomPresetNum", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Uplink", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Uplink", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Uplink", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Uplink", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Downlink", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Downlink", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Downlink", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Downlink", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.WindowsApplication1.My.MySettings.Default.StoredPresetsConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SatcomPresetNum, Uplink, Downlink FROM dbo.SATCOMpresets"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As StoredPresetsDataSet.SATCOMpresetsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As StoredPresetsDataSet.SATCOMpresetsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As StoredPresetsDataSet.SATCOMpresetsDataTable = New StoredPresetsDataSet.SATCOMpresetsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As StoredPresetsDataSet.SATCOMpresetsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As StoredPresetsDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "SATCOMpresets")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_SatcomPresetNum As Integer, ByVal Original_Uplink As String, ByVal Original_Downlink As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SatcomPresetNum,Integer)
            If (Original_Uplink Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Uplink,String)
            End If
            If (Original_Downlink Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Downlink,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal SatcomPresetNum As Integer, ByVal Uplink As String, ByVal Downlink As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(SatcomPresetNum,Integer)
            If (Uplink Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Uplink,String)
            End If
            If (Downlink Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Downlink,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal SatcomPresetNum As Integer, ByVal Uplink As String, ByVal Downlink As String, ByVal Original_SatcomPresetNum As Integer, ByVal Original_Uplink As String, ByVal Original_Downlink As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SatcomPresetNum,Integer)
            If (Uplink Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Uplink,String)
            End If
            If (Downlink Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Downlink,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_SatcomPresetNum,Integer)
            If (Original_Uplink Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_Uplink,String)
            End If
            If (Original_Downlink Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_Downlink,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Uplink As String, ByVal Downlink As String, ByVal Original_SatcomPresetNum As Integer, ByVal Original_Uplink As String, ByVal Original_Downlink As String) As Integer
            Return Me.Update(Original_SatcomPresetNum, Uplink, Downlink, Original_SatcomPresetNum, Original_Uplink, Original_Downlink)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OptionCodes25kHzTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OptionCodes25kHz"
            tableMapping.ColumnMappings.Add("OptionCode", "OptionCode")
            tableMapping.ColumnMappings.Add("IOdataRate", "IOdataRate")
            tableMapping.ColumnMappings.Add("ModulationType", "ModulationType")
            tableMapping.ColumnMappings.Add("KG84Compliant", "KG84Compliant")
            tableMapping.ColumnMappings.Add("VinsonCompliant", "VinsonCompliant")
            tableMapping.ColumnMappings.Add("FascinatorCompliant", "FascinatorCompliant")
            tableMapping.ColumnMappings.Add("ForwardErrorCorrection", "ForwardErrorCorrection")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[OptionCodes25kHz] WHERE (([OptionCode] = @Original_OptionCode)"& _ 
                " AND ((@IsNull_IOdataRate = 1 AND [IOdataRate] IS NULL) OR ([IOdataRate] = @Orig"& _ 
                "inal_IOdataRate)) AND ((@IsNull_ModulationType = 1 AND [ModulationType] IS NULL)"& _ 
                " OR ([ModulationType] = @Original_ModulationType)) AND ((@IsNull_KG84Compliant ="& _ 
                " 1 AND [KG84Compliant] IS NULL) OR ([KG84Compliant] = @Original_KG84Compliant)) "& _ 
                "AND ((@IsNull_VinsonCompliant = 1 AND [VinsonCompliant] IS NULL) OR ([VinsonComp"& _ 
                "liant] = @Original_VinsonCompliant)) AND ((@IsNull_FascinatorCompliant = 1 AND ["& _ 
                "FascinatorCompliant] IS NULL) OR ([FascinatorCompliant] = @Original_FascinatorCo"& _ 
                "mpliant)) AND ((@IsNull_ForwardErrorCorrection = 1 AND [ForwardErrorCorrection] "& _ 
                "IS NULL) OR ([ForwardErrorCorrection] = @Original_ForwardErrorCorrection)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OptionCode", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OptionCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IOdataRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOdataRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IOdataRate", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOdataRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ModulationType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModulationType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ModulationType", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModulationType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KG84Compliant", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG84Compliant", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KG84Compliant", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG84Compliant", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VinsonCompliant", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VinsonCompliant", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VinsonCompliant", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VinsonCompliant", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FascinatorCompliant", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FascinatorCompliant", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FascinatorCompliant", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FascinatorCompliant", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ForwardErrorCorrection", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForwardErrorCorrection", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ForwardErrorCorrection", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForwardErrorCorrection", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[OptionCodes25kHz] ([OptionCode], [IOdataRate], [ModulationType"& _ 
                "], [KG84Compliant], [VinsonCompliant], [FascinatorCompliant], [ForwardErrorCorre"& _ 
                "ction]) VALUES (@OptionCode, @IOdataRate, @ModulationType, @KG84Compliant, @Vins"& _ 
                "onCompliant, @FascinatorCompliant, @ForwardErrorCorrection);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT OptionCode,"& _ 
                " IOdataRate, ModulationType, KG84Compliant, VinsonCompliant, FascinatorCompliant"& _ 
                ", ForwardErrorCorrection FROM OptionCodes25kHz WHERE (OptionCode = @OptionCode)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OptionCode", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OptionCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOdataRate", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOdataRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModulationType", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModulationType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KG84Compliant", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG84Compliant", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VinsonCompliant", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VinsonCompliant", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FascinatorCompliant", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FascinatorCompliant", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ForwardErrorCorrection", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForwardErrorCorrection", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[OptionCodes25kHz] SET [OptionCode] = @OptionCode, [IOdataRate] = @I"& _ 
                "OdataRate, [ModulationType] = @ModulationType, [KG84Compliant] = @KG84Compliant,"& _ 
                " [VinsonCompliant] = @VinsonCompliant, [FascinatorCompliant] = @FascinatorCompli"& _ 
                "ant, [ForwardErrorCorrection] = @ForwardErrorCorrection WHERE (([OptionCode] = @"& _ 
                "Original_OptionCode) AND ((@IsNull_IOdataRate = 1 AND [IOdataRate] IS NULL) OR ("& _ 
                "[IOdataRate] = @Original_IOdataRate)) AND ((@IsNull_ModulationType = 1 AND [Modu"& _ 
                "lationType] IS NULL) OR ([ModulationType] = @Original_ModulationType)) AND ((@Is"& _ 
                "Null_KG84Compliant = 1 AND [KG84Compliant] IS NULL) OR ([KG84Compliant] = @Origi"& _ 
                "nal_KG84Compliant)) AND ((@IsNull_VinsonCompliant = 1 AND [VinsonCompliant] IS N"& _ 
                "ULL) OR ([VinsonCompliant] = @Original_VinsonCompliant)) AND ((@IsNull_Fascinato"& _ 
                "rCompliant = 1 AND [FascinatorCompliant] IS NULL) OR ([FascinatorCompliant] = @O"& _ 
                "riginal_FascinatorCompliant)) AND ((@IsNull_ForwardErrorCorrection = 1 AND [Forw"& _ 
                "ardErrorCorrection] IS NULL) OR ([ForwardErrorCorrection] = @Original_ForwardErr"& _ 
                "orCorrection)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT OptionCode, IOdataRate, ModulationType, KG84Compliant, "& _ 
                "VinsonCompliant, FascinatorCompliant, ForwardErrorCorrection FROM OptionCodes25k"& _ 
                "Hz WHERE (OptionCode = @OptionCode)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OptionCode", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OptionCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOdataRate", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOdataRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModulationType", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModulationType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KG84Compliant", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG84Compliant", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VinsonCompliant", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VinsonCompliant", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FascinatorCompliant", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FascinatorCompliant", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ForwardErrorCorrection", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForwardErrorCorrection", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OptionCode", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OptionCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IOdataRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOdataRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IOdataRate", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOdataRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ModulationType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModulationType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ModulationType", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModulationType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KG84Compliant", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG84Compliant", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KG84Compliant", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG84Compliant", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VinsonCompliant", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VinsonCompliant", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VinsonCompliant", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VinsonCompliant", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FascinatorCompliant", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FascinatorCompliant", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FascinatorCompliant", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FascinatorCompliant", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ForwardErrorCorrection", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForwardErrorCorrection", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ForwardErrorCorrection", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForwardErrorCorrection", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.WindowsApplication1.My.MySettings.Default.StoredPresetsConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT OptionCode, IOdataRate, ModulationType, KG84Compliant, VinsonCompliant, Fa"& _ 
                "scinatorCompliant, ForwardErrorCorrection FROM dbo.OptionCodes25kHz"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As StoredPresetsDataSet.OptionCodes25kHzDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As StoredPresetsDataSet.OptionCodes25kHzDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As StoredPresetsDataSet.OptionCodes25kHzDataTable = New StoredPresetsDataSet.OptionCodes25kHzDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As StoredPresetsDataSet.OptionCodes25kHzDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As StoredPresetsDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "OptionCodes25kHz")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_OptionCode As String, ByVal Original_IOdataRate As String, ByVal Original_ModulationType As String, ByVal Original_KG84Compliant As String, ByVal Original_VinsonCompliant As String, ByVal Original_FascinatorCompliant As String, ByVal Original_ForwardErrorCorrection As String) As Integer
            If (Original_OptionCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_OptionCode")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_OptionCode,String)
            End If
            If (Original_IOdataRate Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_IOdataRate,String)
            End If
            If (Original_ModulationType Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_ModulationType,String)
            End If
            If (Original_KG84Compliant Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_KG84Compliant,String)
            End If
            If (Original_VinsonCompliant Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_VinsonCompliant,String)
            End If
            If (Original_FascinatorCompliant Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_FascinatorCompliant,String)
            End If
            If (Original_ForwardErrorCorrection Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_ForwardErrorCorrection,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal OptionCode As String, ByVal IOdataRate As String, ByVal ModulationType As String, ByVal KG84Compliant As String, ByVal VinsonCompliant As String, ByVal FascinatorCompliant As String, ByVal ForwardErrorCorrection As String) As Integer
            If (OptionCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OptionCode")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(OptionCode,String)
            End If
            If (IOdataRate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(IOdataRate,String)
            End If
            If (ModulationType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ModulationType,String)
            End If
            If (KG84Compliant Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(KG84Compliant,String)
            End If
            If (VinsonCompliant Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(VinsonCompliant,String)
            End If
            If (FascinatorCompliant Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(FascinatorCompliant,String)
            End If
            If (ForwardErrorCorrection Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(ForwardErrorCorrection,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal OptionCode As String, ByVal IOdataRate As String, ByVal ModulationType As String, ByVal KG84Compliant As String, ByVal VinsonCompliant As String, ByVal FascinatorCompliant As String, ByVal ForwardErrorCorrection As String, ByVal Original_OptionCode As String, ByVal Original_IOdataRate As String, ByVal Original_ModulationType As String, ByVal Original_KG84Compliant As String, ByVal Original_VinsonCompliant As String, ByVal Original_FascinatorCompliant As String, ByVal Original_ForwardErrorCorrection As String) As Integer
            If (OptionCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OptionCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(OptionCode,String)
            End If
            If (IOdataRate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(IOdataRate,String)
            End If
            If (ModulationType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ModulationType,String)
            End If
            If (KG84Compliant Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(KG84Compliant,String)
            End If
            If (VinsonCompliant Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(VinsonCompliant,String)
            End If
            If (FascinatorCompliant Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(FascinatorCompliant,String)
            End If
            If (ForwardErrorCorrection Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ForwardErrorCorrection,String)
            End If
            If (Original_OptionCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_OptionCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_OptionCode,String)
            End If
            If (Original_IOdataRate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_IOdataRate,String)
            End If
            If (Original_ModulationType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_ModulationType,String)
            End If
            If (Original_KG84Compliant Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_KG84Compliant,String)
            End If
            If (Original_VinsonCompliant Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_VinsonCompliant,String)
            End If
            If (Original_FascinatorCompliant Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_FascinatorCompliant,String)
            End If
            If (Original_ForwardErrorCorrection Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_ForwardErrorCorrection,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal IOdataRate As String, ByVal ModulationType As String, ByVal KG84Compliant As String, ByVal VinsonCompliant As String, ByVal FascinatorCompliant As String, ByVal ForwardErrorCorrection As String, ByVal Original_OptionCode As String, ByVal Original_IOdataRate As String, ByVal Original_ModulationType As String, ByVal Original_KG84Compliant As String, ByVal Original_VinsonCompliant As String, ByVal Original_FascinatorCompliant As String, ByVal Original_ForwardErrorCorrection As String) As Integer
            Return Me.Update(Original_OptionCode, IOdataRate, ModulationType, KG84Compliant, VinsonCompliant, FascinatorCompliant, ForwardErrorCorrection, Original_OptionCode, Original_IOdataRate, Original_ModulationType, Original_KG84Compliant, Original_VinsonCompliant, Original_FascinatorCompliant, Original_ForwardErrorCorrection)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OptionCodes5kHzTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OptionCodes5kHz"
            tableMapping.ColumnMappings.Add("OptionCode", "OptionCode")
            tableMapping.ColumnMappings.Add("IOdataRate", "IOdataRate")
            tableMapping.ColumnMappings.Add("ModulationType", "ModulationType")
            tableMapping.ColumnMappings.Add("KG84Compliant", "KG84Compliant")
            tableMapping.ColumnMappings.Add("ANDVTcompliant", "ANDVTcompliant")
            tableMapping.ColumnMappings.Add("ForwardErrorCorrection", "ForwardErrorCorrection")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[OptionCodes5kHz] WHERE (([OptionCode] = @Original_OptionCode) "& _ 
                "AND ((@IsNull_IOdataRate = 1 AND [IOdataRate] IS NULL) OR ([IOdataRate] = @Origi"& _ 
                "nal_IOdataRate)) AND ((@IsNull_ModulationType = 1 AND [ModulationType] IS NULL) "& _ 
                "OR ([ModulationType] = @Original_ModulationType)) AND ((@IsNull_KG84Compliant = "& _ 
                "1 AND [KG84Compliant] IS NULL) OR ([KG84Compliant] = @Original_KG84Compliant)) A"& _ 
                "ND ((@IsNull_ANDVTcompliant = 1 AND [ANDVTcompliant] IS NULL) OR ([ANDVTcomplian"& _ 
                "t] = @Original_ANDVTcompliant)) AND ((@IsNull_ForwardErrorCorrection = 1 AND [Fo"& _ 
                "rwardErrorCorrection] IS NULL) OR ([ForwardErrorCorrection] = @Original_ForwardE"& _ 
                "rrorCorrection)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OptionCode", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OptionCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IOdataRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOdataRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IOdataRate", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOdataRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ModulationType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModulationType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ModulationType", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModulationType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KG84Compliant", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG84Compliant", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KG84Compliant", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG84Compliant", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ANDVTcompliant", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANDVTcompliant", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ANDVTcompliant", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANDVTcompliant", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ForwardErrorCorrection", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForwardErrorCorrection", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ForwardErrorCorrection", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForwardErrorCorrection", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[OptionCodes5kHz] ([OptionCode], [IOdataRate], [ModulationType]"& _ 
                ", [KG84Compliant], [ANDVTcompliant], [ForwardErrorCorrection]) VALUES (@OptionCo"& _ 
                "de, @IOdataRate, @ModulationType, @KG84Compliant, @ANDVTcompliant, @ForwardError"& _ 
                "Correction);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT OptionCode, IOdataRate, ModulationType, KG84Compliant, ANDV"& _ 
                "Tcompliant, ForwardErrorCorrection FROM OptionCodes5kHz WHERE (OptionCode = @Opt"& _ 
                "ionCode)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OptionCode", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OptionCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOdataRate", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOdataRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModulationType", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModulationType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KG84Compliant", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG84Compliant", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANDVTcompliant", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANDVTcompliant", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ForwardErrorCorrection", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForwardErrorCorrection", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[OptionCodes5kHz] SET [OptionCode] = @OptionCode, [IOdataRate] = @IO"& _ 
                "dataRate, [ModulationType] = @ModulationType, [KG84Compliant] = @KG84Compliant, "& _ 
                "[ANDVTcompliant] = @ANDVTcompliant, [ForwardErrorCorrection] = @ForwardErrorCorr"& _ 
                "ection WHERE (([OptionCode] = @Original_OptionCode) AND ((@IsNull_IOdataRate = 1"& _ 
                " AND [IOdataRate] IS NULL) OR ([IOdataRate] = @Original_IOdataRate)) AND ((@IsNu"& _ 
                "ll_ModulationType = 1 AND [ModulationType] IS NULL) OR ([ModulationType] = @Orig"& _ 
                "inal_ModulationType)) AND ((@IsNull_KG84Compliant = 1 AND [KG84Compliant] IS NUL"& _ 
                "L) OR ([KG84Compliant] = @Original_KG84Compliant)) AND ((@IsNull_ANDVTcompliant "& _ 
                "= 1 AND [ANDVTcompliant] IS NULL) OR ([ANDVTcompliant] = @Original_ANDVTcomplian"& _ 
                "t)) AND ((@IsNull_ForwardErrorCorrection = 1 AND [ForwardErrorCorrection] IS NUL"& _ 
                "L) OR ([ForwardErrorCorrection] = @Original_ForwardErrorCorrection)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT O"& _ 
                "ptionCode, IOdataRate, ModulationType, KG84Compliant, ANDVTcompliant, ForwardErr"& _ 
                "orCorrection FROM OptionCodes5kHz WHERE (OptionCode = @OptionCode)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OptionCode", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OptionCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOdataRate", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOdataRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModulationType", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModulationType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KG84Compliant", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG84Compliant", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANDVTcompliant", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANDVTcompliant", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ForwardErrorCorrection", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForwardErrorCorrection", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OptionCode", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OptionCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IOdataRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOdataRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IOdataRate", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOdataRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ModulationType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModulationType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ModulationType", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModulationType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KG84Compliant", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG84Compliant", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KG84Compliant", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG84Compliant", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ANDVTcompliant", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANDVTcompliant", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ANDVTcompliant", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANDVTcompliant", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ForwardErrorCorrection", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForwardErrorCorrection", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ForwardErrorCorrection", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForwardErrorCorrection", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.WindowsApplication1.My.MySettings.Default.StoredPresetsConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT OptionCode, IOdataRate, ModulationType, KG84Compliant, ANDVTcompliant, For"& _ 
                "wardErrorCorrection FROM dbo.OptionCodes5kHz"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As StoredPresetsDataSet.OptionCodes5kHzDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As StoredPresetsDataSet.OptionCodes5kHzDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As StoredPresetsDataSet.OptionCodes5kHzDataTable = New StoredPresetsDataSet.OptionCodes5kHzDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As StoredPresetsDataSet.OptionCodes5kHzDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As StoredPresetsDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "OptionCodes5kHz")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_OptionCode As String, ByVal Original_IOdataRate As String, ByVal Original_ModulationType As String, ByVal Original_KG84Compliant As String, ByVal Original_ANDVTcompliant As String, ByVal Original_ForwardErrorCorrection As String) As Integer
            If (Original_OptionCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_OptionCode")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_OptionCode,String)
            End If
            If (Original_IOdataRate Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_IOdataRate,String)
            End If
            If (Original_ModulationType Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_ModulationType,String)
            End If
            If (Original_KG84Compliant Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_KG84Compliant,String)
            End If
            If (Original_ANDVTcompliant Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_ANDVTcompliant,String)
            End If
            If (Original_ForwardErrorCorrection Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_ForwardErrorCorrection,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal OptionCode As String, ByVal IOdataRate As String, ByVal ModulationType As String, ByVal KG84Compliant As String, ByVal ANDVTcompliant As String, ByVal ForwardErrorCorrection As String) As Integer
            If (OptionCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OptionCode")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(OptionCode,String)
            End If
            If (IOdataRate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(IOdataRate,String)
            End If
            If (ModulationType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ModulationType,String)
            End If
            If (KG84Compliant Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(KG84Compliant,String)
            End If
            If (ANDVTcompliant Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(ANDVTcompliant,String)
            End If
            If (ForwardErrorCorrection Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ForwardErrorCorrection,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal OptionCode As String, ByVal IOdataRate As String, ByVal ModulationType As String, ByVal KG84Compliant As String, ByVal ANDVTcompliant As String, ByVal ForwardErrorCorrection As String, ByVal Original_OptionCode As String, ByVal Original_IOdataRate As String, ByVal Original_ModulationType As String, ByVal Original_KG84Compliant As String, ByVal Original_ANDVTcompliant As String, ByVal Original_ForwardErrorCorrection As String) As Integer
            If (OptionCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OptionCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(OptionCode,String)
            End If
            If (IOdataRate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(IOdataRate,String)
            End If
            If (ModulationType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ModulationType,String)
            End If
            If (KG84Compliant Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(KG84Compliant,String)
            End If
            If (ANDVTcompliant Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ANDVTcompliant,String)
            End If
            If (ForwardErrorCorrection Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ForwardErrorCorrection,String)
            End If
            If (Original_OptionCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_OptionCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_OptionCode,String)
            End If
            If (Original_IOdataRate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_IOdataRate,String)
            End If
            If (Original_ModulationType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_ModulationType,String)
            End If
            If (Original_KG84Compliant Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_KG84Compliant,String)
            End If
            If (Original_ANDVTcompliant Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_ANDVTcompliant,String)
            End If
            If (Original_ForwardErrorCorrection Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_ForwardErrorCorrection,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal IOdataRate As String, ByVal ModulationType As String, ByVal KG84Compliant As String, ByVal ANDVTcompliant As String, ByVal ForwardErrorCorrection As String, ByVal Original_OptionCode As String, ByVal Original_IOdataRate As String, ByVal Original_ModulationType As String, ByVal Original_KG84Compliant As String, ByVal Original_ANDVTcompliant As String, ByVal Original_ForwardErrorCorrection As String) As Integer
            Return Me.Update(Original_OptionCode, IOdataRate, ModulationType, KG84Compliant, ANDVTcompliant, ForwardErrorCorrection, Original_OptionCode, Original_IOdataRate, Original_ModulationType, Original_KG84Compliant, Original_ANDVTcompliant, Original_ForwardErrorCorrection)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CTCSSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CTCSS"
            tableMapping.ColumnMappings.Add("FREQ", "FREQ")
            tableMapping.ColumnMappings.Add("EIA", "EIA")
            tableMapping.ColumnMappings.Add("HAM", "HAM")
            tableMapping.ColumnMappings.Add("index", "index")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[CTCSS] ([FREQ], [EIA], [HAM], [index]) VALUES (@FREQ, @EIA, @H"& _ 
                "AM, @index)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FREQ", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FREQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EIA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HAM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HAM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@index", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "index", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.WindowsApplication1.My.MySettings.Default.StoredPresetsConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FREQ, EIA, HAM, [index] FROM dbo.CTCSS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As StoredPresetsDataSet.CTCSSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As StoredPresetsDataSet.CTCSSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As StoredPresetsDataSet.CTCSSDataTable = New StoredPresetsDataSet.CTCSSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As StoredPresetsDataSet.CTCSSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As StoredPresetsDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "CTCSS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FREQ As String, ByVal EIA As String, ByVal HAM As String, ByVal index As Global.System.Nullable(Of Integer)) As Integer
            If (FREQ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FREQ")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(FREQ,String)
            End If
            If (EIA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EIA")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(EIA,String)
            End If
            If (HAM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HAM")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(HAM,String)
            End If
            If (index.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(index.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class GlobalSavedItemsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "GlobalSavedItems"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("GlobalEnableScan", "GlobalEnableScan")
            tableMapping.ColumnMappings.Add("GlobalPriorityTx", "GlobalPriorityTx")
            tableMapping.ColumnMappings.Add("GlobalPriorityRxEnable", "GlobalPriorityRxEnable")
            tableMapping.ColumnMappings.Add("GlobalPriorityRx", "GlobalPriorityRx")
            tableMapping.ColumnMappings.Add("GlobalHangTime", "GlobalHangTime")
            tableMapping.ColumnMappings.Add("GlobalEnableHoldTime", "GlobalEnableHoldTime")
            tableMapping.ColumnMappings.Add("GlobalHoldTimeDuration", "GlobalHoldTimeDuration")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[GlobalSavedItems] WHERE (([Id] = @Original_Id) AND ((@IsNull_G"& _ 
                "lobalEnableScan = 1 AND [GlobalEnableScan] IS NULL) OR ([GlobalEnableScan] = @Or"& _ 
                "iginal_GlobalEnableScan)) AND ((@IsNull_GlobalPriorityTx = 1 AND [GlobalPriority"& _ 
                "Tx] IS NULL) OR ([GlobalPriorityTx] = @Original_GlobalPriorityTx)) AND ((@IsNull"& _ 
                "_GlobalPriorityRxEnable = 1 AND [GlobalPriorityRxEnable] IS NULL) OR ([GlobalPri"& _ 
                "orityRxEnable] = @Original_GlobalPriorityRxEnable)) AND ((@IsNull_GlobalPriority"& _ 
                "Rx = 1 AND [GlobalPriorityRx] IS NULL) OR ([GlobalPriorityRx] = @Original_Global"& _ 
                "PriorityRx)) AND ((@IsNull_GlobalHangTime = 1 AND [GlobalHangTime] IS NULL) OR ("& _ 
                "[GlobalHangTime] = @Original_GlobalHangTime)) AND ((@IsNull_GlobalEnableHoldTime"& _ 
                " = 1 AND [GlobalEnableHoldTime] IS NULL) OR ([GlobalEnableHoldTime] = @Original_"& _ 
                "GlobalEnableHoldTime)) AND ((@IsNull_GlobalHoldTimeDuration = 1 AND [GlobalHoldT"& _ 
                "imeDuration] IS NULL) OR ([GlobalHoldTimeDuration] = @Original_GlobalHoldTimeDur"& _ 
                "ation)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GlobalEnableScan", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalEnableScan", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GlobalEnableScan", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalEnableScan", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GlobalPriorityTx", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalPriorityTx", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GlobalPriorityTx", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalPriorityTx", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GlobalPriorityRxEnable", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalPriorityRxEnable", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GlobalPriorityRxEnable", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalPriorityRxEnable", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GlobalPriorityRx", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalPriorityRx", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GlobalPriorityRx", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalPriorityRx", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GlobalHangTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalHangTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GlobalHangTime", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalHangTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GlobalEnableHoldTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalEnableHoldTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GlobalEnableHoldTime", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalEnableHoldTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GlobalHoldTimeDuration", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalHoldTimeDuration", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GlobalHoldTimeDuration", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalHoldTimeDuration", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[GlobalSavedItems] ([Id], [GlobalEnableScan], [GlobalPriorityTx"& _ 
                "], [GlobalPriorityRxEnable], [GlobalPriorityRx], [GlobalHangTime], [GlobalEnable"& _ 
                "HoldTime], [GlobalHoldTimeDuration]) VALUES (@Id, @GlobalEnableScan, @GlobalPrio"& _ 
                "rityTx, @GlobalPriorityRxEnable, @GlobalPriorityRx, @GlobalHangTime, @GlobalEnab"& _ 
                "leHoldTime, @GlobalHoldTimeDuration);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Id, GlobalEnableScan, GlobalPriori"& _ 
                "tyTx, GlobalPriorityRxEnable, GlobalPriorityRx, GlobalHangTime, GlobalEnableHold"& _ 
                "Time, GlobalHoldTimeDuration FROM GlobalSavedItems WHERE (Id = @Id)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GlobalEnableScan", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalEnableScan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GlobalPriorityTx", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalPriorityTx", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GlobalPriorityRxEnable", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalPriorityRxEnable", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GlobalPriorityRx", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalPriorityRx", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GlobalHangTime", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalHangTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GlobalEnableHoldTime", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalEnableHoldTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GlobalHoldTimeDuration", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalHoldTimeDuration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[GlobalSavedItems] SET [Id] = @Id, [GlobalEnableScan] = @GlobalEnabl"& _ 
                "eScan, [GlobalPriorityTx] = @GlobalPriorityTx, [GlobalPriorityRxEnable] = @Globa"& _ 
                "lPriorityRxEnable, [GlobalPriorityRx] = @GlobalPriorityRx, [GlobalHangTime] = @G"& _ 
                "lobalHangTime, [GlobalEnableHoldTime] = @GlobalEnableHoldTime, [GlobalHoldTimeDu"& _ 
                "ration] = @GlobalHoldTimeDuration WHERE (([Id] = @Original_Id) AND ((@IsNull_Glo"& _ 
                "balEnableScan = 1 AND [GlobalEnableScan] IS NULL) OR ([GlobalEnableScan] = @Orig"& _ 
                "inal_GlobalEnableScan)) AND ((@IsNull_GlobalPriorityTx = 1 AND [GlobalPriorityTx"& _ 
                "] IS NULL) OR ([GlobalPriorityTx] = @Original_GlobalPriorityTx)) AND ((@IsNull_G"& _ 
                "lobalPriorityRxEnable = 1 AND [GlobalPriorityRxEnable] IS NULL) OR ([GlobalPrior"& _ 
                "ityRxEnable] = @Original_GlobalPriorityRxEnable)) AND ((@IsNull_GlobalPriorityRx"& _ 
                " = 1 AND [GlobalPriorityRx] IS NULL) OR ([GlobalPriorityRx] = @Original_GlobalPr"& _ 
                "iorityRx)) AND ((@IsNull_GlobalHangTime = 1 AND [GlobalHangTime] IS NULL) OR ([G"& _ 
                "lobalHangTime] = @Original_GlobalHangTime)) AND ((@IsNull_GlobalEnableHoldTime ="& _ 
                " 1 AND [GlobalEnableHoldTime] IS NULL) OR ([GlobalEnableHoldTime] = @Original_Gl"& _ 
                "obalEnableHoldTime)) AND ((@IsNull_GlobalHoldTimeDuration = 1 AND [GlobalHoldTim"& _ 
                "eDuration] IS NULL) OR ([GlobalHoldTimeDuration] = @Original_GlobalHoldTimeDurat"& _ 
                "ion)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Id, GlobalEnableScan, GlobalPriorityTx, GlobalPriorityRxEnable, "& _ 
                "GlobalPriorityRx, GlobalHangTime, GlobalEnableHoldTime, GlobalHoldTimeDuration F"& _ 
                "ROM GlobalSavedItems WHERE (Id = @Id)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GlobalEnableScan", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalEnableScan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GlobalPriorityTx", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalPriorityTx", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GlobalPriorityRxEnable", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalPriorityRxEnable", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GlobalPriorityRx", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalPriorityRx", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GlobalHangTime", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalHangTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GlobalEnableHoldTime", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalEnableHoldTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GlobalHoldTimeDuration", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalHoldTimeDuration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GlobalEnableScan", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalEnableScan", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GlobalEnableScan", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalEnableScan", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GlobalPriorityTx", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalPriorityTx", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GlobalPriorityTx", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalPriorityTx", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GlobalPriorityRxEnable", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalPriorityRxEnable", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GlobalPriorityRxEnable", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalPriorityRxEnable", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GlobalPriorityRx", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalPriorityRx", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GlobalPriorityRx", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalPriorityRx", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GlobalHangTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalHangTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GlobalHangTime", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalHangTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GlobalEnableHoldTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalEnableHoldTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GlobalEnableHoldTime", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalEnableHoldTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GlobalHoldTimeDuration", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalHoldTimeDuration", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GlobalHoldTimeDuration", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlobalHoldTimeDuration", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.WindowsApplication1.My.MySettings.Default.StoredPresetsConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Id, GlobalEnableScan, GlobalPriorityTx, GlobalPriorityRxEnable, GlobalPrio"& _ 
                "rityRx, GlobalHangTime, GlobalEnableHoldTime, GlobalHoldTimeDuration FROM dbo.Gl"& _ 
                "obalSavedItems"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As StoredPresetsDataSet.GlobalSavedItemsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As StoredPresetsDataSet.GlobalSavedItemsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As StoredPresetsDataSet.GlobalSavedItemsDataTable = New StoredPresetsDataSet.GlobalSavedItemsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As StoredPresetsDataSet.GlobalSavedItemsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As StoredPresetsDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "GlobalSavedItems")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Id As Integer, ByVal Original_GlobalEnableScan As String, ByVal Original_GlobalPriorityTx As String, ByVal Original_GlobalPriorityRxEnable As String, ByVal Original_GlobalPriorityRx As String, ByVal Original_GlobalHangTime As String, ByVal Original_GlobalEnableHoldTime As String, ByVal Original_GlobalHoldTimeDuration As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Id,Integer)
            If (Original_GlobalEnableScan Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_GlobalEnableScan,String)
            End If
            If (Original_GlobalPriorityTx Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_GlobalPriorityTx,String)
            End If
            If (Original_GlobalPriorityRxEnable Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_GlobalPriorityRxEnable,String)
            End If
            If (Original_GlobalPriorityRx Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_GlobalPriorityRx,String)
            End If
            If (Original_GlobalHangTime Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_GlobalHangTime,String)
            End If
            If (Original_GlobalEnableHoldTime Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_GlobalEnableHoldTime,String)
            End If
            If (Original_GlobalHoldTimeDuration Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_GlobalHoldTimeDuration,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Id As Integer, ByVal GlobalEnableScan As String, ByVal GlobalPriorityTx As String, ByVal GlobalPriorityRxEnable As String, ByVal GlobalPriorityRx As String, ByVal GlobalHangTime As String, ByVal GlobalEnableHoldTime As String, ByVal GlobalHoldTimeDuration As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Id,Integer)
            If (GlobalEnableScan Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(GlobalEnableScan,String)
            End If
            If (GlobalPriorityTx Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(GlobalPriorityTx,String)
            End If
            If (GlobalPriorityRxEnable Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(GlobalPriorityRxEnable,String)
            End If
            If (GlobalPriorityRx Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(GlobalPriorityRx,String)
            End If
            If (GlobalHangTime Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(GlobalHangTime,String)
            End If
            If (GlobalEnableHoldTime Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(GlobalEnableHoldTime,String)
            End If
            If (GlobalHoldTimeDuration Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(GlobalHoldTimeDuration,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Id As Integer,  _
                    ByVal GlobalEnableScan As String,  _
                    ByVal GlobalPriorityTx As String,  _
                    ByVal GlobalPriorityRxEnable As String,  _
                    ByVal GlobalPriorityRx As String,  _
                    ByVal GlobalHangTime As String,  _
                    ByVal GlobalEnableHoldTime As String,  _
                    ByVal GlobalHoldTimeDuration As String,  _
                    ByVal Original_Id As Integer,  _
                    ByVal Original_GlobalEnableScan As String,  _
                    ByVal Original_GlobalPriorityTx As String,  _
                    ByVal Original_GlobalPriorityRxEnable As String,  _
                    ByVal Original_GlobalPriorityRx As String,  _
                    ByVal Original_GlobalHangTime As String,  _
                    ByVal Original_GlobalEnableHoldTime As String,  _
                    ByVal Original_GlobalHoldTimeDuration As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Id,Integer)
            If (GlobalEnableScan Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(GlobalEnableScan,String)
            End If
            If (GlobalPriorityTx Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(GlobalPriorityTx,String)
            End If
            If (GlobalPriorityRxEnable Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(GlobalPriorityRxEnable,String)
            End If
            If (GlobalPriorityRx Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(GlobalPriorityRx,String)
            End If
            If (GlobalHangTime Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(GlobalHangTime,String)
            End If
            If (GlobalEnableHoldTime Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(GlobalEnableHoldTime,String)
            End If
            If (GlobalHoldTimeDuration Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(GlobalHoldTimeDuration,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_Id,Integer)
            If (Original_GlobalEnableScan Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_GlobalEnableScan,String)
            End If
            If (Original_GlobalPriorityTx Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_GlobalPriorityTx,String)
            End If
            If (Original_GlobalPriorityRxEnable Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_GlobalPriorityRxEnable,String)
            End If
            If (Original_GlobalPriorityRx Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_GlobalPriorityRx,String)
            End If
            If (Original_GlobalHangTime Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_GlobalHangTime,String)
            End If
            If (Original_GlobalEnableHoldTime Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_GlobalEnableHoldTime,String)
            End If
            If (Original_GlobalHoldTimeDuration Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_GlobalHoldTimeDuration,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal GlobalEnableScan As String, ByVal GlobalPriorityTx As String, ByVal GlobalPriorityRxEnable As String, ByVal GlobalPriorityRx As String, ByVal GlobalHangTime As String, ByVal GlobalEnableHoldTime As String, ByVal GlobalHoldTimeDuration As String, ByVal Original_Id As Integer, ByVal Original_GlobalEnableScan As String, ByVal Original_GlobalPriorityTx As String, ByVal Original_GlobalPriorityRxEnable As String, ByVal Original_GlobalPriorityRx As String, ByVal Original_GlobalHangTime As String, ByVal Original_GlobalEnableHoldTime As String, ByVal Original_GlobalHoldTimeDuration As String) As Integer
            Return Me.Update(Original_Id, GlobalEnableScan, GlobalPriorityTx, GlobalPriorityRxEnable, GlobalPriorityRx, GlobalHangTime, GlobalEnableHoldTime, GlobalHoldTimeDuration, Original_Id, Original_GlobalEnableScan, Original_GlobalPriorityTx, Original_GlobalPriorityRxEnable, Original_GlobalPriorityRx, Original_GlobalHangTime, Original_GlobalEnableHoldTime, Original_GlobalHoldTimeDuration)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _pRCtrainerTableAdapter As PRCtrainerTableAdapter
        
        Private _sATCOMpresetsTableAdapter As SATCOMpresetsTableAdapter
        
        Private _optionCodes25kHzTableAdapter As OptionCodes25kHzTableAdapter
        
        Private _optionCodes5kHzTableAdapter As OptionCodes5kHzTableAdapter
        
        Private _cTCSSTableAdapter As CTCSSTableAdapter
        
        Private _globalSavedItemsTableAdapter As GlobalSavedItemsTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property PRCtrainerTableAdapter() As PRCtrainerTableAdapter
            Get
                Return Me._pRCtrainerTableAdapter
            End Get
            Set
                Me._pRCtrainerTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property SATCOMpresetsTableAdapter() As SATCOMpresetsTableAdapter
            Get
                Return Me._sATCOMpresetsTableAdapter
            End Get
            Set
                Me._sATCOMpresetsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property OptionCodes25kHzTableAdapter() As OptionCodes25kHzTableAdapter
            Get
                Return Me._optionCodes25kHzTableAdapter
            End Get
            Set
                Me._optionCodes25kHzTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property OptionCodes5kHzTableAdapter() As OptionCodes5kHzTableAdapter
            Get
                Return Me._optionCodes5kHzTableAdapter
            End Get
            Set
                Me._optionCodes5kHzTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CTCSSTableAdapter() As CTCSSTableAdapter
            Get
                Return Me._cTCSSTableAdapter
            End Get
            Set
                Me._cTCSSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property GlobalSavedItemsTableAdapter() As GlobalSavedItemsTableAdapter
            Get
                Return Me._globalSavedItemsTableAdapter
            End Get
            Set
                Me._globalSavedItemsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._pRCtrainerTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._pRCtrainerTableAdapter.Connection) Is Nothing)) Then
                    Return Me._pRCtrainerTableAdapter.Connection
                End If
                If ((Not (Me._sATCOMpresetsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._sATCOMpresetsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._sATCOMpresetsTableAdapter.Connection
                End If
                If ((Not (Me._optionCodes25kHzTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._optionCodes25kHzTableAdapter.Connection) Is Nothing)) Then
                    Return Me._optionCodes25kHzTableAdapter.Connection
                End If
                If ((Not (Me._optionCodes5kHzTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._optionCodes5kHzTableAdapter.Connection) Is Nothing)) Then
                    Return Me._optionCodes5kHzTableAdapter.Connection
                End If
                If ((Not (Me._cTCSSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cTCSSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cTCSSTableAdapter.Connection
                End If
                If ((Not (Me._globalSavedItemsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._globalSavedItemsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._globalSavedItemsTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._pRCtrainerTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._sATCOMpresetsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._optionCodes25kHzTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._optionCodes5kHzTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cTCSSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._globalSavedItemsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As StoredPresetsDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._pRCtrainerTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.PRCtrainer.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._pRCtrainerTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._sATCOMpresetsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.SATCOMpresets.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._sATCOMpresetsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._optionCodes25kHzTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.OptionCodes25kHz.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._optionCodes25kHzTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._optionCodes5kHzTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.OptionCodes5kHz.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._optionCodes5kHzTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cTCSSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CTCSS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cTCSSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._globalSavedItemsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.GlobalSavedItems.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._globalSavedItemsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As StoredPresetsDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._pRCtrainerTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.PRCtrainer.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._pRCtrainerTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._sATCOMpresetsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.SATCOMpresets.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._sATCOMpresetsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._optionCodes25kHzTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.OptionCodes25kHz.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._optionCodes25kHzTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._optionCodes5kHzTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.OptionCodes5kHz.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._optionCodes5kHzTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cTCSSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CTCSS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cTCSSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._globalSavedItemsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.GlobalSavedItems.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._globalSavedItemsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As StoredPresetsDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._globalSavedItemsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.GlobalSavedItems.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._globalSavedItemsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cTCSSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CTCSS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cTCSSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._optionCodes5kHzTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.OptionCodes5kHz.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._optionCodes5kHzTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._optionCodes25kHzTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.OptionCodes25kHz.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._optionCodes25kHzTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._sATCOMpresetsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.SATCOMpresets.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._sATCOMpresetsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._pRCtrainerTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.PRCtrainer.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._pRCtrainerTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As StoredPresetsDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._pRCtrainerTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._pRCtrainerTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._sATCOMpresetsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._sATCOMpresetsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._optionCodes25kHzTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._optionCodes25kHzTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._optionCodes5kHzTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._optionCodes5kHzTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._cTCSSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cTCSSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._globalSavedItemsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._globalSavedItemsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._pRCtrainerTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._pRCtrainerTableAdapter, Me._pRCtrainerTableAdapter.Connection)
                    Me._pRCtrainerTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._pRCtrainerTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._pRCtrainerTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._pRCtrainerTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._pRCtrainerTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._sATCOMpresetsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._sATCOMpresetsTableAdapter, Me._sATCOMpresetsTableAdapter.Connection)
                    Me._sATCOMpresetsTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._sATCOMpresetsTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._sATCOMpresetsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._sATCOMpresetsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._sATCOMpresetsTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._optionCodes25kHzTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._optionCodes25kHzTableAdapter, Me._optionCodes25kHzTableAdapter.Connection)
                    Me._optionCodes25kHzTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._optionCodes25kHzTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._optionCodes25kHzTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._optionCodes25kHzTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._optionCodes25kHzTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._optionCodes5kHzTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._optionCodes5kHzTableAdapter, Me._optionCodes5kHzTableAdapter.Connection)
                    Me._optionCodes5kHzTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._optionCodes5kHzTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._optionCodes5kHzTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._optionCodes5kHzTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._optionCodes5kHzTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cTCSSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cTCSSTableAdapter, Me._cTCSSTableAdapter.Connection)
                    Me._cTCSSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cTCSSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cTCSSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cTCSSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cTCSSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._globalSavedItemsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._globalSavedItemsTableAdapter, Me._globalSavedItemsTableAdapter.Connection)
                    Me._globalSavedItemsTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._globalSavedItemsTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._globalSavedItemsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._globalSavedItemsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._globalSavedItemsTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._pRCtrainerTableAdapter) Is Nothing) Then
                    Me._pRCtrainerTableAdapter.Connection = CType(revertConnections(Me._pRCtrainerTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._pRCtrainerTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._sATCOMpresetsTableAdapter) Is Nothing) Then
                    Me._sATCOMpresetsTableAdapter.Connection = CType(revertConnections(Me._sATCOMpresetsTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._sATCOMpresetsTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._optionCodes25kHzTableAdapter) Is Nothing) Then
                    Me._optionCodes25kHzTableAdapter.Connection = CType(revertConnections(Me._optionCodes25kHzTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._optionCodes25kHzTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._optionCodes5kHzTableAdapter) Is Nothing) Then
                    Me._optionCodes5kHzTableAdapter.Connection = CType(revertConnections(Me._optionCodes5kHzTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._optionCodes5kHzTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cTCSSTableAdapter) Is Nothing) Then
                    Me._cTCSSTableAdapter.Connection = CType(revertConnections(Me._cTCSSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cTCSSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._globalSavedItemsTableAdapter) Is Nothing) Then
                    Me._globalSavedItemsTableAdapter.Connection = CType(revertConnections(Me._globalSavedItemsTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._globalSavedItemsTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
